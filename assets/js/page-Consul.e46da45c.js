(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{691:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"consul"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#consul"}},[s._v("#")]),s._v(" Consul")]),s._v(" "),a("p",[s._v("：一个 Web 服务器，提供了配置管理、服务发现、DNS 等功能。")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.consul.io/docs",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("发音为 "),a("code",[s._v("/ˈkɒnsl/")]),s._v(" 。")]),s._v(" "),a("li",[s._v("由 HashiCorp 公司采用 Golang 开发。")])]),s._v(" "),a("h2",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("架构：")]),s._v(" "),a("ul",[a("li",[s._v("部署多个 Consul agent 进程，组成分布式集群。")]),s._v(" "),a("li",[s._v("业务程序向一个 agent 发出请求，使用 Consul 的功能。")])])]),s._v(" "),a("li",[a("p",[s._v("agent 又称为 node ，有两种运行模式：")]),s._v(" "),a("ul",[a("li",[s._v("client\n"),a("ul",[a("li",[s._v("：普通的 agent 。")]),s._v(" "),a("li",[s._v("业务程序访问任一 agent ，都能使用 Consul 的功能。")])])]),s._v(" "),a("li",[s._v("server\n"),a("ul",[a("li",[s._v("：比 client 多了维护集群的责任。")]),s._v(" "),a("li",[s._v("一个 Consul 集群至少要有 1 个 server 节点，负责存储集群数据。")]),s._v(" "),a("li",[s._v("集群采用 Raft 算法实现分布式一致性。\n"),a("ul",[a("li",[s._v("server 之间会自行选出一个 server 担任 leader ，负责引导集群。其它 server 则担任 follower 。")]),s._v(" "),a("li",[s._v("每次修改集群数据时需要 quorum 个 server 同意。")])])]),s._v(" "),a("li",[s._v("建议部署 3 或 5 个 server ，此时允许 1 或 2 个 server 故障，实现高可用。\n"),a("ul",[a("li",[s._v("client 数量不影响集群的可用性，可以部署上万节点。")])])])])])])]),s._v(" "),a("li",[a("p",[s._v("agent 的状态：")]),s._v(" "),a("ul",[a("li",[s._v("agent 进程启动，通过 join 命令加入集群，标记为 alive 状态。")]),s._v(" "),a("li",[s._v("如果一个 agent 不能被其它 agent 访问到，则标记为 failed 状态。\n"),a("ul",[a("li",[s._v("这可能是因为网络不通，或 agent 崩溃。")])])]),s._v(" "),a("li",[s._v("如果一个 agent 通过 leave 命令退出集群，则标记为 left 状态。\n"),a("ul",[a("li",[s._v("比如 agent 进程正常终止时，会主动退出集群。")])])])])]),s._v(" "),a("li",[a("p",[s._v("agent 采用多种通信协议，监听不同的端口：")]),s._v(" "),a("ul",[a("li",[s._v("agent 之间通过 RPC 协议进行通信，传输层协议为 TCP 。")]),s._v(" "),a("li",[s._v("agent 之间通过 Gossip 协议进行节点发现、服务发现，传输层协议同时采用 TCP、UDP 。\n"),a("ul",[a("li",[s._v("Gossip 协议：基于 Serf 库开发，用于在集群广播消息，比如节点状态。")]),s._v(" "),a("li",[s._v("agent 分别为 LAN、WAN 监听一个端口，提供 Gossip 服务。")])])]),s._v(" "),a("li",[s._v("agent 可以提供 HTTP、HTTPS、gRPC 端口供业务程序访问，传输层协议为 TCP 。")]),s._v(" "),a("li",[s._v("agent 可以提供 DNS 端口供业务程序访问，传输层协议同时采用 TCP、UDP 。")])])]),s._v(" "),a("li",[a("p",[s._v("Consul 支持在集群中划分多个数据中心（Data Center）。")]),s._v(" "),a("ul",[a("li",[s._v("每个数据中心相当于一个子集群，各有一个 leader server 。")]),s._v(" "),a("li",[s._v("每个数据中心代表一个局域网，包含一组 agent ，可以通过 LAN 通信。\n"),a("ul",[a("li",[s._v("不同数据中心之间的 agent 通过 WAN 通信。")]),s._v(" "),a("li",[s._v("每个数据中心拥有一个 Gossip LAN 节点池，记录该局域网的所有节点。")]),s._v(" "),a("li",[s._v("整个集群拥有一个 Gossip WAN 节点池，记录集群的所有节点。")])])]),s._v(" "),a("li",[s._v("用户可以向集群的任一 agent 发出请求，会被自动转发到正确的节点，基于 RPC 通信。\n"),a("ul",[a("li",[s._v("如果 agent 收到指向数据中心的写请求，则会自动转发到 leader 节点。")]),s._v(" "),a("li",[s._v("如果 agent 收到指向其它数据中心的请求，则会转发到该数据中心的任一节点。")])])])])]),s._v(" "),a("li",[a("p",[s._v("Consul 的 Enterprise 版本支持划分多个 namespace ，用于隔离 service、KV、ACL 数据。")])]),s._v(" "),a("li",[a("p",[s._v("Consul 启用 Connect 功能时，会在服务之间启用 TLS 加密通信。")]),s._v(" "),a("ul",[a("li",[s._v("支持透明代理服务的流量，实现 Service Mesh 。")]),s._v(" "),a("li",[s._v("支持用 Intention 功能允许、禁止服务之间的网络连通。")])])])]),s._v(" "),a("h2",{attrs:{id:"用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[s._v("#")]),s._v(" 用法")]),s._v(" "),a("h3",{attrs:{id:"服务发现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#服务发现"}},[s._v("#")]),s._v(" 服务发现")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("服务发现的工作流程：")]),s._v(" "),a("ol",[a("li",[s._v("访问 agent ，注册服务。")]),s._v(" "),a("li",[s._v("访问 agent ，通过 HTTP 或 DNS 端口查询已注册的服务。")])])]),s._v(" "),a("li",[a("p",[s._v("Consul 集群将已注册的所有节点、服务的信息保存在一个称为 catalog 的命名空间中，可以通过 API 访问。")]),s._v(" "),a("ul",[a("li",[s._v("注销一个对象，就会从 catalog 删除其存在。")]),s._v(" "),a("li",[s._v("Consul 的设计是在每个主机上部署一个 agent ，让每个主机上的业务程序访问本机的 agent 进行服务注册。\n"),a("ul",[a("li",[s._v("一个 agent 变为 left 状态时，会自动注销该 agent 上注册的所有服务。")])])]),s._v(" "),a("li",[s._v("agent 会将自己注册为名为 consul 的服务，但不存在健康检查。")])])]),s._v(" "),a("li",[a("p",[s._v("一个 service 的信息示例：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"ID"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"django"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该服务在当前 agent 上的唯一 ID 。如果未指定，则采用服务名")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Service"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"django"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 服务名。注册服务时只有该字段是必填的")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Address"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.0.0.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 服务的 IP 地址或主机名。如果未指定，则采用当前 agent 的 IP 地址")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Port"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Datacenter"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dc1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该服务所属的数据中心")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"TaggedAddresses"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可以给服务附加多个地址")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"lan"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// LAN 地址，供同一数据中心的其它服务访问。默认为 IPv4 类型")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Address"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.0.0.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Port"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"wan"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// WAN 地址，供其它数据中心的服务访问。默认为 IPv4 类型")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Address"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.0.0.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Port"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Tags"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可以给服务加上一些字符串类型的标签")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"enable_tag_override"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 是否允许其它 agent 修改该服务的 tag")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Meta"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 可以给服务加上一些键值对类型的元数据，默认为 false")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"description"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"This is for test."')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"checks"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 健康检查的任务，默认为空")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Weights"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该服务存在其它实例时，指定其在 DNS SRV 响应中的权重，默认为 1")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Passing"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Warning"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br")])])])]),s._v(" "),a("h4",{attrs:{id:"健康检查"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#健康检查"}},[s._v("#")]),s._v(" 健康检查")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("每个 agent 会定期进行健康检查，并更新 catalog 中的信息。")])]),s._v(" "),a("li",[a("p",[s._v("健康检查的对象分为两种：")]),s._v(" "),a("ul",[a("li",[s._v("节点：该 agent 本身，是否运行、可连接。")]),s._v(" "),a("li",[s._v("服务：该 agent 上注册的各个服务。")])])]),s._v(" "),a("li",[a("p",[s._v("健康检查的结果分为多种：")]),s._v(" "),a("ul",[a("li",[s._v("passing ：健康。")]),s._v(" "),a("li",[s._v("warning ：存在异常，但依然工作。")]),s._v(" "),a("li",[s._v("failing、critical ：不健康。")])])]),s._v(" "),a("li",[a("p",[s._v("每个节点默认启用 Serf 类型的监控检查，而每个服务可启用以下类型的健康检查：")]),s._v(" "),a("ul",[a("li",[s._v("Script ：指定一个 shell 命令，定期执行一次。\n"),a("ul",[a("li",[s._v("如果退出码为 0 则视作 passing ，为 1 则视作 warning ，为其它值则视作 failing 。")]),s._v(" "),a("li",[s._v("执行时的 stdout、stderr 会被记录到检查结果的 output 字段，可在 Web UI 查看。")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"args"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/bin/curl"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"127.0.0.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "id": "xx",')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "name": "xx",')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "interval": "5s",                    // 每隔 interval 时间执行一次')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "timeout": "10s",                    // 每次检查的超时时间')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "status": "critical",                 // 在第一次健康检查之前，服务的默认状态')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "deregister_critical_service_after": "30s"  // 如果服务实例变为 critical 状态超过一定时间，则注销。默认禁用该功能')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])]),s._v(" "),a("li",[s._v("HTTP ：指定一个 URL ，定期发出一个 HTTP 请求。\n"),a("ul",[a("li",[s._v("如果状态码为 200 则视作 passing ，为 429 则视作 warning ，为其它值则视作 failing 。")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"http"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://localhost/health"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"method"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"POST"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 请求方法，默认为 GET")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"header"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"Content-Type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"application/json"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"body"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"{\\"check\\": \\"is_running\\"}"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[s._v("TCP ：指定主机名和端口，定期尝试建立一次 TCP 连接。\n"),a("ul",[a("li",[s._v("如果连接成功则视作 success ，否则视作 critical 。")])]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"tcp"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"localhost:80"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[s._v("Alias ：指定另一个节点或服务，跟随其状态。"),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"alias_node"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 目标节点。默认为当前节点")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"alias_service"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"web"')]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 目标服务。如果不指定则跟随节点的状态")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[s._v("Docker ：通过 docker exec 执行 shell 脚本。")]),s._v(" "),a("li",[s._v("TTL ：要求服务在一定时间内向 agent 的特定 URL 发送 HTTP 请求，超时则视作异常。")]),s._v(" "),a("li",[s._v("gRPC")])])]),s._v(" "),a("li",[a("p",[s._v("一个服务要通过自身的健康检查（如果要求检查），并且所在 agent 也通过健康检查，才标记为健康状态。")]),s._v(" "),a("ul",[a("li",[s._v("非健康状态的服务不会被自动删除。")])])])]),s._v(" "),a("h4",{attrs:{id:"dns"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#dns"}},[s._v("#")]),s._v(" DNS")]),s._v(" "),a("ul",[a("li",[s._v("Consul 支持通过 DNS 请求查询节点、服务的地址。")]),s._v(" "),a("li",[s._v("域名格式如下："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("node"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(".node"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(".datacenter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("."),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("domain"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 节点的域名")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("tag."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("service"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(".service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(".datacenter"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("."),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("domain"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 服务的域名")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("如果不指定数据中心，则默认采用当前 agent 的数据中心。")]),s._v(" "),a("li",[s._v("查询服务时，可以加上 tag 进行筛选。\n"),a("ul",[a("li",[s._v("如果有多个健康的服务实例，则根据权重随机选择一个，返回其地址。")]),s._v(" "),a("li",[s._v("如果不存在健康的服务实例，则查询结果为空。")])])]),s._v(" "),a("li",[s._v("DNS 记录为 A 类型，查询服务时还支持 SRV 类型。")]),s._v(" "),a("li",[s._v("DNS 记录的 TTL 默认为 0 。")])])]),s._v(" "),a("li",[s._v("例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dig")]),s._v(" @10.0.0.1 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8600")]),s._v(" +short node1.node.consul          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询节点")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dig")]),s._v(" @10.0.0.1 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8600")]),s._v(" +short node1.node.dc2.consul      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询其它数据中心的节点")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dig")]),s._v(" @10.0.0.1 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8600")]),s._v(" +short django.service.consul      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询服务")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("dig")]),s._v(" @10.0.0.1 -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8600")]),s._v(" +short django.service.consul  SRV "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查询 DNS SRV 记录")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"配置管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置管理"}},[s._v("#")]),s._v(" 配置管理")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Consul 提供了 Key/Value 形式的数据存储功能，常用于存储配置信息。")]),s._v(" "),a("ul",[a("li",[s._v("如果 key 以 / 结尾，则会创建一个文件夹")]),s._v(" "),a("li",[s._v("value 的长度不能超过 512KB 。")])])]),s._v(" "),a("li",[a("p",[s._v("Consul 集群的所有节点都拥有一份 KV 数据的副本，供用户访问。")]),s._v(" "),a("ul",[a("li",[s._v("server 节点才有权修改 KV 数据。如果用户向 client 节点发出写请求，则会被转发到 server 节点。")])])]),s._v(" "),a("li",[a("p",[s._v("提供了 acquire、release 功能，用于锁定、解锁与 session 关联的 key 。")])])]),s._v(" "),a("h3",{attrs:{id:"watch"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#watch"}},[s._v("#")]),s._v(" watch")]),s._v(" "),a("ul",[a("li",[s._v("Consul 提供了 watch 功能，用于监视某些事件，当事件发生时执行 handler 任务。\n"),a("ul",[a("li",[s._v("可以监视节点、服务、KV 的变化，或者用户自定义的事件。")]),s._v(" "),a("li",[s._v("handler 有两种类型：\n"),a("ul",[a("li",[s._v("执行 shell 脚本")]),s._v(" "),a("li",[s._v("发送 HTTP 请求")])])])])]),s._v(" "),a("li",[s._v("例：在 Consul 配置文件中添加 watch 的配置"),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"watches"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 定义一组 watch")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"key"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// watch 类型为 key")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"key"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis/config"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定要监视的 key")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"handler_type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"script"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"args"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/usr/bin/my_handler.sh"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-redis"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"service"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// watch 类型为 service")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"service"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定要监视的服务名")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"passingonly"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 添加筛选条件，只监视健康的服务")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"handler_type"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"http_handler_config"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"path"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://10.0.0.1/watch/handler"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"method"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"POST"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"cli"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cli"}},[s._v("#")]),s._v(" CLI")]),s._v(" "),a("ul",[a("li",[s._v("使用 consul 命令行工具可以启动 agent 服务器，也可以作为客户端与 agent 交互。用法："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("consul\n      agent                           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动 agent 进程，在前台运行")]),s._v("\n          -server                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 采用 server 运行模式")]),s._v("\n          -config-file "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定配置文件")]),s._v("\n          -config-dir /consul/config  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定配置目录，加载该目录下的配置文件")]),s._v("\n\n      members                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有节点")]),s._v("\n      force-leave "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("node"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 强制让一个节点 leave ，进入 left 状态。但如果它依然运行，则可能重新加入集群")]),s._v("\n          --prune                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除节点。默认会等待 reconnect_timeout 长时间无响应才删除")]),s._v("\n      operator\n          raft                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 操作 raft 协议")]),s._v("\n              list-peers              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有 raft 节点")]),s._v("\n              remove-peer -address"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.0.0.1:8300"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除一个 raft 节点")]),s._v("\n\n      catalog                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 访问 catalog")]),s._v("\n          datacenters           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有数据中心")]),s._v("\n          nodes                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有节点")]),s._v("\n            -service "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("service"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只显示指定服务所在的节点")]),s._v("\n            -detailed\n          services              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有服务")]),s._v("\n            -node "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("node"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只显示指定节点上的服务")]),s._v("\n            -tags               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 增加显示 tags")]),s._v("\n\n      kv                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 访问 KV 数据")]),s._v("\n          get "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 读取一个 key ，返回其 value")]),s._v("\n            -keys               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 访问前缀匹配的所有 key ，不包括子 key")]),s._v("\n            -recurse            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 递归访问文件夹中的子 key")]),s._v("\n          put "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n          delete "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("prefix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导出前缀匹配的所有 key ，包括子 key 。返回值为 JSON 格式")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("import")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导入 key 。输入必须为 JSON 格式")]),s._v("\n            -prefix "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("prefix"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只导入前缀匹配的 key")]),s._v("\n\n      snapshot                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 访问 snapshot 功能")]),s._v("\n          save    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 保存一个快照文件，包含集群当前的 catalog、kv、acl 等数据")]),s._v("\n          restore "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导入一个快照文件")]),s._v("\n          inspect "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看快照的信息")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"api"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#api"}},[s._v("#")]),s._v(" API")]),s._v(" "),a("ul",[a("li",[s._v("agent 提供了一些 Restful API ："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关于 agent")]),s._v("\nGET   /v1/agent/members           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取所有 agent 的信息")]),s._v("\nPUT   /v1/agent/reload            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 让当前 agent 重新加载其配置文件")]),s._v("\nPUT   /v1/agent/leave             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 让当前 agent 正常退出集群")]),s._v("\nGET   /v1/agent/checks            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取当前 agent 上所有健康检查的结果信息")]),s._v("\nGET   /v1/agent/services                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取当前 agent 上注册的所有服务的信息")]),s._v("\nGET   /v1/agent/service/"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("serivce.id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取当前 agent 上注册的指定服务的信息")]),s._v("\nPUT   /v1/agent/service/register                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注册服务，这会调用 /v1/catalog/register")]),s._v("\nPUT   /v1/agent/service/deregister/"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("serivce.id"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注销服务，这会调用 /v1/catalog/deregister")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关于 catalog")]),s._v("\nPUT   /v1/catalog/register        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在 catalog 中注册对象")]),s._v("\nPUT   /v1/catalog/deregister      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在 catalog 中注销对象")]),s._v("\nGET   /v1/catalog/nodes           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有节点")]),s._v("\nGET   /v1/catalog/services        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有服务")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关于 Key/Value")]),s._v("\nGET     /v1/kv/"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取指定的 key 的信息，包括 key、value")]),s._v("\nPUT     /v1/kv/"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建 key ，如果该 key 已存在则更新它")]),s._v("\nDELETE  /v1/kv/"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除 key")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[s._v("#")]),s._v(" 部署")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("用 docker-compose 部署：")]),s._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("consul")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" consul\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" consul"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("1.9.8\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" agent\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" unless"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("stopped\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 8300"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8300")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 8301"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("8302"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("8301"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8302")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 8301"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("8302"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("8301"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("8302/udp\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 8500"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8500")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 8600"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8600")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 8600"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("8600/udp\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /etc/localtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/etc/localtime"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("ro\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/consul/config\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/consul/data\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("ul",[a("li",[s._v("容器内以非 root 用户运行服务，需要调整挂载目录的权限："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p  config data\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" -R  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("agent 启动时的日志示例：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Found address "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10.0.0.1'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" interface "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'eth0'")]),s._v(", setting "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v(" option"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发现网卡的 IP 地址，绑定它")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Starting Consul agent"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n          Version: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'v1.6.1'")]),s._v("\n          Node ID: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2e5r747a-806a-a337-8a0f-7ac5o98d0cc4'")]),s._v("\n        Node name: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'node1'")]),s._v("\n        Datacenter: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'dc1'")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Segment: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'<all>'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n            Server: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Bootstrap: "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 是否采用 server 运行模式")]),s._v("\n      Client Addr: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("HTTP: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8500")]),s._v(", HTTPS: -1, gRPC: -1, DNS: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8600")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# client_addr")]),s._v("\n      Cluster Addr: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("LAN: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8301")]),s._v(", WAN: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8302")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# bind_addr")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Consul 支持多种配置方式，优先级从高到低如下：")]),s._v(" "),a("ul",[a("li",[s._v("命令行参数")]),s._v(" "),a("li",[s._v("配置文件：可以是 JSON 或 HCL 格式，文件扩展名为 .json 或 .hcl 。")]),s._v(" "),a("li",[s._v("默认配置")])])]),s._v(" "),a("li",[a("p",[s._v("配置文件示例：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 关于磁盘")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "data_dir": "/consul/data" ,')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "log_file": "/var/log/consul" ,')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "log_level": "INFO",')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "log_json": true,        // 是否让日志采用 JSON 格式，默认禁用')]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 关于节点")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "datacenter": "dc1",     // 指定该 agent 所属的数据中心名称，默认为 dc1')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"node_name"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"node1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定该节点的名称，在集群中唯一。默认采用主机名")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "node_id": "xxxx",       // 指定该节点的 UUID 。 node 名称可以修改，但 node_id 不会变')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"server"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// agent 是否采用 server 运行模式。默认为 false ，采用 client 运行模式")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"ui_config"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"enabled"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 是否让 HTTP 端口提供 Web UI 。默认不提供，只提供 Restful API")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 关于 IP 地址")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "bind_addr": "0.0.0.0",            // RPC 通信时绑定的地址，供其它 gent 访问，默认绑定 0.0.0.0')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "serf_lan": "0.0.0.0",             // Gossip LAN 通信时绑定的地址，默认等于 bind_addr')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "serf_wan": "0.0.0.0",             // Gossip WAN 通信时绑定的地址，默认等于 bind_addr')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"advertise_addr"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.0.0.1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 公布一个地址，供其它 agent 访问。默认公布本机的 IPv4 地址，如果本机有多个地址则启动失败")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "advertise_addr_wan": "10.0.0.1",  // 公布一个地址，供其它 agent 通过 WAN 访问。默认等于 advertise_addr')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"client_addr"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.0.0.0"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 该 agent 的 HTTP、HTTPS、DNS、gRPC 服务绑定的地址，供业务程序访问。默认绑定 localhost")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 关于各服务监听的端口，-1 表示禁用")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "ports": {')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//     "server":   8300,')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//     "serf-lan": 8301,')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//     "serf-wan": 8302,')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//     "http":     8500,')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//     "https":    -1  ,        // 默认为 -1 ，启用时建议为 8501')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//     "grpc":     -1  ,        // 默认为 -1 ，启用时建议为 8502')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//     "dns":      8600,')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// },")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 关于加入集群")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "bootstrap": false,          // 该 agent 启动之后是否直接担任 leader 。默认为 false ，避免与集群已有的 leader 冲突。集群只包含一个节点时，需要启用该参数')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"bootstrap_expect"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当发现指定数量的 server 时，才开始引导集群，选出 leader 。应该设置成与实际 server 总数相同，以避免脑裂")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "start_join": ["<IP>"],      // agent 启动时，连接到其它 agent 的 LAN 端口，加入其所属的集群。如果加入失败，则启动失败')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "start_join_wan": ["<IP>"],  // 通过 WAN 端口加入集群')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"retry_join"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<IP>"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 代替 start_join 方式，如果加入失败，则自动重试")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "retry_interval": "30s",     // 重试的间隔时间')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "retry_max": "0",            // 重试次数。默认为 0 ，即不限制')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "retry_join_wan": ["<IP>"],  // 代理 start_join_wan 方式')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "retry_interval_wan": "30s",')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "retry_max_wan": "0",')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"rejoin_after_leave"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// agent 每次启动是否重新 join 。默认为 false ，只要成功 join 一次之后，重启时并不会重新 join ，导致该 agent 可能故障过久而被被集群删除")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "reconnect_timeout": "72h",      // 删除集群中长时间无响应的 LAN 节点，包括 failed、left 状态')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "reconnect_timeout_wan": "72h",  // 删除集群中长时间无响应的 WAN 节点')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "limits": {')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//     "http_max_conns_per_client": 200  // 限制每个客户端 IP 的并发连接数')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// }")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 关于 DNS")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "domain": "consul",          // 让 agent 解析指向该域名的 DNS 查询请求，其它请求则转发给上游 DNS 服务器')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "recursors": "<IP>",         // 添加上游 DNS 服务器')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "dns_config": {')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//     "node_ttl": "0s",        // ttl ，默认为 0 ，即禁用缓存')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//     "service_ttl": "0s",')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//     "only_passing": false,   // DNS 结果中是否排除是否健康检查为 warning 或 critical 的节点。默认为 false ，只排除 failing 的节点')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// }")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"acl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#acl"}},[s._v("#")]),s._v(" ACL")]),s._v(" "),a("p",[s._v("Consul 支持为 HTTP、RPC 通信设置 ACL 规则，主要概念如下：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Token")]),s._v(" "),a("ul",[a("li",[s._v("：一个格式像 UUID 的十六进制字符串，由 Consul 随机生成，代表一个用户。")]),s._v(" "),a("li",[s._v("token 的属性：\n"),a("ul",[a("li",[s._v("AccessorID ：token 的标识符，不需要保密。")]),s._v(" "),a("li",[s._v("SecretID ：用户实际使用的 token 。")])])]),s._v(" "),a("li",[s._v("访问 Consul 时，可使用 token 进行身份认证，有以下几种方法：\n"),a("ul",[a("li",[s._v("访问 Web 页面，点击右上角的 Log in 按钮，输入 token 进行登录。")]),s._v(" "),a("li",[s._v("客户端发送 HTTP 请求，在 URL 请求参数中包含 "),a("code",[s._v("?token=******")]),s._v(" ，或者在 Header 中包含 "),a("code",[s._v("Authorization: Bearer ******")]),s._v(" 。")]),s._v(" "),a("li",[s._v("执行 consul 命令，加上参数 "),a("code",[s._v("-token=******")]),s._v(" ，或者声明环境变量 "),a("code",[s._v("export CONSUL_HTTP_TOKEN=******")]),s._v(" 。")])])])])]),s._v(" "),a("li",[a("p",[s._v("Policy")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("：访问策略，用于控制某个 token 的访问权限。")])]),s._v(" "),a("li",[a("p",[s._v("格式如下：")]),s._v(" "),a("div",{staticClass:"language-hcl line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[s._v("<resource> "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<name>"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("policy")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"<policy>"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("语义：对 name 名称的 resource 资源，策略为 policy 。")]),s._v(" "),a("li",[s._v("resource 有多种取值，代表对不同类型资源的操作："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("agent     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Consul agent ，可执行 join、leave 等操作")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("node")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据节点")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v("\nkey       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# KV 资源")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("上述 resource 还可扩展成 "),a("code",[s._v("<resource>_prefix")]),s._v(" ，用于进行前缀匹配。如果指定的前缀为空，则匹配所有名称的该类资源。")])])]),s._v(" "),a("li",[s._v("policy 有多种取值，从高到低如下："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("deny      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不允许读、写")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许读、写、list")]),s._v("\nlist      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只对 key 资源有效，允许递归读取当前 key 的子 key")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("read")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只允许读")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("在 Web 界面，node、service 资源总是只读的，不支持修改。")])])])])]),s._v(" "),a("li",[a("p",[s._v("例：")]),s._v(" "),a("div",{staticClass:"language-hcl line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[s._v("service_prefix "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许读取所有服务")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("policy")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"read"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nservice "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"service1"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许读写指定服务")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("policy")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"write"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("div",{staticClass:"language-hcl line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[s._v("key "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("                          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许读取名为空的 key ，从而在 Web 端显示 Key/Value 页面")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("policy")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"read"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nkey_prefix "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test_env/project1"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许读写某个路径开头的 key")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("policy")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"read"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("内置了一个名为 Global Management 的策略，赋予对所有资源的访问权限。")])]),s._v(" "),a("li",[a("p",[s._v("内置了 Service Identities 和 Node Identities ，作为服务、node 的策略模板。")])])])]),s._v(" "),a("li",[a("p",[s._v("Role")]),s._v(" "),a("ul",[a("li",[s._v("：角色。可以给某个角色分配一组 Policy ，然后让一组 token 采用该角色。")])])])]),s._v(" "),a("h4",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),a("p",[s._v("启用 ACL 的步骤：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("修改配置文件：")]),s._v(" "),a("div",{staticClass:"language-json line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-json"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"acl"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"enabled"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 是否启用 ACL ，默认禁用")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"default_policy"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"deny"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 当用户的操作不匹配已有的 ACL 规则时，默认采用的策略。默认为 allow")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"tokens"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('// "default": "******",   // 如果设置了 default token ，则会取代 Anonymous token')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v('"agent"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"******"')]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 指定 agent 之间通信时采用的 token 。如果未指定，则采用 Anonymous token")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("执行以下命令，初始化 ACL ：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("consul acl bootstrap\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这会创建两个 token ：")]),s._v(" "),a("ul",[a("li",[s._v("管理员 token ：分配 Global Management 策略。")]),s._v(" "),a("li",[s._v("Anonymous token ：不分配策略。当 agent 收到的请求不包含 token 时，会当作该 token 处理。")])])]),s._v(" "),a("li",[a("p",[s._v("访问 Web 页面，用管理员 token 登录，创建一个供 agent 使用的 token ，分配的 policy 如下：")]),s._v(" "),a("div",{staticClass:"language-hcl line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[s._v("node_prefix "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("policy")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"write"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\nservice_prefix "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("policy")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"read"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("将该 token 保存到配置文件的 acl.tokens.agent 中，重启 agent 即可生效。")])]),s._v(" "),a("li",[a("p",[s._v("创建一个允许读取所有 node 的策略：")]),s._v(" "),a("div",{staticClass:"language-hcl line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-hcl"}},[a("code",[s._v("node_prefix "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('""')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token property"}},[s._v("policy")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"read"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("DNS 请求不支持传递 token ，因此建议将该策略分配给 Anonymous token 。")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);