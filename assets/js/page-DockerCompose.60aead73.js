(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{610:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"docker-compose"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#docker-compose"}},[s._v("#")]),s._v(" Docker Compose")]),s._v(" "),a("p",[s._v("：一个 Docker 容器的编排工具。")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://docs.docker.com/compose/compose-file/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("由 Docker 公司发布，采用 Python 开发。")]),s._v(" "),a("li",[s._v("用于管理当前主机上的多个容器，但不能管理其它主机上的容器。")])]),s._v(" "),a("h2",{attrs:{id:"安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("用 pip 安装：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("pip3 "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("用 yum 安装：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("yum "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[s._v("#")]),s._v(" 命令")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v("\n            -f "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定 compose 文件。默认会在当前目录及祖父目录中寻找 docker-compose.yml 文件")]),s._v("\n            -p "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --project-name ，指定项目名，默认采用 compose 文件所在的目录名")]),s._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动")]),s._v("\n            up "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动服务，这会创建并启动容器")]),s._v("\n                -d                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以 daemon 方式运行。默认会在当前终端的前台运行")]),s._v("\n                --build               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 总是构建镜像。默认如果镜像已存在，则不会构建")]),s._v("\n                --force-recreate      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 总是重新创建容器。默认会检查 compose 文件，如果配置变化则删除容器再重新创建")]),s._v("\n                --scale "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("web")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("redis")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置各服务运行的实例数量")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ps")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示正在运行的服务（的容器）")]),s._v("\n            start   "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动已停止的服务")]),s._v("\n            restart "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启服务")]),s._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止")]),s._v("\n            stop    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止服务")]),s._v("\n                -t "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 超时时间，默认为 10 秒")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("kill")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 杀死服务")]),s._v("\n                -s "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("signal"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发送的信号，默认为 SIGKILL")]),s._v("\n            down                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止并删除所有容器，默认会删除用到的网络")]),s._v("\n                -v                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --volumes ，同时删除 compose 文件中定义的 volumes 以及用到的匿名 volumes")]),s._v("\n                --rmi all             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 同时删除该服务用到的所有镜像")]),s._v("\n\n            "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("service"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("command"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在服务的容器中执行一条命令")]),s._v("\n                -d                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在后台执行命令")]),s._v("\n                -T                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不分配终端（默认会分配一个 tty）")]),s._v("\n                --index"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("n             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定该服务的第 n 个容器实例")]),s._v("\n\n            logs "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("service"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看服务的日志")]),s._v("\n                -f                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 保持显示")]),s._v("\n                -t                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示时间戳")]),s._v("\n                --tail "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示最后几行")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br")])]),a("ul",[a("li",[s._v("编写好 compose 文件之后，通常执行以下命令来启动容器："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" up         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 先尝试在前台运行，看日志是否正常")]),s._v("\nCtrl + C                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 终止运行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" up -d      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以 daemon 方式运行")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker-compose")]),s._v(" down       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 销毁服务")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[s._v("用 docker-compose 命令启动容器之后，也可以用 docker 命令查看、管理。")])]),s._v(" "),a("h2",{attrs:{id:"compose-文件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#compose-文件"}},[s._v("#")]),s._v(" compose 文件")]),s._v(" "),a("ul",[a("li",[s._v("docker-compose 命令根据 compose 配置文件来创建、管理 docker 容器。\n"),a("ul",[a("li",[s._v("compose 文件保存为 yaml 格式，扩展名为 .yaml 或 .yml 。")])])]),s._v(" "),a("li",[s._v("compose 文件的主要版本：\n"),a("ul",[a("li",[s._v("v2")]),s._v(" "),a("li",[s._v("v3\n"),a("ul",[a("li",[s._v("移除了 cpu_shares、mem_limit 等限制容器资源使用率的配置，改为通过 deploy 参数配置，但只支持部署到 docker swarm 集群。")])])])])])]),s._v(" "),a("h3",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[s._v("#")]),s._v(" 语法")]),s._v(" "),a("p",[s._v("例：")]),s._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 声明 compose 文件的语法版本")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开始定义服务")]),s._v("\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义第一个服务")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("5.0.5        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定使用的镜像")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" net\n\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("web")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义第二个服务")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" web       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定生成的容器名")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关于镜像")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# image: centos:7")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("build")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用构建出的镜像")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("context")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" ./etc\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("dockerfile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Dockerfile\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("network")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" host\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("args")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("arg1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Hello\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关于启动")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("depends_on")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 声明对其它服务的依赖关系")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" redis                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这表示 docker-compose start 时会先启动 redis 服务，再启动 web 服务。docker-compose stop 时顺序相反，而 docker-compose restart 时不控制顺序")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("init")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v("                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用 init 作为 1 号进程")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hostname")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" CentOS          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 主机名")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" root                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 覆盖 Dockerfile 中的 USER")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("working_dir")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /opt         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 覆盖 Dockerfile 中的 WORKDIR")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("privileged")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("false")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 是否开启特权模式")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("entrypoint")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 覆盖 Dockerfile 中的 ENTRYPOINT ，取值可以为字符串类型或列表类型")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /bin/sh\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("c\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" echo Hello            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此处容器的启动命令为 /bin/sh -c 'echo Hello' World ，实际上只会执行 echo Hello")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" World\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" echo Hello       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 覆盖 Dockerfile 中的 CMD")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" unless"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("stopped   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器的重启策略")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关于环境变量")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 环境变量，采用数组的格式声明")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" var1=1\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" var2=hello\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# environment:            # 也可以采用键值对的格式声明")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   var1: 1")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   var2: hello")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("env_file")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从文件中导入环境变量。这些文件中每行为 VAR=VALUE 的格式，用 # 声明单行注释")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./test.env\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关于标签")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 给容器添加标签。注意 key 不加引号，而 value 必须加引号")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("project")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test_1"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("branch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"dev"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /etc/test.env\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关于网络")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("dns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定 DNS 服务器")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 8.8.8.8\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使当前容器连接到一些 docker 网络")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" net\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# network_mode: host      # 网络模式，不能与 networks 同时配置")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# links:                  # 使当前容器连接到其它容器。不建议使用 links 配置，而应该使用 networks 配置")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  - redis")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 映射端口")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 8080"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意这里的每行配置是一个字符串，因此冒号 : 之后不能加空格")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 9090"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("9091"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("8080"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8081")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关于挂载")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /root/data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/root/data "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 挂载文件或目录")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/root/log       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 支持挂载相对路径（必须以 ./ 或 ../ 开头，省略的话则会视作数据卷的名称）")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" conf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/root/conf       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 挂载数据卷（不允许省略数据卷名，因此不支持挂载匿名卷）")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置 ulimit 参数")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ulimits")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nproc")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65535")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nofile")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("soft")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20000")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hard")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("40000")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 健康检查")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("healthcheck")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("test")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" curl http"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("//localhost "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),s._v(" exit 1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("interval")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 1m30s\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("timeout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10s\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("retries")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("start_period")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 40s\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("networks")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义网络。每个网络按 <project>_<network> 的格式命名")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# default:                  # 如果没有自定义网络，则默认会创建一个 default 网络，让所有服务的容器连接到它")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("net")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# driver: bridge")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 所有挂载的数据卷都必须在此定义。每个数据卷按 <project>_<volume> 的格式命名")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("conf")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("db")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br"),a("span",{staticClass:"line-number"},[s._v("66")]),a("br"),a("span",{staticClass:"line-number"},[s._v("67")]),a("br"),a("span",{staticClass:"line-number"},[s._v("68")]),a("br"),a("span",{staticClass:"line-number"},[s._v("69")]),a("br"),a("span",{staticClass:"line-number"},[s._v("70")]),a("br"),a("span",{staticClass:"line-number"},[s._v("71")]),a("br"),a("span",{staticClass:"line-number"},[s._v("72")]),a("br"),a("span",{staticClass:"line-number"},[s._v("73")]),a("br"),a("span",{staticClass:"line-number"},[s._v("74")]),a("br"),a("span",{staticClass:"line-number"},[s._v("75")]),a("br"),a("span",{staticClass:"line-number"},[s._v("76")]),a("br"),a("span",{staticClass:"line-number"},[s._v("77")]),a("br"),a("span",{staticClass:"line-number"},[s._v("78")]),a("br"),a("span",{staticClass:"line-number"},[s._v("79")]),a("br"),a("span",{staticClass:"line-number"},[s._v("80")]),a("br"),a("span",{staticClass:"line-number"},[s._v("81")]),a("br"),a("span",{staticClass:"line-number"},[s._v("82")]),a("br"),a("span",{staticClass:"line-number"},[s._v("83")]),a("br"),a("span",{staticClass:"line-number"},[s._v("84")]),a("br"),a("span",{staticClass:"line-number"},[s._v("85")]),a("br"),a("span",{staticClass:"line-number"},[s._v("86")]),a("br"),a("span",{staticClass:"line-number"},[s._v("87")]),a("br"),a("span",{staticClass:"line-number"},[s._v("88")]),a("br"),a("span",{staticClass:"line-number"},[s._v("89")]),a("br"),a("span",{staticClass:"line-number"},[s._v("90")]),a("br"),a("span",{staticClass:"line-number"},[s._v("91")]),a("br"),a("span",{staticClass:"line-number"},[s._v("92")]),a("br"),a("span",{staticClass:"line-number"},[s._v("93")]),a("br"),a("span",{staticClass:"line-number"},[s._v("94")]),a("br")])]),a("ul",[a("li",[a("p",[s._v("每个 compose 文件可以定义一个或多个服务，每个服务可以运行一个或多个容器实例。")]),s._v(" "),a("ul",[a("li",[s._v("如果用户不指定生成的容器名，则会自动按照 "),a("code",[s._v("项目名_服务名_实例编号")]),s._v(" 的格式命名，比如：web_web_1 。")]),s._v(" "),a("li",[s._v("一个服务运行多个容器实例时，可能因为使用相同的资源而冲突，比如：\n"),a("ul",[a("li",[s._v("指定的容器名相同，此时应该让它自动生成容器名")]),s._v(" "),a("li",[s._v("挂载的宿主机路径或数据卷相同")]),s._v(" "),a("li",[s._v("映射的端口相同")])])]),s._v(" "),a("li",[s._v("使用多个 compose 文件时，需要避免它们所在的目录名相同，导致生成的容器、网络、数据卷同名而冲突。")])])]),s._v(" "),a("li",[a("p",[s._v("上例中，web 容器向宿主机映射了两个端口，而 redis 容器没有映射端口，因此不能被宿主机访问。")]),s._v(" "),a("ul",[a("li",[s._v("两个容器都连接到了 net_1 网络，因此可以相互访问。比如 web 容器可以通过 "),a("code",[s._v("127.0.0.1:6379")]),s._v(" 或 "),a("code",[s._v("redis:6379")]),s._v(" 访问到 redis 容器。")])])]),s._v(" "),a("li",[a("p",[s._v("使用 depends_on 并不能判断服务是否就绪，不如自定义启动脚本，等上一个服务启动就绪了，才启动当前服务。如下：")]),s._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /bin/bash\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("c\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("|")]),a("span",{pre:!0,attrs:{class:"token scalar string"}},[s._v("\n    while ! curl 127.0.0.1:80;\n    do\n      sleep 1;\n    done\n    python3 run.py")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("compose 文件中支持引用环境变量，例如：")]),s._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("redis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("$"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("IMAGE_TAG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("var1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" $var1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ul",[a("li",[s._v("执行 docker-compose 命令时，会尝试在当前 shell 或 ./.env 文件中读取同名的环境变量，如果不存在则取值为空。")])])]),s._v(" "),a("li",[a("p",[s._v("docker-compose 会自动给容器添加一些 labels ，例如：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("com.docker.compose.config-hash         "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"fcd1bc82cbd8c940c0f6b5bc9c053914332bc3a8a2f4d51b46924feb0e7c05b7"')]),s._v("\ncom.docker.compose.container-number    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),s._v("\ncom.docker.compose.oneoff              "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"False"')]),s._v("\ncom.docker.compose.project             "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis"')]),s._v("\ncom.docker.compose.project.config_files: "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"docker-compose.yml"')]),s._v("\ncom.docker.compose.project.working_dir "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/opt/redis"')]),s._v("\ncom.docker.compose.service             "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis"')]),s._v("\ncom.docker.compose.version             "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.29.1"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);