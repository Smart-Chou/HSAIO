(window.webpackJsonp=window.webpackJsonp||[]).push([[46],{660:function(s,a,t){"use strict";t.r(a);var n=t(1),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"dockerfile"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#dockerfile"}},[s._v("#")]),s._v(" Dockerfile")]),s._v(" "),t("p",[s._v("：一个文本文件，用于描述构建 Docker 镜像时需要执行的指令。")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://docs.docker.com/engine/reference/builder/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),t("OutboundLink")],1)])]),s._v(" "),t("h2",{attrs:{id:"语法"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[s._v("#")]),s._v(" 语法")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Dockerfile 中可以包含多行指令（instruction）。")]),s._v(" "),t("ul",[t("li",[s._v("指令名不区分大小写，但一般大写。")]),s._v(" "),t("li",[s._v("一般在每行以指令名开头，允许添加前置空格。")]),s._v(" "),t("li",[s._v("第一个非注释的指令应该是 FROM ，否则报错："),t("code",[s._v("no build stage in current context")]),s._v(" "),t("ul",[t("li",[s._v("Dockerfile 至少需要包含一个 FROM 指令，其它指令都可以省略。")])])])])]),s._v(" "),t("li",[t("p",[s._v("Dockerfile 中的大部分指令可使用多次。")]),s._v(" "),t("ul",[t("li",[s._v("ENTRYPOINT、CMD 指令如果存在多个，则只有最后一个会生效。")])])]),s._v(" "),t("li",[t("p",[s._v("用 # 声明单行注释，且必须在行首声明。")]),s._v(" "),t("ul",[t("li",[s._v("执行 Dockerfile 之前，注释行会被删除。因此："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("RUN "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# comment")]),s._v("\n    world\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),s._v("会变成："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("RUN "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" hello "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    world\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])])])]),s._v(" "),t("h2",{attrs:{id:"构建阶段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建阶段"}},[s._v("#")]),s._v(" 构建阶段")]),s._v(" "),t("ul",[t("li",[s._v("dockerd 构建镜像时，会依次执行 Dockerfile 中的指令。\n"),t("ul",[t("li",[s._v("每个指令划分为一个构建步骤（build step）")]),s._v(" "),t("li",[s._v("从 FROM 指令开始的一组指令划分为一个构建阶段（build stage）。")])])])]),s._v(" "),t("h3",{attrs:{id:"from"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#from"}},[s._v("#")]),s._v(" FROM")]),s._v(" "),t("p",[s._v("：表示以某个镜像为基础镜像，开始一个构建阶段。")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("会沿用基础镜像的 layer ，继承其大部分指令的配置。")])]),s._v(" "),t("li",[t("p",[s._v("语法：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("FROM "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("--platform"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("platform"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("image"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("tag"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("AS "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("ul",[t("li",[s._v("FROM 指令表示一个构建阶段的开始，可用 AS 给该阶段命名。")]),s._v(" "),t("li",[s._v("有的程序不支持跨平台运行，因此需要指定不同的 --platform ，对不同平台分别构建镜像。常见的几种平台（OS/Architecture）："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("windows/amd64     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 常用于 Windows 主机")]),s._v("\nlinux/amd64       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 常用于 Linux 主机")]),s._v("\nlinux/arm64\nlinux/arm64/v8    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 常用于 Apple M1 CPU")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[s._v("默认根据本机的操作系统、CPU 架构，指定 --platform 的值。")])])])])]),s._v(" "),t("li",[t("p",[s._v("例：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("FROM nginx\nFROM nginx AS stage1\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("基础镜像举例：")]),s._v(" "),t("ul",[t("li",[s._v("scratch ：一个空镜像。以它作为基础镜像，将可执行文件拷贝进去，就可以构建出体积最小的镜像。")]),s._v(" "),t("li",[s._v("*-slim ：一种后缀，表示某种镜像的精简版，体积较小。通常是去掉了一些文件，只保留运行时环境。")]),s._v(" "),t("li",[s._v("busybox ：集成了许多常用的 Unix 命令，体积只有 2MB ，相当于一个小巧的工具箱。")]),s._v(" "),t("li",[s._v("debian")]),s._v(" "),t("li",[s._v("alpine ：一个专为容器设计的轻量级 Linux 系统，体积只有 5MB 。\n"),t("ul",[t("li",[s._v("包含了 busybox ，用 musl libc 库代替了 glibc 库，可能遇到兼容性问题。")]),s._v(" "),t("li",[s._v("可用 apk add 命令安装软件包。")]),s._v(" "),t("li",[s._v("busybox 不包含 curl 命令，可用以下命令启动一个包含 curl 的容器："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -it --rm --entrypoint "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sh")]),s._v(" alpine/curl\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])])]),s._v(" "),t("li",[s._v("Container Linux ：一个专为容器设计的轻量级 Linux 系统，由 CoreOS 团队发布。2020 年停止开发，被 Fedora CoreOS 替代。")])])])]),s._v(" "),t("h3",{attrs:{id:"多阶段"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#多阶段"}},[s._v("#")]),s._v(" 多阶段")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("一个 Dockerfile 可以包含多个 FROM 指令，即多个构建阶段。")])]),s._v(" "),t("li",[t("p",[s._v("使用多阶段构建的好处：")]),s._v(" "),t("ul",[t("li",[s._v("将复杂的 Dockerfile 划分成多个独立的部分。")]),s._v(" "),t("li",[s._v("减小镜像体积。\n"),t("ul",[t("li",[s._v("一个构建步骤 step ，会使用之前 step 的中间镜像，不得不继承 layer 中的全部文件，因此镜像容易包含无用文件。")]),s._v(" "),t("li",[s._v("而一个构建阶段 stage ，会使用一个独立的基础镜像，但可以选择性地 COPY 之前 stage 的文件。")])])])])]),s._v(" "),t("li",[t("p",[s._v("例：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("FROM nginx AS stage1                             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开始一个阶段，并用 AS 命名")]),s._v("\nRUN "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" /root/f1\n\nFROM nginx AS stage2\nCOPY --from"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("stage1  /root/f1  /tmp/              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从指定阶段的最终镜像中拷贝文件")]),s._v("\nCOPY --from"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("nginx   /etc/nginx/nginx.conf /tmp/  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从其它镜像中拷贝文件")]),s._v("\nRUN  "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" /tmp\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("存在多个 FROM 阶段时，传入的构建参数会被第一个声明该 ARG 的阶段获取，之后的阶段不能再获取。")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("FROM    nginx\nARG     "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n\nFROM    nginx\nARG     A\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这里 $A 的值为空")]),s._v("\nRUN "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$A")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("支持在第一个 FROM 指令之前声明 ARG 指令，此时该 ARG 变量会存在于所有 FROM 阶段。如下：")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ARG")]),s._v(" A=10")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" nginx")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 此时 $A 属于当前作用域，值为空")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v("     B="),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$A")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果声明一个同名的 ARG 变量并赋值为空，则可以获得全局作用域的值，因此这里 $A 的值为 10")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ARG")]),s._v(" A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$A")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" nginx")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 这里 $A 的值为 10")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ARG")]),s._v(" A")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" echo "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$A")])]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[s._v("#")]),s._v(" 变量")]),s._v(" "),t("ul",[t("li",[s._v("Dockerfile 中可通过 ARG、ENV 指令定义变量，可在大部分指令中引用。\n"),t("ul",[t("li",[s._v("例："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("ARG     "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("A")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\nENV     "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("B")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$A")]),s._v("\n\nEXPOSE  "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${A"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":-")]),s._v("80}")]),s._v("\nWORKDIR "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${A"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":+")]),s._v("'"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v("tmp'}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])]),s._v(" "),t("li",[s._v("支持多种读取变量的语法："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$var")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${var}")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${var"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":-")]),s._v("default}")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果变量存在且不为空，则返回其值，否则返回默认值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${var"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":+")]),s._v("default}")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果变量存在且不为空，则返回默认值，否则返回空")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])])])])]),s._v(" "),t("h3",{attrs:{id:"arg"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#arg"}},[s._v("#")]),s._v(" ARG")]),s._v(" "),t("p",[s._v("：声明一个或多个键值对格式的构建参数。")]),s._v(" "),t("ul",[t("li",[s._v("例："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("ARG var1  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("var2")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value2\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("可以不赋值，此时值为空。")])])]),s._v(" "),t("li",[s._v("构建镜像时，可通过 "),t("code",[s._v("docker build --build-arg")]),s._v(" 传入构建参数。")]),s._v(" "),t("li",[s._v("ARG 变量只影响构建过程，不会保留。\n"),t("ul",[t("li",[s._v("可以通过 "),t("code",[s._v("docker history")]),s._v(" 命令查看 ARG 变量的值，因此不应该通过 ARG 传递密码等敏感信息。可改为读取 secret 文件，或者让最终镜像不继承当前构建阶段。")])])])]),s._v(" "),t("h3",{attrs:{id:"env"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#env"}},[s._v("#")]),s._v(" ENV")]),s._v(" "),t("p",[s._v("：给容器内 shell 添加一个或多个键值对格式的环境变量。")]),s._v(" "),t("ul",[t("li",[s._v("语法与 ARG 指令相同。")]),s._v(" "),t("li",[s._v("ENV 变量会保存到镜像中，并添加到容器内 shell 中。")])]),s._v(" "),t("h3",{attrs:{id:"label"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#label"}},[s._v("#")]),s._v(" LABEL")]),s._v(" "),t("p",[s._v("：给镜像添加一个或多个键值对格式的标签。")]),s._v(" "),t("ul",[t("li",[s._v("语法与 ARG 指令相同，但必须赋值。")]),s._v(" "),t("li",[s._v("标签属于 docker 对象的元数据，不会影响容器内进程。")])]),s._v(" "),t("h2",{attrs:{id:"文件"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#文件"}},[s._v("#")]),s._v(" 文件")]),s._v(" "),t("h3",{attrs:{id:"copy"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#copy"}},[s._v("#")]),s._v(" COPY")]),s._v(" "),t("p",[s._v("：从构建上下文拷贝文件到镜像中。")]),s._v(" "),t("ul",[t("li",[s._v("语法："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("COPY "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("src_path"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("dst_path"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n    --chown"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("group"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拷贝之后的文件权限")]),s._v("\n    --from"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 表示拷贝的源对象，默认是 build context ，可以指定其它构建阶段或镜像")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("src_path 只能是相对路径，且不能使用 .. 指向超出构建上下文的路径。\n"),t("ul",[t("li",[s._v("src_path 可以包含通配符 ? 和 * 。")]),s._v(" "),t("li",[s._v("src_path 为目录时，不会拷贝该目录，而是拷贝该目录下的所有文件。")])])]),s._v(" "),t("li",[s._v("dst_path 可以是相对路径或绝对路径。\n"),t("ul",[t("li",[s._v("为相对路径时，起点为 WORKDIR 。不会受到 RUN 指令中的 cd 命令的影响，因为每个构建步骤都是创建一个新的中间容器，工作目录复位为 WORKDIR 。")])])])])]),s._v(" "),t("li",[s._v("例："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("COPY *.py /tmp/\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"add"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#add"}},[s._v("#")]),s._v(" ADD")]),s._v(" "),t("p",[s._v("：用法与 COPY 相似，但支持 src_path 为 URL 。")]),s._v(" "),t("h2",{attrs:{id:"执行命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#执行命令"}},[s._v("#")]),s._v(" 执行命令")]),s._v(" "),t("h3",{attrs:{id:"run"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#run"}},[s._v("#")]),s._v(" RUN")]),s._v(" "),t("p",[s._v("：用于在构建镜像时，在中间容器内执行一些 shell 命令。")]),s._v(" "),t("ul",[t("li",[s._v("有两种写法："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("RUN "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("command"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("param"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("1")]),s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("param"),t("span",{pre:!0,attrs:{class:"token operator"}},[t("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("2")]),s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# shell 格式")]),s._v("\nRUN "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"command"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param1"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# exec 格式，即 JSON array 。注意使用双引号，否则使用单引号会被视作 shell 格式")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("shell 格式是在 shell 解释器中执行命令。而 exec 格式是直接执行命令，因此不支持 shell 语法，比如管道符、用 $ 读取变量。")]),s._v(" "),t("li",[s._v("制作镜像时，dockerd 会将所有命令都从 shell 格式转换成 exec 格式 "),t("code",[s._v('["/bin/sh", "-c", "<command> <param1> <param2>..."]')]),s._v(" ，然后保存 。\n"),t("ul",[t("li",[s._v("在 Windows 平台上，前缀为 "),t("code",[s._v('["cmd", "/S", "/C"]')]),s._v(" 。")])])]),s._v(" "),t("li",[s._v("在容器中，dockerd 会将所有命令都从 exec 格式转换成 shell 格式，然后执行。")])])]),s._v(" "),t("li",[s._v("例："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("RUN "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -eu   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World!"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" f1\nRUN "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/echo"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hello"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"entrypoint、cmd"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#entrypoint、cmd"}},[s._v("#")]),s._v(" ENTRYPOINT、CMD")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("ENTRYPOINT、CMD 指令都用于设置容器的启动命令，前者的优先级更高。")]),s._v(" "),t("ul",[t("li",[s._v("都支持 shell 格式、exec 格式两种写法。CMD 指令还支持第三种写法："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("CMD "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param1"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"param2"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只有参数的 exec 格式")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[s._v("创建容器时，dockerd 会将 ENTRYPOINT、CMD 命令都从 exec 格式转换成 shell 格式，再将 CMD 命令附加到 ENTRYPOINT 命令之后，然后执行。\n"),t("ul",[t("li",[s._v("如果执行 "),t("code",[s._v("docker run <image> [command]")]),s._v(" 时声明了启动命令，则会覆盖镜像中的 CMD 指令。")]),s._v(" "),t("li",[s._v("还可通过 "),t("code",[s._v("docker run --entrypoint")]),s._v(" 覆盖镜像中的 ENTRYPOINT 指令。")])])])])]),s._v(" "),t("li",[t("p",[s._v("下表统计不同写法时， ENTRYPOINT 指令与 CMD 指令组合的结果，即容器的启动命令是什么：")]),s._v(" "),t("table",[t("thead",[t("tr",[t("th",[s._v("-")]),s._v(" "),t("th",[t("code",[s._v("ENTRYPOINT echo 1")])]),s._v(" "),t("th",[t("code",[s._v('ENTRYPOINT ["echo", "1"]')])])])]),s._v(" "),t("tbody",[t("tr",[t("td",[t("code",[s._v("CMD echo 2")])]),s._v(" "),t("td",[s._v("/bin/sh -c 'echo 1' /bin/sh -c 'echo 2'")]),s._v(" "),t("td",[s._v("echo 1 /bin/sh -c 'echo 2'")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v('CMD ["echo", "2"]')])]),s._v(" "),t("td",[s._v("/bin/sh -c 'echo 1' echo 2")]),s._v(" "),t("td",[s._v("echo 1 echo 2")])]),s._v(" "),t("tr",[t("td",[t("code",[s._v('CMD ["2"]')])]),s._v(" "),t("td",[s._v("/bin/sh -c 'echo 1' 2")]),s._v(" "),t("td",[s._v("echo 1 2")])])])]),s._v(" "),t("ul",[t("li",[s._v("ENTRYPOINT 指令应该采用 exec 格式，因为采用 shell 格式时，CMD 指令不会被执行，而且容器内由 shell 解释器担任 1 号进程。")]),s._v(" "),t("li",[s._v("一般 ENTRYPOINT 指令填程序的启动命令，CMD 指令填程序的启动参数。例如："),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-jar"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test.jar"')]),s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])])])]),s._v(" "),t("h3",{attrs:{id:"shell"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#shell"}},[s._v("#")]),s._v(" SHELL")]),s._v(" "),t("p",[s._v("：声明执行 shell 格式的命令时，采用的 shell 解释器。")]),s._v(" "),t("ul",[t("li",[s._v("默认值："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("SHELL")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/bin/sh"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-c"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"onbuild"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#onbuild"}},[s._v("#")]),s._v(" ONBUILD")]),s._v(" "),t("p",[s._v("：用于声明触发器（build trigger），托管一个普通的 Dockerfile 命令。当其它镜像通过 FROM 继承当前镜像时，就会执行所有触发器。")]),s._v(" "),t("ul",[t("li",[s._v("不支持嵌套 ONBUILD 。")]),s._v(" "),t("li",[s._v("例：在构建 nginx:v1 的 Dockerfile 中加入 ONBUILD ："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("ONBUILD RUN "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /data\nONBUILD COPY "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v(" /data\nONBUILD RUN "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" /data\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),s._v("使用 nginx:v1 作为基础镜像，构建另一个镜像："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker build . -t nginx:v2")]),s._v("\nSending build context to Docker daemon  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".048kB\nStep "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/2 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" FROM  nginx:v1\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Executing 3 build triggers      # 在 FROM 步骤，依次执行所有触发器，每个触发器都会创建一个中间容器")]),s._v("\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Running "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" ba646d1c9824\nRemoving intermediate container ba646d1c9824\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Running "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" 09ba6f8a6933\nDockerfile\nRemoving intermediate container 09ba6f8a6933\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 8f66dce6bb3c\nStep "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("/2 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" EXPOSE "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Running "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" 1f6182a06031\nRemoving intermediate container 1f6182a06031\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 2b4beb4d379a\nSuccessfully built 2b4beb4d379a\nSuccessfully tagged nginx:v2\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"其它"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[s._v("#")]),s._v(" 其它")]),s._v(" "),t("h3",{attrs:{id:"user"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#user"}},[s._v("#")]),s._v(" USER")]),s._v(" "),t("p",[s._v("：切换容器内的 shell 用户。")]),s._v(" "),t("ul",[t("li",[s._v("镜像构建时、构建之后都会使用该配置。")]),s._v(" "),t("li",[s._v("语法："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("user"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("group"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"workdir"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#workdir"}},[s._v("#")]),s._v(" WORKDIR")]),s._v(" "),t("p",[s._v("：切换容器内的 shell 工作目录。")]),s._v(" "),t("ul",[t("li",[s._v("镜像构建时、构建之后都会使用该配置。")]),s._v(" "),t("li",[s._v("语法："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("WORKDIR "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"expose"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#expose"}},[s._v("#")]),s._v(" EXPOSE")]),s._v(" "),t("p",[s._v("：声明容器内进程监听的端口。")]),s._v(" "),t("ul",[t("li",[s._v("如果用户创建容器时，没有主动映射该端口，则并不会自动映射，除非使用 "),t("code",[s._v("docker run -P")]),s._v(" 。")]),s._v(" "),t("li",[s._v("例："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("EXPOSE "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("\nEXPOSE "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("/tcp "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("/udp\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("默认为 TCP 协议。")])])])]),s._v(" "),t("h3",{attrs:{id:"volume"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#volume"}},[s._v("#")]),s._v(" VOLUME")]),s._v(" "),t("p",[s._v("：将容器内的目录声明为挂载点。")]),s._v(" "),t("ul",[t("li",[s._v("如果用户创建容器时，没有主动覆盖该挂载点，则默认会自动创建匿名的数据卷来挂载。")]),s._v(" "),t("li",[s._v("例："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("VOLUME /data\nVOLUME /root  /var/log\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"stopsignal"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#stopsignal"}},[s._v("#")]),s._v(" STOPSIGNAL")]),s._v(" "),t("p",[s._v("：声明 "),t("code",[s._v("docker stop")]),s._v(" 停止容器时，应该给 1 号进程发送的信号。")]),s._v(" "),t("ul",[t("li",[s._v("默认值："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("STOPSIGNAL  SIGTERM\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"例"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#例"}},[s._v("#")]),s._v(" 例")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("例：通过多阶段构建一个 Java 镜像")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 多阶段共享的 ARG 变量")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ARG")]),s._v(" GIT_REPO=https://github.com/xx/xx.git "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    GIT_REFS=master")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 基础阶段。这些配置很少变动，重复构建时应该命中缓存，还可以做成一个基础镜像")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" openjdk:8u312-jre-buster "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" base_image")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义环境变量")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENV")]),s._v(" USER=test "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    USER_ID=1000  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    WORK_DIR=/opt")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建用户及目录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" set -eu ;"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    useradd "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$USER")]),s._v(" -u "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$USER_ID")]),s._v(" -m -s /bin/bash ;"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    mkdir -p "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$WORK_DIR")]),s._v(" ;"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    chown -R "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$USER")]),s._v(":"),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$USER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$WORK_DIR")])]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 其它配置")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("USER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$USER")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$WORK_DIR")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# EXPOSE 80")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# VOLUME $WORK_DIR/data")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建阶段")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" maven:3.8.4-jdk-8 "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AS")]),s._v(" builder")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$WORK_DIR")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" git clone "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GIT_REPO")]),s._v(" .   ;"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    git checkout "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GIT_REFS")]),s._v("  ;"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    mvn clean package")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最终阶段")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" base_image")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LABEL")]),s._v(" GIT_REPO="),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GIT_REPO")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n      GIT_REFS="),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$GIT_REFS")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token options"}},[t("span",{pre:!0,attrs:{class:"token property"}},[s._v("--from")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("builder")])]),s._v(" /root/*/target/*.jar .")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"java"')]),s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-jar"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test.jar"')]),s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("例：给容器编写一个 entrypoint.sh 脚本，可实现复杂的启动过程")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[s._v("...\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" ./entrypoint.sh /")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/entrypoint.sh"')]),s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-jar"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test.jar"')]),s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("p",[s._v("entrypoint.sh 的内容示例：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token shebang important"}},[s._v("#!/bin/bash")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -eu\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果传入的 CMD 命令即 $@ 中，第一个参数为 -jar ，则采用正常的启动命令")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$1")]),s._v('"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-jar'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 调整工作目录的权限。该目录可能是挂载目录，因此在容器启动时才能确定权限")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" -R "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$USER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$WORK_DIR")]),s._v('"')]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果工作目录为空，则进行初始化")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# if [ -z "$(ls -A "$WORK_DIR")" ]; then')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     gosu $USER init.sh")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fi")]),s._v("\n\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以非 root 用户运行进程，用 $@ 作为进程的启动命令")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" gosu "),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("$USER")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果 $@ 不匹配以上条件，则直接执行")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$@")]),s._v('"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br")])]),t("ul",[t("li",[s._v("这里没有通过 USER 指令切换用户，而是先以 root 用户运行 entrypoint.sh 脚本，方便调整目录权限。然后脚本通过 gosu 切换到普通用户，提高安全性。")]),s._v(" "),t("li",[s._v("gosu 命令与 sudo 类似，用于以指定用户的身份执行一个命令。\n"),t("ul",[t("li",[s._v("sudo 命令会创建一个子进程去执行，而 gosu 会通过 exec 方式执行。")])])]),s._v(" "),t("li",[s._v("通过 exec 方式执行命令，会让该命令进程替换当前 shell 进程，作为 1 号进程，且该命令结束时当前 shell 也会退出。")]),s._v(" "),t("li",[s._v("entrypoint.sh 调用的环境变量在 Dockerfile 中声明了默认值，也可以在启动容器时修改，例如：docker run -e USER=xx")])])]),s._v(" "),t("li",[t("p",[s._v("例：使用 tini")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[s._v("...\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" wget https://github.com/krallin/tini/releases/download/v0.19.0/tini -O /usr/bin/tini ;"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    chmod +x /usr/bin/tini")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENTRYPOINT")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"tini"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"--"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"/entrypoint.sh"')]),s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-jar"')]),s._v(", "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test.jar"')]),s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"构建镜像"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#构建镜像"}},[s._v("#")]),s._v(" 构建镜像")]),s._v(" "),t("h3",{attrs:{id:"build-命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#build-命令"}},[s._v("#")]),s._v(" build 命令")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" build "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),t("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">|")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("URL"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n            -f "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Dockerfile 的路径，默认为 <dir>/Dockerfile")]),s._v("\n            -t "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("image"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(":tag"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --tag ，给构建出的镜像加上名称和标签（可多次使用该选项）")]),s._v("\n            --build-arg "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("VERSION")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1.0"')]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 传入 ARG 构建参数。可多次使用该选项，每次只能传入一个键值对")]),s._v("\n            --target "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("stage"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行完某个阶段就停止构建")]),s._v("\n            --network "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置中间容器使用的网络")]),s._v("\n            --no-cache                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建时不使用缓存")]),s._v("\n            --force-rm                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 即使构建失败，也强制删除中间容器")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("ul",[t("li",[s._v("执行 "),t("code",[s._v("docker build <PATH>")]),s._v(" 时，会将目标目录及其子目录的所有文件（包括隐藏文件）作为构建上下文（build context），拷贝发送给 dockerd ，从而允许用 COPY 或 ADD 指令拷贝文件到容器中。\n"),t("ul",[t("li",[s._v("执行 "),t("code",[s._v("docker build - < Dockerfile")]),s._v(" ，则只会发送 Dockerfile 作为构建上下文。")])])]),s._v(" "),t("li",[s._v("可以在 .dockerignore 文件中声明不想被发送的文件或目录。如下："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("*.log     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 匹配当前目录下的文件")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("*.md     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ! 表示反向匹配")]),s._v("\n*/tmp*    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 匹配子目录下的文件")]),s._v("\n**/tmp*   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ** 匹配任意数量的目录")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("ul",[t("li",[s._v("Dockerfile 和 .dockerignore 文件总是会被发送给 dockerd ，即使在这声明了也没用。")])])])]),s._v(" "),t("h3",{attrs:{id:"buildkit"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#buildkit"}},[s._v("#")]),s._v(" BuildKit")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Docker 的 18.09 版本增加了一个构建工具 BuildKit 。")])]),s._v(" "),t("li",[t("p",[s._v("特点：")]),s._v(" "),t("ul",[t("li",[s._v("采用一种更低级的格式来定义构建过程，称为（Low Level Builder，LLB）。\n"),t("ul",[t("li",[s._v("兼容 Dockerfile ，通过前端组件自动将其转换成 LLB 。")])])]),s._v(" "),t("li",[s._v("优化了构建过程，减少耗时。\n"),t("ul",[t("li",[s._v("会显示每个 step 的耗时。")]),s._v(" "),t("li",[s._v("会并行构建所有 stage ，除非存在 FROM 依赖关系。因此适合同时构建多个平台的镜像。")])])]),s._v(" "),t("li",[s._v("构建时，由 dockerd 进程创建基于 runc 的中间容器，不是由 containerd-shim 管理，因此不能通过 docker 命令查看容器。")])])]),s._v(" "),t("li",[t("p",[s._v("可通过 buildx 插件启用 BuildKit ：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" buildx\n          build "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建，兼容 docker build 的命令选项")]),s._v("\n              --cache-from "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("image"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 采用某个镜像作为缓存源")]),s._v("\n              --platform linux/arm64,"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定构建的目标平台，默认采用本机平台，可指定多个平台")]),s._v("\n              --progress plain                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建过程的输出类型。默认为 auto ，设置为 plain 则会显示终端输出")]),s._v("\n              --secret "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("id")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mysecret,src"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/root/secret "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将宿主机上的文件声明为一个私密文件，指定 id ，可供 RUN 命令挂载")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v("                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有 builder 实例")]),s._v("\n          "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("du")]),s._v("                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示 buildx 占用的磁盘")]),s._v("\n          prune                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清空 buildx cache")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])]),t("ul",[t("li",[s._v("可以修改 daemon.json 的配置，使得 docker build 也启用 BuildKit 。")])])])]),s._v(" "),t("p",[s._v("启用 Buildkit 时的新语法：")]),s._v(" "),t("ul",[t("li",[s._v("支持在 Dockerfile 中声明语法版本："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# syntax=docker/dockerfile:1.2")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[s._v("RUN 命令支持使用 "),t("code",[s._v("--mount")]),s._v(" 选项，可多次使用，有多种挂载类型：\n"),t("ul",[t("li",[s._v("bind ：默认挂载类型。"),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("RUN --mount"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bind,src"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("./dist,dst"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/dist "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --mount"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("bind,from"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("stage1,src"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/root,dst"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/root "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ls")]),s._v(" /root\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("from 表示挂载的源对象，用法与 COPY --from 相同。")]),s._v(" "),t("li",[s._v("src 表示源路径，默认为 from 的顶级目录。")]),s._v(" "),t("li",[s._v("dst 表示目标路径，如果不存在则会自动创建。")]),s._v(" "),t("li",[s._v("挂载时默认的访问模式为 rw ，可以改为 ro 。")]),s._v(" "),t("li",[s._v("使用 RUN --mount 方式获取文件，可以避免像 COPY 命令那样将文件保存到镜像中。")])])]),s._v(" "),t("li",[s._v("cache ：用于挂载缓存目录，类似于数据卷。"),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("RUN --mount"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("cache,target"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/app/node_modules,id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/app/node_modules "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /app   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n\nRUN --mount"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("cache,target"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/app/node_modules,sharing"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("locked "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" /app   "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("npm")]),s._v(" run build\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])]),t("ul",[t("li",[s._v("cache 会在第一次挂载时自动创建。当构建结束，且不存在引用它的镜像时，自动删除。\n"),t("ul",[t("li",[s._v("挂载 cache 的好处：可以让多个构建步骤共享文件。")])])]),s._v(" "),t("li",[s._v("cache 的 id 默认等于 target 。")]),s._v(" "),t("li",[s._v("sharing 表示并行构建时，对 cache 的访问模式。可取值如下：\n"),t("ul",[t("li",[s._v("shared ：默认值，允许并行读写。")]),s._v(" "),t("li",[s._v("locked ：同时只能有一方绑定该 cache 。")]),s._v(" "),t("li",[s._v("private ：如果 cache 已被绑定，则创建新的 cache 实例。")])])])])]),s._v(" "),t("li",[s._v("secret ：用于挂载一个私密文件。该文件不是来自 build context ，而是由用户指定的任意宿主机文件。"),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("RUN --mount"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("type"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("secret,id"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mysecret,dst"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/secret "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /secret\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])])])]),s._v(" "),t("h3",{attrs:{id:"例-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#例-2"}},[s._v("#")]),s._v(" 例")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("编写一个 Dockerfile ：")]),s._v(" "),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("FROM")]),s._v(" nginx")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("LABEL")]),s._v(" maintainer=test")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" set -eu   ;"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    echo Hello")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CMD")]),s._v(" ["),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx"')]),s._v("]")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("首次构建镜像：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker build . -t nginx:v1")]),s._v("\nSending build context to Docker daemon  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".048kB "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发送构建上下文")]),s._v("\nStep "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/4 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" FROM nginx                           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第一个步骤")]),s._v("\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ea335eea17ab                               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 步骤结束，生成一个中间镜像（这里是 FROM 的源镜像）")]),s._v("\nStep "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("/4 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" LABEL "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("maintainer")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("test                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第二个步骤")]),s._v("\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Running "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" 144c44cb0874                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在一个中间容器内运行")]),s._v("\nRemoving intermediate container 144c44cb0874    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除中间容器")]),s._v("\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 94cb9642d8d7                               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 步骤结束，生成一个中间镜像（这里是将中间容器提交为中间镜像）")]),s._v("\nStep "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("/4 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" RUN "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -eu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" f1\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Running "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" a1150f37fb12\nRemoving intermediate container a1150f37fb12\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 4da89ebe5fe6\nStep "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("/4 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" CMD "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Running "),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" d239ef15d1eb\nRemoving intermediate container d239ef15d1eb\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" d4c94f7870ad\nSuccessfully built d4c94f7870ad                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 构建完成")]),s._v("\nSuccessfully tagged nginx:v1                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 加上镜像名和标签")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("ul",[t("li",[s._v("构建镜像时，每个步骤的主要内容为：\n"),t("ol",[t("li",[s._v("使用上一步骤的镜像，创建一个临时的中间容器（intermediate container），用于执行 Dockerfile 中的一个指令。")]),s._v(" "),t("li",[s._v("将中间容器提交为一个中间镜像，用于创建下一步骤的中间容器。")]),s._v(" "),t("li",[s._v("删除当前的中间容器，开始下一步骤。\n"),t("ul",[t("li",[s._v("如果构建步骤出错，则不会删除中间容器。")])])])])]),s._v(" "),t("li",[s._v("中间镜像会作为悬空镜像一直保留在本机，用于缓存，默认隐藏显示。\n"),t("ul",[t("li",[s._v("如果删除构建的最终镜像，则会自动删除它调用的所有中间镜像。")]),s._v(" "),t("li",[s._v("用 docker push 推送最终镜像时，不会推送中间镜像。")])])]),s._v(" "),t("li",[s._v("大部分 Dockerfile 指令不会生成新的 layer ，只是修改了配置而生成新的中间镜像。\n"),t("ul",[t("li",[s._v("执行 ADD、RUN 指令时，不会创建中间容器，而是直接修改 layer 。")]),s._v(" "),t("li",[s._v("执行 RUN 指令时，可能修改文件，添加一层新的非空 layer ，保存到镜像配置的 rootfs.diff_ids 列表。\n"),t("ul",[t("li",[s._v("因此建议尽量减少 RUN 指令的数量，避免增加大量 layer 。比如将多条 RUN 指令合并成一条，但合并了经常不命中缓存的命令时，又会增加构建耗时。")]),s._v(" "),t("li",[s._v("安装软件时，记得删除缓存。例如："),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" yum update && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    yum install -y vim && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    yum clean all && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    rm -rf /var/cache/yum")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])]),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" apt update && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    apt install -y vim && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    apt clean && "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("\\")]),s._v("\n    rm -rf /var/lib/apt/lists/*")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])]),s._v(" "),t("li",[s._v("在构建时，使用 shell 的 rm 命令只能删除当前 layer 的文件。不能删除之前 layer 的文件，只是添加一层新的 layer ，覆盖原 layer 中的文件。")])])])])])])]),s._v(" "),t("li",[t("p",[s._v("再次构建镜像：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# docker build . -t nginx:v2")]),s._v("\nSending build context to Docker daemon  "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(".048kB\nStep "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("/4 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" FROM nginx\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ea335eea17ab\nStep "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("/4 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" LABEL "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("maintainer")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("test\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Using cache                            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用缓存")]),s._v("\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 94cb9642d8d7\nStep "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("/4 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" RUN "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" -eu"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("touch")]),s._v(" f1\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Using cache\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" 4da89ebe5fe6\nStep "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("/4 "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" CMD "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nginx"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" Using cache\n---"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" d4c94f7870ad\nSuccessfully built d4c94f7870ad\nSuccessfully tagged nginx:v1\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("ul",[t("li",[s._v("执行一个构建步骤时，如果 dockerd 发现已有的某个镜像执行过相同的构建步骤，则跳过执行当前步骤，直接采用该镜像作为中间镜像，实现缓存，减少构建耗时。\n"),t("ul",[t("li",[s._v("如果某个构建步骤未命中缓存，则之后的所有步骤都会禁用缓存。建议尽量将这样的构建步骤写在 Dockerfile 后面。")]),s._v(" "),t("li",[s._v("重复执行 RUN 指令时，如果指令的内容相同，则会使用缓存。")]),s._v(" "),t("li",[s._v("重复执行 ADD、COPY 指令时，如果指令的内容相同，拷贝的文件的哈希值也相同，才会使用缓存。")]),s._v(" "),t("li",[s._v("使用缓存不一定合适，例如重复执行 "),t("code",[s._v("RUN date > build_time")]),s._v(" 时，得到的时间不会变，此时可通过 "),t("code",[s._v("docker build --no-cache")]),s._v(" 禁用缓存。")])])]),s._v(" "),t("li",[s._v("例如构建 npm 前端项目时，可以分别 install 和 build ，尽量让 install 命中缓存："),t("div",{staticClass:"language-dockerfile line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-dockerfile"}},[t("code",[t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("WORKDIR")]),s._v(" /app")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" package.json /app/package.json")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm install")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("COPY")]),s._v(" . .")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token instruction"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("RUN")]),s._v(" npm run build")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);