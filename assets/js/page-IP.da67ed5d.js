(window.webpackJsonp=window.webpackJsonp||[]).push([[84],{750:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"ip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip"}},[s._v("#")]),s._v(" IP")]),s._v(" "),a("h2",{attrs:{id:"ifconfig"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ifconfig"}},[s._v("#")]),s._v(" ifconfig")]),s._v(" "),a("p",[s._v("用法：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ifconfig")]),s._v("                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示已启用网卡的信息")]),s._v("\n            -a                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示所有网卡的信息")]),s._v("\n            eth0                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示网卡 eth0 的信息")]),s._v("\n            up                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启用网卡")]),s._v("\n            down                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停用网卡")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.1               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置网卡的 IP 地址")]),s._v("\n            netmask "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.0  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置网卡的子网掩码")]),s._v("\n            broadcast "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.255   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置网卡的广播地址")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("p",[s._v("例：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ifconfig")]),s._v("\neth0: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("flags")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("416")]),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("3")]),s._v("<")]),s._v("UP,BROADCAST,RUNNING,MULTICAST"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  mtu "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1500")]),s._v("\n        inet "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.1  netmask "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.0  broadcast "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.255\n        ether "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("52")]),s._v(":54:00:59:c1:b7  txqueuelen "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Ethernet"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        RX packets "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("25883978")]),s._v("  bytes "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7322687281")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6.8")]),s._v(" GiB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        RX errors "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  dropped "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  overruns "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  frame "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n        TX packets "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24178898")]),s._v("  bytes "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6035774584")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.6")]),s._v(" GiB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        TX errors "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  dropped "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" overruns "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  carrier "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  collisions "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n\nlo: "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("flags")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),a("span",{pre:!0,attrs:{class:"token operator"}},[a("span",{pre:!0,attrs:{class:"token file-descriptor important"}},[s._v("3")]),s._v("<")]),s._v("UP,LOOPBACK,RUNNING"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  mtu "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("65536")]),s._v("\n        inet "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1  netmask "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.0")]),s._v(".0.0\n        loop  txqueuelen "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Local Loopback"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        RX packets "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3615476")]),s._v("  bytes "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2842561090")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.6")]),s._v(" GiB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        RX errors "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  dropped "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  overruns "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  frame "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n        TX packets "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3615476")]),s._v("  bytes "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2842561090")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.6")]),s._v(" GiB"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        TX errors "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  dropped "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" overruns "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  carrier "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("  collisions "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("ul",[a("li",[s._v("主机一般都有一张物理网卡 eth0 ，还有多张虚拟网卡，比如环回地址的网卡 lo 。")]),s._v(" "),a("li",[s._v("flags ：\n"),a("ul",[a("li",[s._v("UP ：表示网卡已被启用。")]),s._v(" "),a("li",[s._v("BROADCAST ：表示支持广播。")]),s._v(" "),a("li",[s._v("RUNNING ：表示网卡已连接到网络。")]),s._v(" "),a("li",[s._v("MULTICAST ：表示支持组播。")])])]),s._v(" "),a("li",[s._v("地址信息：\n"),a("ul",[a("li",[s._v("mtu ：最大传输单元，即网卡能传输的 IP 数据包最大大小，单位 bytes 。")]),s._v(" "),a("li",[s._v("inet ：网卡的 IP 地址。")]),s._v(" "),a("li",[s._v("netmask ：子网掩码。")]),s._v(" "),a("li",[s._v("ether ：网卡的 MAC 地址。")]),s._v(" "),a("li",[s._v("txqueuelen ：传输队列的长度。")])])]),s._v(" "),a("li",[s._v("IP 数据包的统计数量：\n"),a("ul",[a("li",[s._v("RX packets ：接收的数据包总数。")])])]),s._v(" "),a("li",[s._v("TX packets ：发送的数据包总数。")]),s._v(" "),a("li",[s._v("bytes ：数据包的总大小。")]),s._v(" "),a("li",[s._v("errors ：出错的数据包数。比如校验错误、帧对齐错误。")]),s._v(" "),a("li",[s._v("dropped ：因为 buffer 内存不足等原因而被丢弃的数据包数。")]),s._v(" "),a("li",[s._v("overrun ：因为缓冲区已满而被丢弃的数据包数。")]),s._v(" "),a("li",[s._v("frame ：因为数据帧出错的数据包数，比如长度不能被 8 整除。")]),s._v(" "),a("li",[s._v("carrier ：因为载体出错的数据包数，比如半双工模式时不可通信。")]),s._v(" "),a("li",[s._v("collisions ：发生碰撞的数据包数。")])]),s._v(" "),a("h2",{attrs:{id:"route"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#route"}},[s._v("#")]),s._v(" route")]),s._v(" "),a("p",[s._v("命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ route    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示本机的路由表")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("例：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# route")]),s._v("\nKernel IP routing table\nDestination     Gateway         Genmask         Flags Metric Ref    Use Iface\ndefault         gateway         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0         UG    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" eth0\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.1        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".255.0   U     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" eth0\nlink-local      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("255.255")]),s._v(".0.0     U     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1002")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" eth0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h2",{attrs:{id:"ip-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip-2"}},[s._v("#")]),s._v(" ip")]),s._v(" "),a("p",[s._v("：可替代 ifconfig、route 命令，且功能更强。")]),s._v(" "),a("p",[s._v("命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("link")]),s._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示所有网卡的信息")]),s._v("\n        -s                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 增加显示网卡接收、发送的字节数（该选项要放在 link 之前）")]),s._v("\n        -s -s             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 增加显示网卡接收、发送的错误包数（该选项要放在 link 之前）")]),s._v("\n        show eth0         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只显示指定网卡的信息")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("set")]),s._v(" eth0 up       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启用网卡")]),s._v("\n                  down    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停用网卡")]),s._v("\n        del eth0          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除网卡")]),s._v("\n\n    addr                            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示所有网卡的信息，及其 IP 地址")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.1/24 dev eth0    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 给网卡增加一个 IP 及掩码")]),s._v("\n        del "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.1/24 dev eth0    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除")]),s._v("\n\n    neighbour                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示当前网段的其它主机")]),s._v("\n\n    route                           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示路由表")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" default via "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.1    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 增加一个默认网关")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br")])]),a("h2",{attrs:{id:"ping"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ping"}},[s._v("#")]),s._v(" ping")]),s._v(" "),a("p",[s._v("：常用于基于 ICMP 协议测试网络是否连通、网络延迟、丢包率、域名解析。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("host"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动 ping")]),s._v("\n        -c n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最多发送 ICMP 报文多少次（默认为无限次）")]),s._v("\n        -i n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每次发送 ICMP 报文的间隔时间（默认为 1 秒）")]),s._v("\n        -I eth0  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用本机的指定网卡来发送 ICMP 报文（默认自动选取网卡）")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("host 可以是 IP 地址或域名，如果是域名，在执行时还会显示出域名解析后的 IP 地址。")])])]),s._v(" "),a("li",[a("p",[s._v("例：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ping baidu.com")]),s._v("\nPING baidu.com "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("39.156")]),s._v(".69.79"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("56")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("84")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" bytes of data.\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" bytes from "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("39.156")]),s._v(".69.79 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("39.156")]),s._v(".69.79"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("icmp_seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("250")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("37.0")]),s._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" bytes from "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("39.156")]),s._v(".69.79 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("39.156")]),s._v(".69.79"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("icmp_seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("250")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("37.0")]),s._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" bytes from "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("39.156")]),s._v(".69.79 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("39.156")]),s._v(".69.79"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("icmp_seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("250")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("37.0")]),s._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" bytes from "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("39.156")]),s._v(".69.79 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("39.156")]),s._v(".69.79"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(": "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("icmp_seq")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("ttl")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("250")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("time")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("37.0")]),s._v(" ms\n^C\n--- baidu.com "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ping")]),s._v(" statistics ---\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" packets transmitted, "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" received, "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("% packet loss, "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("time")]),s._v(" 3003ms\nrtt min/avg/max/mdev "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("37.008")]),s._v("/37.022/37.044/0.136 ms\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("ul",[a("li",[s._v("icmp_seq ：表示这是第几个 ICMP 报文。")]),s._v(" "),a("li",[s._v("ttl ：ICMP 报文剩下的生存期。")]),s._v(" "),a("li",[s._v("time ：发出 ICMP 报文之后，隔了多久才收到回复。")]),s._v(" "),a("li",[s._v("Linux 的 ping 命令默认每隔一秒向目标主机发送一个 ICMP 报文，并且会一直发送，要按 "),a("code",[s._v("Ctrl+C")]),s._v(" 终止。")])])]),s._v(" "),a("li",[a("p",[s._v("例：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ping google.com")]),s._v("\nPING google.com "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("93.46")]),s._v(".8.90"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("56")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("84")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" bytes of data.\n\n^C\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("可见它一直尝试连接目标主机，但并没有成功。原因可能是：\n"),a("ul",[a("li",[s._v("与目标主机的物理网络没有连通。")]),s._v(" "),a("li",[s._v("与目标主机的物理网络连通，但是目标主机没有开启 ICMP 协议。")])])]),s._v(" "),a("li",[s._v("ICMP 不是基于 TCP 通信，因此不需考虑目标主机是否开放了 TCP 端口。")])])])]),s._v(" "),a("h2",{attrs:{id:"traceroute"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#traceroute"}},[s._v("#")]),s._v(" traceroute")]),s._v(" "),a("p",[s._v("：用于测试发送一个数据包到目标主机，显示经过的各个路由节点。")]),s._v(" "),a("ul",[a("li",[s._v("命令："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("traceroute")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("host"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n            -I    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发送 ICMP ECHO 数据包")]),s._v("\n            -T    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发送 TCP SYN 包，默认端口为 80")]),s._v("\n            -U    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发送 UDP 数据表，默认端口是 53")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("先探测 TTL 减 1 的路由节点，再探测 TLL 减 2 的路由节点，以此类推，直到 TTL 减为 0 或者到达目标主机。")])])]),s._v(" "),a("li",[s._v("例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# traceroute baidu.com")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("traceroute")]),s._v(" to baidu.com "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("220.181")]),s._v(".38.148"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("30")]),s._v(" hops max, "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("60")]),s._v(" byte packets\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100.98")]),s._v(".0.1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100.98")]),s._v(".0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.329")]),s._v(" ms  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.170")]),s._v(" ms  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.232")]),s._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("  * * *\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("  * * *\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("  * * *\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("  * * *\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.47")]),s._v(".55.177 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.47")]),s._v(".55.177"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.073")]),s._v(" ms  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.157")]),s._v(" ms  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.765")]),s._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.1")]),s._v(".0.146 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.1")]),s._v(".0.146"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.674")]),s._v(" ms  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.276")]),s._v(" ms  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.274")]),s._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".38.33 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".38.33"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.876")]),s._v(" ms  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.611")]),s._v(" ms  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.524")]),s._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".38.21 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("172.16")]),s._v(".38.21"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.030")]),s._v(" ms  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.677")]),s._v(" ms  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.978")]),s._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("220.181")]),s._v(".182.129 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("220.181")]),s._v(".182.129"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.389")]),s._v(" ms  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.682")]),s._v(" ms  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.957")]),s._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("  * * *\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("220.181")]),s._v(".182.174 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("220.181")]),s._v(".182.174"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.447")]),s._v(" ms  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.676")]),s._v(" ms  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.902")]),s._v(" ms\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v("  * * *\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("14")]),s._v("  * * *\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])]),a("ul",[a("li",[s._v("显示为 * 的路由节点，是因为没有回复 traceroute 发送的数据包。")])])])]),s._v(" "),a("h2",{attrs:{id:"cip-cc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cip-cc"}},[s._v("#")]),s._v(" cip.cc")]),s._v(" "),a("p",[s._v("：一个位于公网的 Web 网站，访问之后会显示本机的公网 IP、地理位置、运营商。")]),s._v(" "),a("ul",[a("li",[s._v("不同场景的用法：\n"),a("ul",[a("li",[s._v("在 Web 浏览器上，访问 "),a("code",[s._v("cip.cc")]),s._v(" 网站。")]),s._v(" "),a("li",[s._v("在 Unix/Linux 上，执行 "),a("code",[s._v("curl cip.cc")]),s._v(" 。")]),s._v(" "),a("li",[s._v("在 Windows 上，执行 "),a("code",[s._v("telnet cip.cc")]),s._v(" 。")])])]),s._v(" "),a("li",[s._v("也可查询指定 IP 的信息："),a("code",[s._v("curl cip.cc/8.8.8.8")])]),s._v(" "),a("li",[s._v("例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# curl cip.cc")]),s._v("\nIP      "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("120.241")]),s._v(".2.7\n地址    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 中国  广东  深圳\n运营商  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 移动\n数据二  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 广东省深圳市 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" 移动\n数据三  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" 中国广东深圳 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" 移动\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])])])}),[],!1,null,null,null);t.default=e.exports},765:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"ip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip"}},[s._v("#")]),s._v(" IP")]),s._v(" "),a("p",[s._v("TCP/IP 协议簇包含 IP、TCP、UDP 等多种协议，是因特网的核心通信协议。")]),s._v(" "),a("h2",{attrs:{id:"ip-协议"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ip-协议"}},[s._v("#")]),s._v(" IP 协议")]),s._v(" "),a("p",[s._v("：因特网协议（Internet Protocol）")]),s._v(" "),a("ul",[a("li",[s._v("属于网络层协议，规定了网络上的主机用 IP 地址确定自己的身份。")]),s._v(" "),a("li",[s._v("面向无连接，只提供尽力而为的数据传输服务 —— 只管把数据发送出去，不进行差错控制。\n"),a("ul",[a("li",[s._v("是不可靠的通信协议。")])])]),s._v(" "),a("li",[s._v("通过 IP 协议，主机可以加入一个专有网络或因特网。\n"),a("ul",[a("li",[s._v("私有 IP ：接入专有局域网的每台主机都必须被分配一个该局域网的 IP 地址。\n"),a("ul",[a("li",[s._v("一个主机可以拥有同一个网络的多个 IP 地址，也可以拥有不同网络的多个 IP 地址。")])])]),s._v(" "),a("li",[s._v("公有 IP ：接入因特网的每台主机都必须被分配一个公有 IP 地址。")])])]),s._v(" "),a("li",[s._v("IP 协议主要有 IPv4、IPv6 两个版本，后者尚未普及。")])]),s._v(" "),a("h2",{attrs:{id:"相关概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#相关概念"}},[s._v("#")]),s._v(" 相关概念")]),s._v(" "),a("ul",[a("li",[s._v("IP 数据包中会记录源 IP 地址、目标 IP 地址。封装成数据帧之后，记录的就是源 Mac 地址、目标 Mac 地址。\n"),a("ul",[a("li",[s._v("数据链路层的通信结点收到一个数据帧之后，会先检查是否有错误，然后查看数据帧的目标地址，如果目标地址是本地地址或广播地址就接收该帧，否则转发。")])])]),s._v(" "),a("li",[s._v("目标 IP 地址的分类：\n"),a("ul",[a("li",[s._v("单播地址：发往某个指定的 IP 地址。")]),s._v(" "),a("li",[s._v("多播地址：发往一组 IP 地址。")]),s._v(" "),a("li",[s._v("广播地址：地址全为 1 ，可以被所有结点接收。")])])]),s._v(" "),a("li",[s._v("最大传输单元：Maximum Transmission Unit（MTU），允许传输的 IP 数据包的最大大小，单位 Bytes 。\n"),a("ul",[a("li",[s._v("这是数据链路层的概念，主要由网卡决定。")]),s._v(" "),a("li",[s._v("以太网中网卡的 MTU 通常设置为 1500 ，因此经常会将一个 TCP 数据段拆分成多个 IP 数据包再传输。")]),s._v(" "),a("li",[s._v("如果某台主机的 MTU 比路由器的 MTU 大，过大的数据包就会被路由器拆分传输，导致数据包数量变多。")])])])]),s._v(" "),a("h2",{attrs:{id:"ipv4"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ipv4"}},[s._v("#")]),s._v(" IPv4")]),s._v(" "),a("p",[s._v("IPv4 地址的长度为 32 位，分为 4 个字段，每个字段有 8 位，用点分十进制表示就是每个字段有一个 0~255 的十进制数。")]),s._v(" "),a("ul",[a("li",[s._v("采用“网络号+主机号”的结构，每个网络号表示一个逻辑网络。")])]),s._v(" "),a("p",[s._v("根据开头几位的不同，可将 IPv4 地址分为 5 类：")]),s._v(" "),a("ul",[a("li",[s._v("A 类地址\n"),a("ul",[a("li",[s._v("以一个 0 开头，网络号占 8 位，主机号占 24 位，取值范围为 "),a("code",[s._v("0.0.0.0~127.255.255.255")]),s._v(" 。")]),s._v(" "),a("li",[s._v("第一个字段有 2^7=128 个可能值，取值范围为 0~127 。")]),s._v(" "),a("li",[s._v("排除网络号全为 0 的 IP 地址、专有地址 "),a("code",[s._v("10.*.*.*")]),s._v("、环回地址 "),a("code",[s._v("127.*.*.*")]),s._v(" 之后，可分配的网络号有 125 个。\n"),a("ul",[a("li",[s._v("每个网络排除全为 0、全为 1 的主机号之后，可分配的主机号有 224-2 个。")]),s._v(" "),a("li",[s._v("因此，可分配的 A 类地址总共有 231 个左右，占全部 IP 地址的一半。")])])]),s._v(" "),a("li",[s._v("A 类的专有地址："),a("code",[s._v("10.*.*.*")])])])]),s._v(" "),a("li",[s._v("B 类地址\n"),a("ul",[a("li",[s._v("以 10 开头，网络号占 16 位，主机号占 16 位，取值范围为 "),a("code",[s._v("128.0.0.0~191.255.255.255")]),s._v(" 。")]),s._v(" "),a("li",[s._v("第一个字段有 2^6=64 个可能值，取值范围为 128~191 。")]),s._v(" "),a("li",[s._v("可分配的网络号有 214 个，每个网络可分配的主机号有 216-2 个。")]),s._v(" "),a("li",[s._v("B 类的专有地址："),a("code",[s._v("172.16.*.*~172.31.*.*")]),s._v(" ，共 16 个网络号。")])])]),s._v(" "),a("li",[s._v("C 类地址\n"),a("ul",[a("li",[s._v("以 110 开头，网络号占 24 位，主机号占 8 位，取值范围为 "),a("code",[s._v("192.0.0.0~223.255.255.255")]),s._v(" 。")]),s._v(" "),a("li",[s._v("第一个字段有 2^5=32 个可能值，取值范围为 192~223 。")]),s._v(" "),a("li",[s._v("可分配的网络号有 221 个，每个网络可分配的主机号只有 28-2=254 个。")]),s._v(" "),a("li",[s._v("C 类的专有地址："),a("code",[s._v("192.168.*.*")]),s._v(" ，共 256 个网络号。")])])]),s._v(" "),a("li",[s._v("D 类地址\n"),a("ul",[a("li",[s._v("以 1110 开头，用于多播地址，取值范围为 "),a("code",[s._v("224.0.0.0~239.255.255.255")]),s._v(" 。")])])]),s._v(" "),a("li",[s._v("E 类地址\n"),a("ul",[a("li",[s._v("以 11110 ，保留给实验或未来使用，取值范围为 "),a("code",[s._v("240.0.0.0~247.255.255.255")]),s._v(" 。")])])])]),s._v(" "),a("p",[s._v("以下 IP 地址不能用于因特网：")]),s._v(" "),a("ul",[a("li",[s._v("专有 IP 地址   ：保留给专有网络使用。这样当主机接入因特网时，路由器能识别出该 IP 是私有 IP 从而忽视它。")]),s._v(" "),a("li",[a("code",[s._v("127.*.*.*")]),s._v("  ：环回地址（lookback、localhost）。\n"),a("ul",[a("li",[s._v("发向该 IP 地址的数据包会直接回送到本机，不会被网卡发出去。即只在物理层传输，不会到数据链路层。")]),s._v(" "),a("li",[s._v("127.0.0.0 是网络号，一般使用 127.0.0.1 。")]),s._v(" "),a("li",[s._v("环回地址对应的子网掩码为 255.255.255.255 。")])])]),s._v(" "),a("li",[s._v("网络号全为 0   ：表示只发送给本网络的主机。\n"),a("ul",[a("li",[s._v("数据包会被路由器限制在本网络内，发送给主机号对应的主机。")])])]),s._v(" "),a("li",[s._v("主机号全为 0   ：是该网络本身的网络号。")]),s._v(" "),a("li",[a("code",[s._v("0.0.0.0")]),s._v(" "),a("ul",[a("li",[s._v("在路由表中用作默认网关，没有找到路由的数据包都会转发给默认网关。")]),s._v(" "),a("li",[s._v("如果服务器监听 0.0.0.0 ，则会接受来自任何 IP 地址的访问。")])])]),s._v(" "),a("li",[s._v("主机号全为 1   ：直接广播地址，数据包会被广播给该网络内的所有主机。")]),s._v(" "),a("li",[s._v("IP 地址全为 1   ：受限广播地址，数据包会广播给本网络内的所有主机。\n"),a("ul",[a("li",[s._v("对应的 MAC 地址为 ffff.ffff.ffff 。")])])])]),s._v(" "),a("h3",{attrs:{id:"ipv4-短缺问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ipv4-短缺问题"}},[s._v("#")]),s._v(" IPv4 短缺问题")]),s._v(" "),a("p",[s._v("IPv4 地址短缺的问题越来越严重，原因包括：")]),s._v(" "),a("ul",[a("li",[s._v("B 类地址的一个网络中可分配的主机号太多，实际接入的主机少，即使接入了这么多主机也会因为路由表太大增加路由器的负担，导致网络服务质量下降。")]),s._v(" "),a("li",[s._v("C 类地址可分配的网络号很多，但每个网络中可分配的主机号较少，只适用于小型局域网。")])]),s._v(" "),a("p",[s._v("为了解决 IPv4 地址短缺的问题，人们采用了以下对策：")]),s._v(" "),a("ul",[a("li",[s._v("划分子网（subnet）\n"),a("ul",[a("li",[s._v("：将一个容量大的网络分成几个子网络，将 IP 地址改成 "),a("code",[s._v("网络号+子网号+主机号")]),s._v(" 的三级结构（只适用于 A、B、C 类地址），然后用 "),a("code",[s._v("IP 地址 子网掩码")]),s._v(" 或 "),a("code",[s._v("IP 地址/子网掩码长度")]),s._v(" 的形式表示该子网。\n"),a("ul",[a("li",[s._v("网络号和子网号对应位的子网掩码（subnet mask）全为 1 ，主机号对应位的子网掩码全为 0 。")]),s._v(" "),a("li",[s._v("一个子网 IP 地址与其子网掩码按位与的结果，就是其子网号。")])])]),s._v(" "),a("li",[s._v("例如：对于 192.168.0.0 ，该网络可容纳 2^8-2 个主机，\n"),a("ul",[a("li",[s._v("从 8 位主机号中取出前一位，便可划分 192.168.0.0/25 和 192.168.0.128/25 两个子网，每个子网可容纳 2^7-2 个主机。")]),s._v(" "),a("li",[s._v("再将 192.168.0.128/25 的子网掩码延长一位，又可划分两个子网，每个子网可容纳 2^6-2 个主机。")]),s._v(" "),a("li",[s._v("每个网络中全为 0 和全为 1 的主机号不可用，因此在 192.168.0.128/25 这个子网中，第一个可用的 IP 地址是 192.168.0.129/25 ，最后一个可用的 IP 地址是 192.168.0.254/25 。")])])]),s._v(" "),a("li",[s._v("不划分子网时，A 类地址的默认子网掩码是 255.0.0.0 ，B 类地址的默认子网掩码是 255.255.0.0 ，C 类地址的默认子网掩码是 255.255.255.0 。")]),s._v(" "),a("li",[s._v("子网掩码为 255.255.255.255 表示该子网只有一个主机，通常用于环回接口。")])])]),s._v(" "),a("li",[s._v("构成超网（supernet）的无类别域间路由（CIDR）技术\n"),a("ul",[a("li",[s._v("：将网络号前 n 位相同的网络看作同类并合并为一个网络，又称为地址聚合、路由聚合。")]),s._v(" "),a("li",[s._v("例如：192.168.0.129 与 192.168.0.130 的前 30 位相同，聚合后的网络为 192.168.0.128/30 。")]),s._v(" "),a("li",[s._v("例如：汇聚 .01010000 与 .01010001 、 .01010010 时，三个 IP 地址的前 30 位相同，但是只有两位主机号，去掉全为 0 和全为 1 的主机号后只能分配两个主机号，所以聚合后的网络应该为 .01010000/29 。又因为 .01010000 这个地址已经被占用，为了避免发生冲突，要一直退位，所以聚合结果为 .01000000/27 。")])])]),s._v(" "),a("li",[s._v("网络地址转换（Network Address Translation ，NAT）\n"),a("ul",[a("li",[s._v("：平时给主机分配专有 IP ，当主机联网时才换成公用 IP 地址。")]),s._v(" "),a("li",[s._v("该技术多用于拨号上网：拨号时主机被 ISP 分配一个公用 IP 地址，联网结束时被收回。")])])]),s._v(" "),a("li",[s._v("使用 IPv6 地址\n"),a("ul",[a("li",[s._v("能从根本上解决 IPv4 地址短缺的问题。")]),s._v(" "),a("li",[s._v("不过全面更换 IP 地址需要的时间久，导致 IPv6 地址还不能通用。")])])])]),s._v(" "),a("h2",{attrs:{id:"ipv6"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ipv6"}},[s._v("#")]),s._v(" IPv6")]),s._v(" "),a("ul",[a("li",[s._v("IPv6 地址的长度为 128 位，分为 8 个字段，每个字段有 16 位，用冒号十六进制表示就是每个字段有 4 个 0~F 的十六进制数。")]),s._v(" "),a("li",[s._v("每个字段前面的 0 可以省略，不过每个位段至少要有一个数字，或者连续几个位段全为 0 时可以省略它们而用双冒号表示。\n"),a("ul",[a("li",[s._v("双冒号不可以出现两次，否则无法判断省略的位数。")]),s._v(" "),a("li",[s._v("例如：0000:210A:0000:0000:02AA:000F:0000:0000 可简写成 0:210A:0:0:2AA:F:0:0 ，再进一步可简写成 0:210A::2AA:F:0:0 或 0:210A:0:0:2AA:F::。")])])]),s._v(" "),a("li",[s._v("IPv6 协议具有巨大的地址空间、新的协议格式、有效的分级结构等优点。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);