(window.webpackJsonp=window.webpackJsonp||[]).push([[102],{578:function(v,t,_){v.exports=_.p+"assets/img/LDAP_1.39d30791.jpg"},878:function(v,t,_){"use strict";_.r(t);var e=_(1),a=Object(e.a)({},(function(){var v=this,t=v.$createElement,e=v._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[e("h1",{attrs:{id:"ldap"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#ldap"}},[v._v("#")]),v._v(" LDAP")]),v._v(" "),e("p",[v._v("：轻型目录访问协议（Lightweight Directory Access Protocol），是一个管理树形结构数据的网络协议，相当于 NoSQL 数据库，常用于实现 SSO 。")]),v._v(" "),e("ul",[e("li",[e("a",{attrs:{href:"https://ldap.com/",target:"_blank",rel:"noopener noreferrer"}},[v._v("官网"),e("OutboundLink")],1)]),v._v(" "),e("li",[v._v("90 年代发布了 LDAP v3 版本，与 v2 版本不兼容。")]),v._v(" "),e("li",[v._v("采用 C/S 架构、TCP 通信。\n"),e("ul",[e("li",[v._v("server 负责存储数据。")]),v._v(" "),e("li",[v._v("client 可以访问 server ，对数据进行增删查改。")])])]),v._v(" "),e("li",[v._v("优点：\n"),e("ul",[e("li",[v._v("适合存储和管理大量账号信息、电话簿、设备列表。")]),v._v(" "),e("li",[v._v("许多开源软件默认将账号信息存储到内置的数据库中，但也支持存储到 LDAP 中，从而允许用同一个账号、密码登录多个网站，实现单点登录。")])])]),v._v(" "),e("li",[v._v("缺点：\n"),e("ul",[e("li",[v._v("部分开源软件不支持 LDAP 。")]),v._v(" "),e("li",[v._v("有较大的学习成本、维护成本，相当于使用一种新数据库。")]),v._v(" "),e("li",[v._v("管理 3 个以上的网站，每个网站管理 30 个以上的用户时，使用 LDAP 才能明显提高效率。")])])])]),v._v(" "),e("h2",{attrs:{id:"数据结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#数据结构"}},[v._v("#")]),v._v(" 数据结构")]),v._v(" "),e("h3",{attrs:{id:"条目"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#条目"}},[v._v("#")]),v._v(" 条目")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("LDAP 服务器上可以创建多个目录信息树（Directory Information Tree ，DIT），在其中按树形结构存储数据。")]),v._v(" "),e("ul",[e("li",[v._v("与 SQL 型数据相比，树形结构的查询速度很快，但写入速度较慢。")]),v._v(" "),e("li",[v._v("目录服务器代理（Directory Server Agent ，DSA）：指可以被 LDAP 客户端获取目录数据的服务器。")])])]),v._v(" "),e("li",[e("p",[v._v("LDAP 存储的每条数据称为条目（Entry）。")]),v._v(" "),e("ul",[e("li",[v._v("添加一个条目时，首先要设置其属性，然后要设置其 RDN 。")]),v._v(" "),e("li",[v._v("LDAP 服务器上有一个 RootDSE 条目，DN 为空，用于记录服务器的信息。")])])]),v._v(" "),e("li",[e("p",[v._v("LDAP 的存储结构示例：")]),v._v(" "),e("p",[e("img",{attrs:{src:_(578),alt:"",loading:"lazy"}})])])]),v._v(" "),e("h3",{attrs:{id:"属性"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#属性"}},[v._v("#")]),v._v(" 属性")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("每个条目要设置至少一个属性（Attribute），用于描述该条目某种方面的信息，格式为 "),e("code",[v._v("<attribute>: <value>")]),v._v(" 。")]),v._v(" "),e("ul",[e("li",[v._v("attribute 和 value 都不区分大小写。")]),v._v(" "),e("li",[v._v("一个条目可以拥有多条重复的属性，比如拥有多个 telephoneNumber 属性，通过 {0}、{1} 等序号区分。")])])]),v._v(" "),e("li",[e("p",[v._v("每个属性有一个属性类型（AttributeType），用于定义属性值（Value）的语法。如下：")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",[v._v("属性")]),v._v(" "),e("th",[v._v("别名")]),v._v(" "),e("th",[v._v("语法")]),v._v(" "),e("th",[v._v("描述")]),v._v(" "),e("th",[v._v("取值举例")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[v._v("user id")]),v._v(" "),e("td",[v._v("uid")]),v._v(" "),e("td",[v._v("Directory String")]),v._v(" "),e("td",[v._v("用户 ID")]),v._v(" "),e("td",[v._v("LeoHsiao")])]),v._v(" "),e("tr",[e("td",[v._v("commonName")]),v._v(" "),e("td",[v._v("cn")]),v._v(" "),e("td",[v._v("Directory String")]),v._v(" "),e("td",[v._v("姓名")]),v._v(" "),e("td",[v._v("LeoHsiao")])]),v._v(" "),e("tr",[e("td",[v._v("surname")]),v._v(" "),e("td",[v._v("sn")]),v._v(" "),e("td",[v._v("Directory String")]),v._v(" "),e("td",[v._v("姓")]),v._v(" "),e("td",[v._v("Leo")])]),v._v(" "),e("tr",[e("td",[v._v("domain component")]),v._v(" "),e("td",[v._v("dc")]),v._v(" "),e("td",[v._v("Directory String")]),v._v(" "),e("td",[v._v("域名中的一个字段")]),v._v(" "),e("td",[v._v("com")])]),v._v(" "),e("tr",[e("td",[v._v("organization")]),v._v(" "),e("td",[v._v("o")]),v._v(" "),e("td",[v._v("Directory String")]),v._v(" "),e("td",[v._v("组织、公司名称")]),v._v(" "),e("td",[v._v("A")])]),v._v(" "),e("tr",[e("td",[v._v("organizationalUnit")]),v._v(" "),e("td",[v._v("ou")]),v._v(" "),e("td",[v._v("Directory String")]),v._v(" "),e("td",[v._v("单位、部门名称")]),v._v(" "),e("td",[v._v("ops")])]),v._v(" "),e("tr",[e("td",[v._v("telephoneNumber")]),v._v(" "),e("td"),v._v(" "),e("td",[v._v("Telephone Number")]),v._v(" "),e("td",[v._v("电话号码")]),v._v(" "),e("td",[v._v("123456")])])])])]),v._v(" "),e("li",[e("p",[v._v("每个条目要选出至少一个属性键值对组合成一个字符串（用加号分隔），作为该条目的名称，称为 RDN（Relative DN）。")]),v._v(" "),e("ul",[e("li",[v._v("例如： "),e("code",[v._v("cn=leo+telephoneNumber=123456")])]),v._v(" "),e("li",[v._v("同一父节点下的各个子节点的 RDN 不能重复。")]),v._v(" "),e("li",[v._v("如果 RDN 中包含 "),e("code",[v._v("#")]),v._v(" "),e("code",[v._v('"')]),v._v(" "),e("code",[v._v("+")]),v._v(" "),e("code",[v._v(",")]),v._v(" "),e("code",[v._v(";")]),v._v(" "),e("code",[v._v("<")]),v._v(" "),e("code",[v._v(">")]),v._v(" "),e("code",[v._v("\\")]),v._v(" 等特殊字符，或者属性值以空格开头或结尾，则要用 "),e("code",[v._v("\\")]),v._v(" 转义。")]),v._v(" "),e("li",[e("code",[v._v("+")]),v._v(" "),e("code",[v._v(",")]),v._v(" "),e("code",[v._v("=")]),v._v(" 字符被视作分隔符，左右可以加上任意个空格。")])])]),v._v(" "),e("li",[e("p",[v._v("将一个条目在目录树的保存路径上的各个节点的 RDN 组合成一个字符串（用逗号分隔），作为该条目的唯一标识名，称为 DN （Distinguished Name）。")]),v._v(" "),e("ul",[e("li",[v._v("Unix 文件路径采用从左到右的组合顺序，而 DN 采用从右到左的组合顺序。")]),v._v(" "),e("li",[v._v("实际上，添加一个条目时，由用户定义其 DN ，而 DN 的左侧第一个字段会被视作 RDN 。\n"),e("ul",[e("li",[v._v("例如：如果一个条目的 DN 为 "),e("code",[v._v("uid=leo, ou=ops, o=example")]),v._v(" ，则其 RDN 为 "),e("code",[v._v("uid=leo")]),v._v(" ，父节点的 DN 为 "),e("code",[v._v("ou=ops, o=example")]),v._v(" 。")])])]),v._v(" "),e("li",[v._v("目录树的根节点称为 Root DN ，其 RDN 可以为空字符串。")])])])]),v._v(" "),e("h3",{attrs:{id:"对象类"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#对象类"}},[v._v("#")]),v._v(" 对象类")]),v._v(" "),e("ul",[e("li",[e("p",[v._v("每个条目可以继承任意个对象类（ObjectClass），从而继承它们的属性。")]),v._v(" "),e("ul",[e("li",[v._v("比如继承 person 类之后，就可以使用其预先定义的姓（sn）、名（cn）、电话(telephoneNumber)、密码(userPassword)等属性。")])])]),v._v(" "),e("li",[e("p",[v._v("对象类分为三大类：")]),v._v(" "),e("ul",[e("li",[v._v("结构类型（Structural）：最基本的父类，每个条目必须继承且只能继承一个。")]),v._v(" "),e("li",[v._v("抽象类型(Abstract)：不能被直接继承。")]),v._v(" "),e("li",[v._v("辅助类型（Auxiliary）：每个条目可以继承任意个。")])])]),v._v(" "),e("li",[e("p",[v._v("对象类的属性分为两类：")]),v._v(" "),e("ul",[e("li",[v._v("必要属性（Required）：必须被继承。")]),v._v(" "),e("li",[v._v("可选属性（Optional）：不一定被继承。")])])]),v._v(" "),e("li",[e("p",[v._v("如果两个 ObjectClass 拥有某个相同的属性，则只会继承一次该属性。")])]),v._v(" "),e("li",[e("p",[v._v("常用的对象类如下：")]),v._v(" "),e("table",[e("thead",[e("tr",[e("th",[v._v("对象类")]),v._v(" "),e("th",[v._v("必要属性")])])]),v._v(" "),e("tbody",[e("tr",[e("td",[v._v("account")]),v._v(" "),e("td",[v._v("uid")])]),v._v(" "),e("tr",[e("td",[v._v("alias")]),v._v(" "),e("td",[v._v("aliasedObjectName（用于引用另一个条目）")])]),v._v(" "),e("tr",[e("td",[v._v("country")]),v._v(" "),e("td",[v._v("c")])]),v._v(" "),e("tr",[e("td",[v._v("dcObject")]),v._v(" "),e("td",[v._v("dc（域名中的一个字段）")])]),v._v(" "),e("tr",[e("td",[v._v("ipHost")]),v._v(" "),e("td",[v._v("cn、ipHostNumber")])]),v._v(" "),e("tr",[e("td",[v._v("mailAccount")]),v._v(" "),e("td",[v._v("mail")])]),v._v(" "),e("tr",[e("td",[v._v("organization")]),v._v(" "),e("td",[v._v("o")])]),v._v(" "),e("tr",[e("td",[v._v("organizationalUnit")]),v._v(" "),e("td",[v._v("ou")])]),v._v(" "),e("tr",[e("td",[v._v("person")]),v._v(" "),e("td",[v._v("cn、sn")])]),v._v(" "),e("tr",[e("td",[v._v("top")]),v._v(" "),e("td",[v._v("没有属性，一般被 Root DN 继承")])])])])]),v._v(" "),e("li",[e("p",[v._v("每个 AttributeType、ObjectClass 有一个唯一的对象标识符（OID），由数字和点组成。比如 "),e("code",[v._v("Oid: 1.3.6.1.1.1.0.0")]),v._v(" 。")])]),v._v(" "),e("li",[e("p",[v._v("LDAP 服务器通常自带了一些 Schema 文件，定义了大量 ObjectClass ，供用户使用。")])])]),v._v(" "),e("h2",{attrs:{id:"配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[v._v("#")]),v._v(" 配置")]),v._v(" "),e("ul",[e("li",[v._v("LDAP 支持用 LDIF（LDAP Interchange Format） 格式的文本文件导入、导出数据，其语法如下：\n"),e("ul",[e("li",[v._v("一个 LDIF 文件可以保存任意个条目，相邻的条目之间用至少一个空行分隔。")]),v._v(" "),e("li",[v._v("每行写入一个 "),e("code",[v._v("key: value")]),v._v(" 格式的参数，value 末尾不能有空格。")]),v._v(" "),e("li",[v._v("用 # 声明单行注释。")]),v._v(" "),e("li",[v._v("如果一行不为空且以空格开头，则将一个空格之后的内容附加到前一行之后，即使前一行是注释。")]),v._v(" "),e("li",[v._v("例："),e("div",{staticClass:"language-ini line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-ini"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key attr-name"}},[v._v("dn: dc")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[v._v("baidu, dc=com    # 定义 dn")]),v._v("\nobjectclass: top        # 继承一个对象类\nobjectclass: dcobject\ndc: com                 # 定义一个属性\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br"),e("span",{staticClass:"line-number"},[v._v("2")]),e("br"),e("span",{staticClass:"line-number"},[v._v("3")]),e("br"),e("span",{staticClass:"line-number"},[v._v("4")]),e("br")])])])])]),v._v(" "),e("li",[v._v("同时只能对一个条目进行操作。")]),v._v(" "),e("li",[v._v("操作类型为 modify 时，还要选择 modify 的类型，如下：\n"),e("ul",[e("li",[v._v("add\n"),e("ul",[e("li",[v._v("：指定一个属性名、一组属性值，从而增加一个属性。")]),v._v(" "),e("li",[v._v("如果该属性已存在，则会报错。")])])]),v._v(" "),e("li",[v._v("delete\n"),e("ul",[e("li",[v._v("：如果指定一个属性名，则删除该属性的所有值。如果指定一个属性名、一组属性值，则只删除该属性的指定值。")]),v._v(" "),e("li",[v._v("如果要删除的目标不存在，则会报错。")])])]),v._v(" "),e("li",[v._v("replace\n"),e("ul",[e("li",[v._v("：如果指定一个属性名，则删除该属性的所有值。如果指定一个属性名、一组属性值，则删除该属性的所有值，再加入指定的值。")])])]),v._v(" "),e("li",[v._v("increment\n"),e("ul",[e("li",[v._v("：指定一个属性名、一个整数值（可以为负），从而对原本的属性值施加一定增量。")])])])])])]),v._v(" "),e("h2",{attrs:{id:"查询"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#查询"}},[v._v("#")]),v._v(" 查询")]),v._v(" "),e("ul",[e("li",[v._v("LDAP 的查询表达式可以由一个或多个属性过滤条件 filter 组成。")]),v._v(" "),e("li",[v._v("filter 的语法为 "),e("code",[v._v("(<attribute><operator><value>)")]),v._v(" ，其中常用的运算符包括 "),e("code",[v._v("=")]),v._v(" "),e("code",[v._v("<=")]),v._v(" "),e("code",[v._v(">=")]),v._v(" 。\n"),e("ul",[e("li",[v._v("运算符的前后不能插入多余的空格，否则可能产生歧义。")]),v._v(" "),e("li",[v._v("每个 filter 要用一对括号作为定界符包住，除非查询表达式中只有一个简单的 filter 。")]),v._v(" "),e("li",[v._v("条目的 dn 不算属性，不能用于查询，只能用作查询的起点。")])])]),v._v(" "),e("li",[v._v("对 filter 进行运算的语法为 "),e("code",[v._v("(<operator> 《filter>...)")]),v._v(" ，其中常用的运算符包括 "),e("code",[v._v("&")]),v._v(" "),e("code",[v._v("|")]),v._v(" "),e("code",[v._v("!")]),v._v(" 。")]),v._v(" "),e("li",[v._v("查询表达式示例："),e("div",{staticClass:"language-ini line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-ini"}},[e("code",[e("span",{pre:!0,attrs:{class:"token key attr-name"}},[v._v("cn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[v._v("test         # 查询包含该属性的条目")]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[v._v("cn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[v._v("test*        # value 可以使用通配符")]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[v._v("(!(cn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[v._v("test))")]),v._v("\n"),e("span",{pre:!0,attrs:{class:"token key attr-name"}},[v._v("(& (cn")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[v._v("=")]),e("span",{pre:!0,attrs:{class:"token value attr-value"}},[v._v("test) (!(| (objectClass=top) (objectClass=dcObject) )) )")]),v._v("\n")])]),v._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[v._v("1")]),e("br"),e("span",{staticClass:"line-number"},[v._v("2")]),e("br"),e("span",{staticClass:"line-number"},[v._v("3")]),e("br"),e("span",{staticClass:"line-number"},[v._v("4")]),e("br")])])])])])}),[],!1,null,null,null);t.default=a.exports}}]);