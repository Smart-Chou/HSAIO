(window.webpackJsonp=window.webpackJsonp||[]).push([[106],{796:function(s,a,t){"use strict";t.r(a);var n=t(1),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"lisp"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#lisp"}},[s._v("#")]),s._v(" Lisp")]),s._v(" "),t("p",[s._v("：一个古老的编译型语言。")]),s._v(" "),t("ul",[t("li",[s._v("虽然古老，但是诞生之后有不断改进，扩展了许多现代语言的功能。")]),s._v(" "),t("li",[s._v("存在多种方言：\n"),t("ul",[t("li",[s._v("Scheme ：于 1975 年发布。")]),s._v(" "),t("li",[t("a",{attrs:{href:"https://lisp-lang.org/learn/",target:"_blank",rel:"noopener noreferrer"}},[s._v("Common Lisp"),t("OutboundLink")],1),s._v(" ：于 1984  年发布，本文介绍其语法。")]),s._v(" "),t("li",[s._v("Racket ：于 1995 年发布。")]),s._v(" "),t("li",[s._v("Clojure ：于 2007 年发布。源代码编译成 Java 字节码之后由 JVM 运行。")])])])]),s._v(" "),t("h2",{attrs:{id:"相关历史"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#相关历史"}},[s._v("#")]),s._v(" 相关历史")]),s._v(" "),t("ul",[t("li",[s._v("1936 年，剑桥大学的图灵设想出一种能自动计算的机器：在一条纸带上的每一格记下一个简单符号，一台机器像人脑一样依次读取每格的符号，根据符号执行某种操作。\n"),t("ul",[t("li",[s._v("这种机器被称为图灵机，特点：\n"),t("ul",[t("li",[s._v("一台图灵机可以执行任何算法。")]),s._v(" "),t("li",[s._v("如果一个问题可以表示成算法形式，即可计算，则可以被图灵机解决。")])])]),s._v(" "),t("li",[s._v("这设计了计算机的基本运行逻辑。")]),s._v(" "),t("li",[s._v("如果一个编程语言能实现图灵机的基本功能，比如算术运算、逻辑运算、条件判断、循环，则称为图灵完备（Turing Completeness）。")])])]),s._v(" "),t("li",[s._v("1945 年 3 月，参与美国原子弹研制的冯·诺依曼起草了一份论述 EDVAC（Electronic Discrete Variable Automatic Computer）的报告，将计算机设计成五个基本部分：运算器、控制器、存储器、输入设备、输出设备。\n"),t("ul",[t("li",[s._v("这设计了计算机的基本架构，沿用至今。")])])]),s._v(" "),t("li",[s._v("1950 年，图灵发表论文《计算机器与智能》，提出了图灵测试：如果一台机器让人不能分辨出它是机器，则可以判断该机器具备人工智能。")]),s._v(" "),t("li",[s._v("1954 年，IBM 公司的 John Backus 发明了 Fortran 语言。\n"),t("ul",[t("li",[s._v("它是世界上第一种高级编程语言，主要用于公式计算。")])])]),s._v(" "),t("li",[s._v("1956 年 8 月，John McCarthy 在 Dartmouth 学院发起一场会议，与香农、Nathaniel Rochester、Marvin Minsky 等人在讨论中首次提出了人工智能的概念。")]),s._v(" "),t("li",[s._v("1958 年，John McCarthy 因为 Fortran 的功能不满足需求，发明了 Lisp 语言。\n"),t("ul",[t("li",[s._v("它是第一种支持递归函数的高级编程语言。")])])])]),s._v(" "),t("h2",{attrs:{id:"语法特点"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#语法特点"}},[s._v("#")]),s._v(" 语法特点")]),s._v(" "),t("ul",[t("li",[s._v("源文件的扩展名为 .lisp 或 .lsp 。")]),s._v(" "),t("li",[s._v("代码可以编译后执行，也可以通过解释器直接执行。")]),s._v(" "),t("li",[s._v("用分号 "),t("code",[s._v(";")]),s._v(" 声明单行注释，用 "),t("code",[s._v("#|")]),s._v(" 和 "),t("code",[s._v("|#")]),s._v(" 声明多行注释。")]),s._v(" "),t("li",[s._v("标识符不区分大小写。")]),s._v(" "),t("li",[s._v("支持定义函数，支持面向对象编程。")])]),s._v(" "),t("h2",{attrs:{id:"括号表达式"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#括号表达式"}},[s._v("#")]),s._v(" 括号表达式")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Lisp 程序的主要组成单位：")]),s._v(" "),t("ul",[t("li",[s._v("atom ：一个数字或标识符。\n"),t("ul",[t("li",[s._v("如果代码中的一个字符串没有用双引号作为定界符，则被当做 atom 。如果它全由数字字符或小数点组成，则视作数字，否则视作变量名、函数名等标识符。如下："),t("div",{staticClass:"language-lisp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-lisp"}},[t("code",[s._v("3.14        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; 数字")]),s._v("\nvar1        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; 标识符")]),s._v("\nHello       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; 标识符")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; 字符串")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])]),s._v(" "),t("li",[s._v("特别地，字母 "),t("code",[s._v("t")]),s._v(" 表示逻辑真，"),t("code",[s._v("nil")]),s._v(" 表示逻辑假或空列表。")])])]),s._v(" "),t("li",[s._v("string ：字符串，用双引号作为定界符，支持用反斜杠 \\ 转义字符。")]),s._v(" "),t("li",[s._v("list ：列表，是一个包含任意个 atom 或 list 的括号表达式。\n"),t("ul",[t("li",[s._v("如下："),t("div",{staticClass:"language-lisp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-lisp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" Hello"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])])])])])]),s._v(" "),t("li",[t("p",[s._v("Lisp 的每个语句都放在括号表达式中：")]),s._v(" "),t("div",{staticClass:"language-lisp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-lisp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token car"}},[s._v("write")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; 调用函数 write 打印一个值，前后要加上括号")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token car"}},[s._v("write-line")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello World"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; 打印一个值并换行")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("函数本身不需要括号就可以传入参数，即不需要 "),t("code",[s._v("( write(6) )")]),s._v(" 。")]),s._v(" "),t("li",[s._v("缺点是括号嵌套多层之后的可读性较差。")])])]),s._v(" "),t("li",[t("p",[s._v("Lisp 的括号表达式采用前缀表示法：将运算符写在操作数之前。")]),s._v(" "),t("div",{staticClass:"language-lisp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-lisp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token car"}},[s._v("write")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token car"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; 相当于 write(1 + 2 + 3)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token car"}},[s._v("write")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token car"}},[s._v("*")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token car"}},[s._v("+")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; 相当于 write((1 + 2) * 3)")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"变量"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#变量"}},[s._v("#")]),s._v(" 变量")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("定义全局变量：")]),s._v(" "),t("div",{staticClass:"language-lisp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-lisp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token defvar"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("defvar")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("x")])]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.14")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token car"}},[s._v("write")]),s._v(" x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("变量的值只能是数字类型。")])])]),s._v(" "),t("li",[t("p",[s._v("定义局部变量：")]),s._v(" "),t("div",{staticClass:"language-lisp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-lisp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("setq")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.14")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("setq")]),s._v(" y x"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token car"}},[s._v("write")]),s._v(" y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"流程控制"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#流程控制"}},[s._v("#")]),s._v(" 流程控制")]),s._v(" "),t("ul",[t("li",[s._v("if 语句："),t("div",{staticClass:"language-lisp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-lisp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("setq")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.14")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token car"}},[s._v(">")]),s._v(" x "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token car"}},[s._v("format")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"~% x is large enough"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; if 条件为真时，执行第一个代码块")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token car"}},[s._v("format")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("t")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"~% x is not big enough"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("; if 条件为假时，执行第二个代码块")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"函数"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#函数"}},[s._v("#")]),s._v(" 函数")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("定义函数：")]),s._v(" "),t("div",{staticClass:"language-lisp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-lisp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token defun"}},[t("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("defun")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("average")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token arguments"}},[t("span",{pre:!0,attrs:{class:"token argument variable"}},[s._v("x")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token argument variable"}},[s._v("y")])]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")])]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token car"}},[s._v("/")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" + x y"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("函数内最后一个执行的表达式的取值会作为函数的返回值。")])])]),s._v(" "),t("li",[t("p",[s._v("调用函数：")]),s._v(" "),t("div",{staticClass:"language-lisp line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-lisp"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token car"}},[s._v("write")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),t("span",{pre:!0,attrs:{class:"token car"}},[s._v("average")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])])])}),[],!1,null,null,null);a.default=e.exports}}]);