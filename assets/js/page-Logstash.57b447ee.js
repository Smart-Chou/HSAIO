(window.webpackJsonp=window.webpackJsonp||[]).push([[108],{680:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"logstash"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logstash"}},[s._v("#")]),s._v(" Logstash")]),s._v(" "),a("p",[s._v("：一个数据处理程序。可以收集多种格式的数据，加工处理之后，写入多种数据库。")]),s._v(" "),a("ul",[a("li",[s._v("采用 Ruby 开发，通过 JRuby 解释器运行在 JVM 上。")]),s._v(" "),a("li",[s._v("2009 年，Jordan Sissel 发布了 Logstash ，成为了流行的日志采集工具，也可处理其它类型的数据。")]),s._v(" "),a("li",[s._v("2013 年，Logstash 被 Elastic 公司收购，组成了 ELK 系统。")])]),s._v(" "),a("h2",{attrs:{id:"部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[s._v("#")]),s._v(" 部署")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("下载二进制版：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://artifacts.elastic.co/downloads/logstash/logstash-7.10.0-linux-x86_64.tar.gz\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("然后启动：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("bin/logstash\n              -f "),a("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("PATH")]),s._v("                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --path.config ，指定配置文件的目录，会加载其下所有 *.conf 文件")]),s._v("\n              -e STRING                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --config.string ，传入一个字符串作为配置")]),s._v("\n              --log.level"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("info            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定日志等级")]),s._v("\n              -V                          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示版本号")]),s._v("\n              -r                          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --config.reload.automatic ，自动加载发生变化的配置文件")]),s._v("\n              --config.reload.interval "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认每隔 3 秒检查一次配置文件是否变化")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("ul",[a("li",[s._v("如果启用了 -r 选项，则 logstash 检查到配置文件发生变化时，会重新加载。\n"),a("ul",[a("li",[s._v("重新加载时，logstash 会根据新的配置文件，尝试创建新管道并使用。如果新管道可以正常运行（比如语法没报错），则用新管道替换旧管道。否则，继续运行旧管道。")]),s._v(" "),a("li",[s._v("用 "),a("code",[s._v("kill -SIGHUP")]),s._v(" 发送信号，也会使其重新加载一次配置文件。")]),s._v(" "),a("li",[s._v("插件不一定能重新加载，可能依然需要重启 logstash 。")])])])])]),s._v(" "),a("li",[a("p",[s._v("或者用 docker-compose 部署：")]),s._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("logstash")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" logstash\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" logstash"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("7.10.1\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" unless"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("stopped\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 5044"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5044")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./config"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/usr/share/logstash/config\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/usr/share/logstash/data\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("ul",[a("li",[s._v("容器内以非 root 用户运行服务，需要调整挂载目录的权限："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p  config data\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" -R  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1000")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])])])]),s._v(" "),a("h2",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Logstash 的配置目录的结构如下：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("config/\n├── conf.d/               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 存放一些管道的定义文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("   ├── a.conf\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("   └── b.conf\n├── jvm.options           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# JVM 的配置，比如限制内存 -Xmx")]),s._v("\n├── log4j2.properties     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Java 日志的配置")]),s._v("\n├── logstash.yml          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# logstash 本身的配置")]),s._v("\n├── pipelines.yml         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义管道")]),s._v("\n└── startup.options       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 自定义 logstash 启动命令的配置，供 systemd 读取")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("logstash.yml 默认为空，配置示例：")]),s._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# path.data: /var/lib/logstash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# path.logs: /var/log/logstash")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# log.level: info")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# log.format: plain")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dead_letter_queue.enable: false    # 是否启用死信队列，默认为 false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("pipeline")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("batch")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("size")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("125")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# input 阶段每接收指定数量的事件，才打包成一个 batch ，供 filter、output 阶段的一个 worker 处理。增加该值会提高处理速度")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("delay")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 收集 batch 时，等待接收新事件的超时时间，单位 ms 。如果等待超时，则立即打包成一个 batch 。每个新事件会单独考虑超时时间")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("workers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 处理 filter、output 阶段的线程数，默认等于 CPU 核数。可以大于 CPU 核数，因为输出阶段的 worker 会等待网络 IO 而不占用 CPU")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("ul",[a("li",[s._v("pipeline 在内存中处理的 event 最大数量为 size * workers 。")]),s._v(" "),a("li",[s._v("接收一个 batch 的最长耗时为 size * delay 。")])])]),s._v(" "),a("li",[a("p",[s._v("pipelines.yml 的配置示例：")]),s._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("pipeline.id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" main                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个管道")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path.config")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"config/conf.d/*.conf"')]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 导入配置文件")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# pipeline.output.workers: 1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("ul",[a("li",[s._v("pipelines.yml 可通过 - 创建多个管道，默认会继承 logstash.yml 全局作用域的配置。")])])])]),s._v(" "),a("h2",{attrs:{id:"pipeline"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pipeline"}},[s._v("#")]),s._v(" pipeline")]),s._v(" "),a("h3",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),a("ul",[a("li",[s._v("Linux 系统上通常通过管道符筛选日志，比如 "),a("code",[s._v("cat test.log | grep ERROR'")]),s._v(" 。而 Logstash 处理数据的机制也称为管道（pipeline），每条数据称为一个事件（event）。")]),s._v(" "),a("li",[s._v("Logstash 可以运行多个管道，每个管道分为三个阶段：\n"),a("ul",[a("li",[s._v("input ：输入数据。")]),s._v(" "),a("li",[s._v("filter ：过滤、修改数据。该阶段可以省略。")]),s._v(" "),a("li",[s._v("output ：输出数据。")])])])]),s._v(" "),a("h3",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),a("p",[s._v("通过命令行创建管道的示例：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("启动 Logstash ，运行一个简单的管道：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("bin/logstash -e "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'input { stdin { } } output { stdout {} }'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("p",[s._v("这里接收 stdin 输入的数据，没有 filter ，直接输出到 stdout 。")])]),s._v(" "),a("li",[a("p",[s._v("此时在终端输入一个字符串 Hello ，按下回车，显示的输出如下：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@timestamp"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-01-12T07:37:00.045Z,\n          "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"host"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"CentOS-1"')]),s._v(",\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Hello"')]),s._v(",\n      "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"@version"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])]),s._v(" "),a("p",[s._v("通过配置文件创建管道的示例：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("创建一个配置文件 "),a("code",[s._v("config/pipeline.conf")]),s._v(" ，定义一个管道：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("input "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# file {              # 读取文件作为输入")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   path => "/var/log/http.log"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# }")]),s._v("\n  beats "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 接收 beats 的输入")]),s._v("\n    port "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"5044"')]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 监听一个端口，供 beats 发送数据进来。这里采用 TCP 协议通信，而不是 HTTP 协议")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("host")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"0.0.0.0"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# client_inactivity_timeout => 60       # 如果 beats 连续多久未活动，则关闭 TCP 连接，单位为秒")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# codec => "plain"                      # 设置处理输入数据的格式。默认为 plain')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# include_codec_tag => true             # 是否给数据添加一个 tag ，记录 codec 信息。默认为 true ，使得每个 event 都有一个 beats_input_codec_plain_applied 标签")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# kafka {             # 从 kafka 获取消息")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   bootstrap_servers       => "localhost:9092"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   auto_commit_interval_ms => 5000")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   auto_offset_reset       => "latest"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   codec                   => "json"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   consumer_threads        => 1")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   group_id                => "logstash"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   topics_pattern          => "logstash.*"  # 根据正则表达式，订阅一些 topic')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# }")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# filter {")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# }")]),s._v("\n\noutput "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  stdout "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("                                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出到终端，便于调试")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# codec => rubydebug                    # 输出时默认采用 rubydebug 格式")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# file {                                  # 输出到文件")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   path  => "/tmp/http.log"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   codec => line { format => "custom format: %{message}"}    # 设置处理数据的格式。默认为 json_lines')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# }")]),s._v("\n  elasticsearch "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("                           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 输出到 ES")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该插件会将 pipeline 的一组 batch event 放在一个 bulk 请求中发出，如果单个请求超过 20M 则拆分成多个请求")]),s._v("\n    hosts "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://10.0.0.1:9200"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# user                => "admin"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# password            => "123456"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ssl_certificate_verification => true                            # 使用 HTTPS 连接时，是否验证 SSL 证书")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# http_compression    => false                                    # 是否对请求 body 进行 gzip 压缩")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# index               => "logstash-%{+yyyy.MM.dd}"                # 指定写入的索引名。可通过 %{} 插入变量，比如 %{[field]][sub_field]}')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# document_id         => "%{[@metadata][_id]}"                    # 指定写入的文档 id 。如果已存在相同 id 的文档，则会覆盖它')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# manage_template     => true                                     # Logstash 启动时，是否自动在 ES 中创建索引模板")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# template            => "/path/to/logstash/logstash-apache.json" # template 的配置文件，默认使用内置的模板')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# template_name       => "logstash"                               # template 的名称')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# template_overwrite  => false                                    # 如果 ES 中已存在同名 template ，是否覆盖它")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# retry_initial_interval  => 2                                    # 第 n 次重试之前等待 n*retry_initial_interval 秒")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# retry_max_interval      => 64                                   # 重试时的最大间隔时间")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br")])]),a("ul",[a("li",[s._v("output 阶段，如果某个 event 输出失败，有几种处理措施：\n"),a("ul",[a("li",[s._v("大部分情况下，会无限重试。")]),s._v(" "),a("li",[s._v("如果 HTTP 响应码为 409 conflict ，则不会重试，丢弃 event 。")]),s._v(" "),a("li",[s._v("如果 HTTP 响应码为 400 mapper_parsing_exception 或 404 ，表示不能重试，则打印报错日志，丢弃 event 。\n"),a("ul",[a("li",[s._v("可以启用死信队列，将这些 event 保存到 data/dead_letter_queue/ 目录下，然后可通过 input.dead_letter_queue 插件读取。")])])]),s._v(" "),a("li",[s._v("如果 HTTP 响应码为 403 pressure too high ，表示 ES 负载过大，拒绝了 bulk 请求。此时会自动重试，但这会导致 ES 的负载更大，可能返回 503 Unavailable ，最终导致 Logstash 放弃重试。建议增加 retry 的间隔。")])])])])]),s._v(" "),a("li",[a("p",[s._v("启动 Logstash ，运行指定的管道：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("bin/logstash -f config/pipeline.conf --log.level"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("debug\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"语法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#语法"}},[s._v("#")]),s._v(" 语法")]),s._v(" "),a("p",[s._v("pipeline 的语法与 Ruby 相似，特点如下：")]),s._v(" "),a("ul",[a("li",[s._v("Hash 字典的键值对之间通过空格分隔，比如 "),a("code",[s._v('{"field1" => "A" "field2" => "B"}')]),s._v(" 。")]),s._v(" "),a("li",[s._v("支持引用变量：\n"),a("ul",[a("li",[s._v("用 "),a("code",[s._v("filed")]),s._v(" 或 "),a("code",[s._v("[filed]")]),s._v(" 的格式引用 event 的顶级字段。")]),s._v(" "),a("li",[s._v("用 "),a("code",[s._v("[filed][sub_filed]...")]),s._v(" 的格式引用子字段。\n"),a("ul",[a("li",[s._v("引用子字段时，如果父字段不存在，则会自动创建它，因此应该先检查父字段是否存在。如下："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("json"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" and "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("json"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("version"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"null"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  mutate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    remove_field "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[json][version]"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])])]),s._v(" "),a("li",[s._v("用 "),a("code",[s._v("%{filed}")]),s._v(" 的格式获取字段的值。")]),s._v(" "),a("li",[s._v("用 "),a("code",[s._v("${VAR}")]),s._v(" 的格式获取终端环境变量的值。")]),s._v(" "),a("li",[s._v("例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("filter "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("agent_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" and "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("@metadata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("time"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    mutate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      add_field "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"port"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"'),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("${TCP_PORT}")]),s._v('"')]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[@metadata][tmp_name]"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%{agent_name} %{[@metadata][time]}"')]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("@metadata")]),s._v(" 字段不会被 output 阶段输出，因此可以存储一些临时的子字段。")])])])])]),s._v(" "),a("li",[s._v("支持使用 if 语句：\n"),a("ul",[a("li",[s._v("支持 "),a("code",[s._v("<")]),s._v("、"),a("code",[s._v(">")]),s._v("、"),a("code",[s._v("<=")]),s._v("、"),a("code",[s._v(">=")]),s._v("、"),a("code",[s._v("==")]),s._v("、"),a("code",[s._v("!=")]),s._v(" 比较运算符。")]),s._v(" "),a("li",[s._v("支持 "),a("code",[s._v("=~")]),s._v(" "),a("code",[s._v("!~")]),s._v(" 运算符，判断左侧的字符串是否匹配右侧的正则表达式。")]),s._v(" "),a("li",[s._v("支持 "),a("code",[s._v("and")]),s._v("、"),a("code",[s._v("or")]),s._v("、"),a("code",[s._v("!")]),s._v("、"),a("code",[s._v("not")]),s._v("、"),a("code",[s._v("not in")]),s._v(" 逻辑运算符。")]),s._v(" "),a("li",[s._v("例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("filter "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"DEBUG"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    grok "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"WARN"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    grok "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    grok "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v("."),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])]),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=~")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"DEBUG"')]),s._v(" or "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=~")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"WARN"')]),s._v(" or "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=~")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ERROR"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"DEBUG"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"WARN"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ERROR"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"_grokparsefailure"')]),s._v(" not "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("tags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断一个 tag 是否在 tags 字段中存在")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("                              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断一个字段是否存在，且取值不为 false、null")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("                           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果字段不存在，则添加它")]),s._v("\n  add_field "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"level"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"DEBUG"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])])])]),s._v(" "),a("h2",{attrs:{id:"插件"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#插件"}},[s._v("#")]),s._v(" 插件")]),s._v(" "),a("h3",{attrs:{id:"codec"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#codec"}},[s._v("#")]),s._v(" codec")]),s._v(" "),a("ul",[a("li",[s._v("codec 类型的插件用于按特定的文本格式编码、解码数据，可以用于 pipeline 的 input 或 output 阶段。")]),s._v(" "),a("li",[s._v("codec 插件举例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("plain         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 纯文本，即不进行处理")]),s._v("\nline          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用于解码输入时，将每行文本视作一个 event 。用于编码输出时，将每个 event 保存成一行文本")]),s._v("\nmultiline     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将连续的多行文本视作同一个 event 。不过该操作可以由 Beats 完成，减轻 Logstash 的工作量")]),s._v("\njson          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按 JSON 格式处理，忽略换行符、缩进")]),s._v("\njson_lines    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据换行符 `\\n` 将文本分成多行，每行视作一个 JSON 格式的 event")]),s._v("\nrubydebug     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按 Ruby 调试信息的格式处理")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"grok"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#grok"}},[s._v("#")]),s._v(" grok")]),s._v(" "),a("p",[s._v("：一个 filter 插件，用于按正则表达式解析 event 中的某些字段。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Kibana 网页上提供的开发工具包含了 grok debugger ，便于调试 grok pattern 。")])]),s._v(" "),a("li",[a("p",[s._v("例：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("假设输入数据是一行纯文本格式的日志：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2020")]),s._v("-01-12 07:24:43.659+0000  INFO  "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.1 User login successfully\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("编写一个 grok 表达式来解析：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("%"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("TIMESTAMP_ISO8601:timestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("s+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("?"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("level"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("S+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("s+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("?"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("client_ip"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("S+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("s+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("?"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("message"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(".*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("$\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("可以按 "),a("code",[s._v("(?<field>pattern)")]),s._v(" 的格式匹配字段。例如 "),a("code",[s._v("(?<level>\\S+)")]),s._v(" 表示使用正则表达式 "),a("code",[s._v("\\S+")]),s._v(" 进行匹配，将匹配结果赋值给名为 level 的字段。")]),s._v(" "),a("li",[s._v("可以按 "),a("code",[s._v("%{NAME:field}")]),s._v(" 的格式调用事先定义的正则表达式。例如 "),a("code",[s._v("%{TIMESTAMP_ISO8601:timestamp}")]),s._v(" 表示使用一个名为 TIMESTAMP_ISO8601 的正则表达式进行匹配，将匹配结果赋值给名为 timestamp 的字段。")])])]),s._v(" "),a("li",[a("p",[s._v("grok 输出的结构化数据为：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"level"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"INFO"')]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"client_ip"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.0.0.1"')]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"User login successfully"')]),s._v(",\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"timestamp"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2020-01-12 07:24:43.659+0000"')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("可以事先定义一些正则表达式，然后通过名称调用它们。")]),s._v(" "),a("ul",[a("li",[s._v("定义格式为："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("NAME  pattern\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[s._v("例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("INT         "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("?:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("+-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("?"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("?:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("-9"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),s._v("\nWORD        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("b"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("w+"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("b\nSPACE       "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("s*\nNOTSPACE    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("S+\nGREEDYDATA  .*\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])]),s._v(" "),a("li",[s._v("grok 内置了一些 "),a("a",{attrs:{href:"https://github.com/logstash-plugins/logstash-patterns-core/blob/master/patterns/ecs-v1/grok-patterns",target:"_blank",rel:"noopener noreferrer"}},[s._v("patterns"),a("OutboundLink")],1),s._v(" 。")])])]),s._v(" "),a("li",[a("p",[s._v("例：在 pipeline 的 filter 中使用 grok 插件")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("filter "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  grok "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    match "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"%{TIMESTAMP_ISO8601:timestamp}\\s+(?<level>\\S+)\\s+(?<client_ip>\\S+)\\s+(?<message>.*)$"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 解析 message 字段，通过正则匹配提取内容另存为字段")]),s._v("\n    overwrite "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许提取的这些字段覆盖 event 中已存在的字段")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# patterns_dir => ["config/patterns"]             # 加载 patterns 的定义文件')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# keep_empty_captures => false                    # 如果匹配到的字段为空，是否依然保留该字段")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# tag_on_failure => ["_grokparsefailure"]         # 如果匹配失败，则给 event 添加这些 tag')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# tag_on_timeout => ["_groktimeout"]              # 如果匹配超时，则给 event 添加这些 tag')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# timeout_millis => 30000                         # 匹配的超时时间，单位 ms")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以下是所有 filter 插件通用的配置参数")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# add_field       => {                            # 添加字段")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   "test_field"  => "Hello"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('#   "from_%{IP}"  => "this is from %{IP}"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# }")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# add_tag         => ["test_tag", "from_%{IP}"]   # 添加标签')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# remove_field    => ["field_1" , "from_%{IP}"]   # 删除字段')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# remove_tag      => ["test_tag", "from_%{IP}"]   # 删除标签')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# id              => "ABC"                        # 该插件的唯一 id ，默认会自动生成')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# enable_metric   => true                         # 是否记录该插件的指标")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br")])]),a("ul",[a("li",[s._v("在 if 语句内可以调用 filter 插件，但反之不行。可以写成以下形式："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" xxx "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  grok "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" xxx "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    grok "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[s._v("如果输入数据的每行格式可能不同，则可以在 match 中指定多个表达式用于尝试匹配："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("match "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"DEBUG (?<message>.*)$"')]),s._v(",\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"INFO  (?<message>.*)$"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# break_on_match => true    # 当表达式匹配成功时，不再尝试匹配之后的表达式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),s._v("不过这样会多次执行正则表达式，比如第一个正则表达式总是会被执行，开销较大。不如通过 if 语句选择性地执行 grok 。")])])])]),s._v(" "),a("h3",{attrs:{id:"json"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#json"}},[s._v("#")]),s._v(" json")]),s._v(" "),a("p",[s._v("：一个 filter 插件，用于按 JSON 格式解析 event 的一个字段。")]),s._v(" "),a("ul",[a("li",[s._v("例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("json "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"message"')]),s._v("                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按 JSON 格式解析 message 字段的值")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# target => "json"                          # 将解析之后的 JSON 字典保存到该字段.如果该字段已存在，则覆盖它。如果不配置，则存储为顶级字段')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# skip_on_invalid_json => false             # 解析失败时，不发出警告")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# tag_on_failure => ["_jsonparsefailure"]')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"date"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#date"}},[s._v("#")]),s._v(" date")]),s._v(" "),a("p",[s._v("：一个 filter 插件，用于解析 event 的一个字段，获取时间。")]),s._v(" "),a("ul",[a("li",[s._v("例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("timestamp"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("date")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    match "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"timestamp"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"ISO8601"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"yyyy-MM-dd HH:mm:ss.SSSZ"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"UNIX"')]),s._v(", "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"UNIX_MS"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定源字段，然后可以指定多个尝试匹配的时间字符串格式")]),s._v("\n    remove_field "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"timestamp"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# target => "@timestamp"                      # 将解析之后的时间保存到该字段。如果该字段已存在，则覆盖它')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# tag_on_failure => ["_dateparsefailure"]')]),s._v("\n    timezone "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Asia/Shanghai"')]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果没有从源字段解析出时区，则采用该默认时区")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"drop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#drop"}},[s._v("#")]),s._v(" drop")]),s._v(" "),a("p",[s._v("：一个 filter 插件，用于丢弃一些 event 。")]),s._v(" "),a("ul",[a("li",[s._v("例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("level"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"DEBUG"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  drop "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# percentage => 40      # 丢弃的概率大概为 40%")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"mutate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mutate"}},[s._v("#")]),s._v(" mutate")]),s._v(" "),a("p",[s._v("：一个 filter 插件，用于修改 event 的一些字段。")]),s._v(" "),a("ul",[a("li",[s._v("例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("mutate "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  copy       "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"field1"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"field2"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 拷贝一个字段的值，赋值给另一个字段")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rename")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"field1"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"field2"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重命名一个字段")]),s._v("\n  replace    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"field1"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"new: %{field2}"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 替换一个字段的值")]),s._v("\n  convert    "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("                                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 转换字段的数据类型，默认都是字符串类型")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"field1"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"boolean"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"field2"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"integer"')]),s._v("                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以按这种格式同时处理多个字段")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  lowercase  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"field1"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将字段的值改为小写")]),s._v("\n  uppercase  "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"field1"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将字段的值改为大写")]),s._v("\n  strip      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"field1"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删掉字段的值前后的空白字符")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("split")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"[json][version]"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"."')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据指定的字符分割一个字段的值，保存为数组形式")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# tag_on_failure => ["_mutate_error"]')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"geoip"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#geoip"}},[s._v("#")]),s._v(" geoip")]),s._v(" "),a("p",[s._v("：一个 filter 插件，用于查询 IP 地址对应地理位置，包括经纬度坐标、国家名、城市名等。")]),s._v(" "),a("ul",[a("li",[s._v("查询时的开销比较大。")]),s._v(" "),a("li",[s._v("例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("geoip "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"client_ip"')]),s._v("                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 存储 IP 地址的字段")]),s._v("\n  target "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"geoip"')]),s._v("                             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 存储查询结果的字段")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# database => "xx/xx/GeoLite2-City.mmdb"      # 用于查询的数据库文件。默认使用自带的免费 GeoLite2 数据库，并每天自动更新')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cache_size => 1000                          # 缓存区的大小。查询一些重复 IP 或相邻 IP 时，使用缓存可以提高效率")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# tag_on_failure => ["_geoip_lookup_failure"]')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"ruby"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ruby"}},[s._v("#")]),s._v(" ruby")]),s._v(" "),a("p",[s._v("：一个 filter 插件，用于嵌入 Ruby 代码。")]),s._v(" "),a("ul",[a("li",[s._v("例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("ruby "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  code "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"event.cancel if rand <= 0.90"')]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行 Ruby 代码，这里是 90% 的概率取消 event")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[s._v("可以导入一个 Ruby 脚本文件："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("ruby "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  path "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"test_filter.rb"')]),s._v("\n  script_params "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"percentage"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.9")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),s._v("脚本的内容示例："),a("div",{staticClass:"language-ruby line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-ruby"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("register")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以定义一个 register(params) 函数，接收传给脚本的参数")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@drop_percentage")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" params"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string-literal"}},[a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"percentage"')])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token method-definition"}},[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("filter")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 必须定义一个 filter(event) 函数，输入 event ，返回一个包含事件的数组")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" rand "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("@drop_percentage")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("event"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("else")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("return")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 返回一个空数组，这会取消 event")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("end")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);