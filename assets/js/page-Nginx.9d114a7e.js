(window.webpackJsonp=window.webpackJsonp||[]).push([[128],{860:function(s,n,t){"use strict";t.r(n);var a=t(1),e=Object(a.a)({},(function(){var s=this,n=s.$createElement,t=s._self._c||n;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"nginx"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#nginx"}},[s._v("#")]),s._v(" Nginx")]),s._v(" "),t("p",[s._v("：一个轻量级的 HTTP 服务器。")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://nginx.org/en/docs/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("读音相当于 engine x 。")]),s._v(" "),t("li",[s._v("特点：\n"),t("ul",[t("li",[s._v("支持反向代理、负载均衡。")]),s._v(" "),t("li",[s._v("不仅支持 HTTP、HTTPS 协议，也支持 IMAP、POP3、SMTP 协议。")]),s._v(" "),t("li",[s._v("支持第四层的 TCP 代理、第七层的 HTTP 代理。")]),s._v(" "),t("li",[s._v("一般用作静态服务器，处理静态文件的效率高。")])])])]),s._v(" "),t("h2",{attrs:{id:"部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[s._v("#")]),s._v(" 部署")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("用 yum 安装：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" nginx\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("然后用 systemctl 启动：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("systemctl start nginx\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" nginx\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("或者手动启动：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("nginx                     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动 nginx 服务器。默认作为守护进程运行")]),s._v("\n      -c /root/nginx.conf "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用指定的配置文件。默认使用 /etc/nginx/nginx.conf")]),s._v("\n      -g "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'daemon off;'")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 加上指令，这里是要求在前台运行")]),s._v("\n      -t                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不启动，而是测试配置文件的语法是否正确")]),s._v("\n      -T                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 测试配置文件，并打印当前配置")]),s._v("\n      -s stop             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 让 Nginx 立即终止")]),s._v("\n      -s quit             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 让 Nginx 优雅地终止。这会等 worker 进程处理完当前的 HTTP 请求，即没有正在使用的 TCP 连接，才终止 worker")]),s._v("\n      -s reload           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重新加载配置文件。这会先创建新 worker 进程，而旧 worker 进程会优雅地终止")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("或者用 docker-compose 部署：")]),s._v(" "),t("div",{staticClass:"language-yml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nginx")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" nginx"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.20")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" unless"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("stopped\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token datetime number"}},[s._v("80:80")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /etc/localtime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/etc/localtime"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("ro\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - ./nginx.conf:/etc/nginx/nginx.conf")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./dist"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/usr/share/nginx/html\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"原理"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Nginx 主进程启动之后，会创建多个 worker 子进程负责处理 HTTP 请求。")])]),s._v(" "),t("li",[t("p",[s._v("Nginx 处理每个 HTTP 请求的过程分为 11 个阶段（phase）：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("post-read       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在读取了 HTTP 请求之后开始执行")]),s._v("\nserver-rewrite  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行在 server 内、location 外配置的 rewrite 指令")]),s._v("\nfind-config     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 选择一个 location 来处理 HTTP 请求")]),s._v("\nrewrite         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行在 location 内配置的 rewrite 指令")]),s._v("\npost-rewrite    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果请求的 URI 被 rewrite 了，则将请求回退到 find-config 阶段重新处理")]),s._v("\npreaccess       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行 limit_rate 等指令，限制访问效率")]),s._v("\naccess          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行 allow、deny、auth 等指令，控制访问权限")]),s._v("\npost-access     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行 satisfy any 指令")]),s._v("\ntry-files       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查 URI 指向的本机文件是否存在")]),s._v("\ncontent         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成 HTTP 响应报文")]),s._v("\nlog             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 记录日志")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("Nginx 官方提供了多种模块，每种模块包含多种可执行的指令（directives）。")]),s._v(" "),t("ul",[t("li",[s._v("Nginx 会按阶段依次执行配置文件中的指令。")]),s._v(" "),t("li",[s._v("用户可以自定义模块，注册到某个阶段。")]),s._v(" "),t("li",[s._v("find-config、post-rewrite、post-access 三个阶段不支持注册模块。")])])])])])}),[],!1,null,null,null);n.default=e.exports}}]);