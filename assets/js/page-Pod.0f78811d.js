(window.webpackJsonp=window.webpackJsonp||[]).push([[137],{666:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"pod"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod"}},[s._v("#")]),s._v(" Pod")]),s._v(" "),a("h2",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),a("ul",[a("li",[s._v("Docker 以容器为单位部署应用，而 k8s 以 Pod 为单位部署应用。")]),s._v(" "),a("li",[s._v("一个 Pod 由一个或多个容器组成，它们会被部署到同一个 Node 上。特点：\n"),a("ul",[a("li",[s._v("共享一个网络空间，可以相互通信。对外映射的访问 IP 都是 Pod IP ，因此不能暴露同样的端口号。")]),s._v(" "),a("li",[s._v("共享所有存储卷。")])])]),s._v(" "),a("li",[s._v("用 kubectl 命令手动管理 Pod 比较麻烦，因此一般用 Controller 管理 Pod 。\n"),a("ul",[a("li",[s._v("用户需要编写 Controller 配置文件，描述如何部署一个应用的 Pod 。然后创建该 Controller ，k8s 就会自动部署其 Pod 。")])])])]),s._v(" "),a("h3",{attrs:{id:"状态"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态"}},[s._v("#")]),s._v(" 状态")]),s._v(" "),a("p",[s._v("--\x3e")]),s._v(" "),a("h2",{attrs:{id:"controller"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#controller"}},[s._v("#")]),s._v(" Controller")]),s._v(" "),a("p",[s._v("：控制器，用于管理 Pod 。")]),s._v(" "),a("ul",[a("li",[s._v("Controller 分为 Deployment、StatefulSet 等多种类型。")])]),s._v(" "),a("h3",{attrs:{id:"deployment"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#deployment"}},[s._v("#")]),s._v(" Deployment")]),s._v(" "),a("p",[s._v("：默认的 Controller 类型，用于部署无状态的 Pod 。")]),s._v(" "),a("h4",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),a("p",[s._v("配置文件示例：")]),s._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Deployment            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该 Controller 的类型")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该 Controller 的元数据")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("annotations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("deployment.kubernetes.io/revision")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1"')]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# k8s 自动添加该字段，表示当前配置是第几次修改版本，从 1 开始递增")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("creator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Leo\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("namespace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" default\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# generation: 1           # k8s 自动添加该字段，表示配置文件的版本序号，从 1 开始递增")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Controller 的规格")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Pod 运行的副本数")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 选择 Pod")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("matchLabels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# strategy:               # 更新部署的策略，默认为滚动更新")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   type: RollingUpdate")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   rollingUpdate:              # 滚动更新过程中的配置")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     maxUnavailable: 25%       # 允许同时不可用的 Pod 数量。可以为整数，或者百分数，默认为 25%")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#     maxSurge: 25%             # 为了同时运行新、旧 Pod ，允许 Pod 总数超过 replicas 一定数量。可以为整数，或者百分数，默认为 25%")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# progressDeadlineSeconds: 600  # 如果 Deployment 停留在 Progressing 状态超过一定时长，则变为 Failed 状态")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# revisionHistoryLimit: 10      # 保留 Deployment 的多少个旧版本，可用于回滚（rollback）。设置为 0 则不保留")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("template")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开始定义 Pod 的模板")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Pod 的元数据")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("labels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Pod 的规格")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义该 Pod 中的容器")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该 Pod 中的第一个容器名")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("5.0.6\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"redis-server /opt/redis/redis.conf"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containerPort")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 声明容器监听的端口，相当于 Dockerfile 中的 expose 指令")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dnsPolicy: ClusterFirst")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# imagePullSecrets:")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - name: qcloudregistrykey")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# restartPolicy: Always")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# schedulerName: default-scheduler")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# securityContext: {}")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# terminationGracePeriodSeconds: 30")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br")])]),a("ul",[a("li",[a("p",[s._v("部署一个 Deployment 时，可以创建多个 Pod 实例。")]),s._v(" "),a("ul",[a("li",[s._v("Pod 的命名格式为 "),a("code",[s._v("<Controller_name>-<ReplicaSet_id>-<Pod_id>")]),s._v(" ，例如："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("redis-65d9c7f6fc-szgbk\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("ul",[a("li",[s._v("用 kubectl 命令管理 Pod 时，不能事先知道 Pod 的具体名称，应该通过 label 来筛选 Pod 。")])])]),s._v(" "),a("li",[s._v("每个 Pod 中，容器的命名格式为 "),a("code",[s._v("k8s_<container_name>_<pod_name>_<k8s_namespace>_<pod_uid>_<restart_id>")]),s._v(" ，例如："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("k8s_POD_redis-65d9c7f6fc-szgbk_default_c7e3e169-08c9-428f-9a62-0fb5d14336f8_0   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Pod 中内置的 pause 容器，其容器名为 POD")]),s._v("\nk8s_redis_redis-65d9c7f6fc-szgbk_default_c7e3e169-08c9-428f-9a62-0fb5d14336f8_0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("ul",[a("li",[s._v("当 Pod 配置不变时，如果触发重启事件，创建新 Pod ，则会将容器末尾的 restart_id 加 1（从 0 开始递增）。")])])])])]),s._v(" "),a("li",[a("p",[s._v("Deployment 的 spec.selector 是必填字段，称为选择器，用于与 spec.template.metadata.labels 进行匹配，从而筛选 Pod 进行控制，匹配结果可能有任意个（包括 0 个）。")]),s._v(" "),a("ul",[a("li",[s._v("当 selector 中设置了多个筛选条件时，只会选中满足所有条件的对象。")]),s._v(" "),a("li",[s._v("当 selector 中没有设置筛选条件时，会选中所有对象。")]),s._v(" "),a("li",[s._v("例："),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("selector")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("matchLabels")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("app")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 要求 labels 中存在该键值对")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("matchExpressions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("operator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" In"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" redis2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 要求 labels 中存在 app 键，且值为 redis 或 redis2")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" app"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("operator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Exists"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("                        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运算符可以是 In、NotIn、Exists、DidNotExist")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("spec.template 是必填字段，用于描述 Pod 的配置。")]),s._v(" "),a("ul",[a("li",[s._v("当用户修改了 template 之后（改变 ReplicaSet 不算），k8s 就会创建一个新版本的 Deployment ，据此重新部署 Pod 。")]),s._v(" "),a("li",[s._v("删除 Deployment 时，k8s 会自动销毁对应的 Pod 。")]),s._v(" "),a("li",[s._v("修改 Deployment 时，k8s 会自动部署新 Pod ，销毁旧 Pod 。该过程称为更新部署，有两种策略：\n"),a("ul",[a("li",[s._v("Recreate ：先销毁旧 Pod ，再部署新 Pod 。")]),s._v(" "),a("li",[s._v("RollingUpdate ：先部署新 Pod ，等它们可用了，再销毁旧 Pod 。\n"),a("ul",[a("li",[s._v("这可以保证在更新过程中不中断服务。但新旧 Pod 短期内会同时运行，可能引发冲突，比如同时访问挂载的数据卷。")])])])])])])])]),s._v(" "),a("h3",{attrs:{id:"状态-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态-2"}},[s._v("#")]),s._v(" 状态")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Deployment 的生命周期分为多种条件（condition）：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("Progressing       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 处理中，比如正在部署或销毁 Pod 实例")]),s._v("\nComplete          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 处理完成，比如部署完所有 Pod 实例且可用，或者该 Deployment 是停止运行的旧版本")]),s._v("\nAvailable         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可用，即达到 ReplicaSet 的 Pod 实例最小可用数")]),s._v("\nReplicaFailure    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 处理失败，比如不能部署 Pod 实例、Progressing 超时")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("一个资源可能同时处于多种 condition ，但只能处于一种 phrase 。\n"),a("ul",[a("li",[s._v("比如 Deployment 处于 Available 状态时，可能同时处于 Progressing 或 Complete 状态。")])])]),s._v(" "),a("li",[s._v("根据 "),a("code",[s._v(".status.conditions")]),s._v(" 判断 "),a("code",[s._v(".status.phase")])])])]),s._v(" "),a("li",[a("p",[s._v("Deployment 的状态示例：")]),s._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("status")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("availableReplicas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可用的 Pod 实例数，允许接收 service 的流量")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("observedGeneration")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可用的 Pod 实例采用的 Deployment 版本，如果小于 metadata.generation 则说明不是最新版本")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("readyReplicas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 处于 health 状态的 Pod 实例数")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("replicas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 期望运行的实例数")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("updatedReplicas")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 采用最新版本 Deployment 的 Pod 实例数")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("conditions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Progressing     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# condition 类型")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("status")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"True"')]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 是否处于当前 condition ，可以取值为 True、False、Unknown")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("reason")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" NewReplicaSetAvailable  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# status 的原因")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(' ReplicaSet "redis'),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v('bbf945bc9" has successfully progressed.  '),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# reason 的详细信息")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("lastTransitionTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2021-06-29T10:52:18Z"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("lastUpdateTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2022-02-10T02:34:38Z"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Available\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("status")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"True"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("reason")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" MinimumReplicasAvailable\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Deployment has minimum availability.\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("lastTransitionTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2022-02-10T15:53:46Z"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("lastUpdateTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2022-02-10T15:53:46Z"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"replicaset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replicaset"}},[s._v("#")]),s._v(" ReplicaSet")]),s._v(" "),a("p",[s._v("：副本集（RC），用于控制一个应用的 Pod 实例数量。")]),s._v(" "),a("ul",[a("li",[s._v("取代了 k8s 早期版本的副本控制器（Replication Controller，RS），会被 Deployment 调用。")]),s._v(" "),a("li",[s._v("假设用户指定运行 n 个 Pod ，ReplicaSet 会自动控制可用的 Pod 数量，使其等于 n 。\n"),a("ul",[a("li",[s._v("通过健康检查的 Pod 才计入可用数量。")]),s._v(" "),a("li",[s._v("如果可用的 Pod 数多于 n ，则停止多余的 Pod 。")]),s._v(" "),a("li",[s._v("如果可用的 Pod 数少于 n ，则增加部署 Pod 。包括以下情况：\n"),a("ul",[a("li",[s._v("已有的 Pod 故障，比如部署失败、部署之后未通过健康检查。")]),s._v(" "),a("li",[s._v("已有的 Pod 需要的部署资源不足，比如 Pod 所在 Node 故障。")])])])])]),s._v(" "),a("li",[s._v("通过 ReplicaSet ，可以方便地调整 Pod 数量，实现横向扩容、缩容。")])]),s._v(" "),a("h3",{attrs:{id:"statefulset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#statefulset"}},[s._v("#")]),s._v(" StatefulSet")]),s._v(" "),a("p",[s._v("：与 Deployment 类似，但部署的是有状态服务。\n\x3c!-- - 无状态应用：不需要保持连续运行，可以随时销毁并从镜像重新创建。\n使用数据卷")]),s._v(" "),a("ul",[a("li",[s._v("一个有状态服务的每个 Pod 实例使用独立的资源、配置文件，不能随时创建、销毁 Pod ，甚至连 Pod 名都不能改变。")]),s._v(" "),a("li",[s._v("例如：以无状态服务的方式运行一个 CentOS 容器，所有状态都存储在容器里，不可靠。改成 StatefulSet 方式运行，就可以漂移到不同节点上，实现高可用。 --\x3e")])]),s._v(" "),a("h3",{attrs:{id:"daemonset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#daemonset"}},[s._v("#")]),s._v(" DaemonSet")]),s._v(" "),a("p",[s._v("：与 Deployment 类似，但部署的是宿主机上的 daemon 服务，例如监控、日志服务。")]),s._v(" "),a("ul",[a("li",[s._v("一个 DaemonSet 服务通常在每个宿主机上只需部署一个 Pod 实例。")])]),s._v(" "),a("h3",{attrs:{id:"job"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#job"}},[s._v("#")]),s._v(" Job")]),s._v(" "),a("p",[s._v("：与 Deployment 类似，但部署的是只执行一次的任务。")]),s._v(" "),a("h3",{attrs:{id:"cronjob"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cronjob"}},[s._v("#")]),s._v(" CronJob")]),s._v(" "),a("p",[s._v("：与 Deployment 类似，但部署的是定时任务或周期性任务。")]),s._v(" "),a("h2",{attrs:{id:"sidecar"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sidecar"}},[s._v("#")]),s._v(" Sidecar")]),s._v(" "),a("p",[s._v("一个 Pod 中只运行一个容器的情况最简单（称为主容器），但有时也会运行一些辅助容器（Sidecar）。")]),s._v(" "),a("p",[s._v("辅助容器有两种类型：")]),s._v(" "),a("ul",[a("li",[s._v("标准容器：与主容器差不多。")]),s._v(" "),a("li",[s._v("init 容器：在创建 Pod 时最先启动，执行一些初始化任务，执行完成之后会自动退出。\n"),a("ul",[a("li",[s._v("可以给一个 Pod 设置多个 init 容器，它们会按顺序串行执行。当一个 init 容器执行成功之后，才会启动下一个 init 容器或应用容器。")]),s._v(" "),a("li",[s._v("如果某个 init 容器启动失败或异常退出，则 kubelet 会重新启动该 Pod 。")]),s._v(" "),a("li",[s._v("重启 Pod 时会重新启动各个 init 容器。因此，为了避免多次重启 Pod 时出错，init 容器的行为应该满足幂等性。")])])])]),s._v(" "),a("h2",{attrs:{id:"horizontal-pod-autoscaling"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#horizontal-pod-autoscaling"}},[s._v("#")]),s._v(" Horizontal Pod Autoscaling")]),s._v(" "),a("p",[s._v("：Pod 的水平方向上的自动伸缩（HPA）。")]),s._v(" "),a("ul",[a("li",[s._v("k8s 会监控服务的一些 metrics 指标（比如 CPU 负载），当超过一定阙值时就自动增加 ReplicaSet 数量，从而实现服务的横向扩容。")])]),s._v(" "),a("h2",{attrs:{id:"主机调度"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主机调度"}},[s._v("#")]),s._v(" 主机调度")]),s._v(" "),a("p",[s._v("部署 Pod 时，k8s 的 scheduler 会给 Pod 自动分配一个 Node（这一过程称为主机调度），然后由 Node 上的 kubelet 部署该 Pod 。")]),s._v(" "),a("ul",[a("li",[s._v("scheduler 会综合考虑 Affinity、Taint、Tolerations 等因素，从而选出一个 Node 。")]),s._v(" "),a("li",[s._v("如果 Pod 所在的 Node 出现故障，该 Pod 会被立即迁移到其它 Node 运行。")])]),s._v(" "),a("h3",{attrs:{id:"affinity"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#affinity"}},[s._v("#")]),s._v(" Affinity")]),s._v(" "),a("p",[s._v("：节点的亲和性，表示 Pod 适合部署在什么样的 Node 上。")]),s._v(" "),a("ul",[a("li",[s._v("用法：先给 Node 添加 Label ，然后在 Pod spec 中配置该 Pod 需要的 Node Label 。")]),s._v(" "),a("li",[s._v("亲和性的主要分类：\n"),a("ul",[a("li",[s._v("requiredDuringScheduling ：当 Pod 开始部署时，只能部署到满足条件的 Node 上。如果没有这样的 Node ，则重新部署。（硬性要求）")]),s._v(" "),a("li",[s._v("preferredDuringScheduling ：当 Pod 开始部署时，优先部署到符合条件的 Node 上。如果没有这样的 Node ，则部署到其它 Node 上。（软性要求）")]),s._v(" "),a("li",[s._v("RequiredDuringExecution ：当 Pod 正在运行时，如果 Node 变得不满足条件，则重新部署。（硬性要求）")]),s._v(" "),a("li",[s._v("IgnoredDuringExecution ：当 Pod 正在运行时，如果 Node 变得不满足条件，则忽略该问题，继续运行 Pod 。（软性要求）")])])]),s._v(" "),a("li",[s._v("例：")])]),s._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("affinity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nodeAffinity")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("requiredDuringSchedulingIgnoredDuringExecution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("nodeSelectorTerms")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("matchExpressions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" k1\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("operator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" In\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" v1.0\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" v1.1\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("preferredDuringSchedulingIgnoredDuringExecution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("weight")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("preference")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("matchExpressions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n          "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" k2\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("operator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" In\n            "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("values")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" v2\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("ul",[a("li",[s._v("上例中在 nodeAffinity 下定义了两个亲和性。")]),s._v(" "),a("li",[s._v("nodeSelector 下的条件只要满足一个即可，matchExpressions 下的条件要全部满足。")]),s._v(" "),a("li",[s._v("条件的 operator 可以是以下类型：\n"),a("ul",[a("li",[s._v("Exists ：Node 上存在该 key 。")]),s._v(" "),a("li",[s._v("DoesNotExist ：与 Exists 相反。")]),s._v(" "),a("li",[s._v("In ：Node 上存在该 key ，且其值在给定的列表中。")]),s._v(" "),a("li",[s._v("NotIn ：与 In 相反。")]),s._v(" "),a("li",[s._v("Gt ：Node 上存在该 key ，且其值大于给定值。")]),s._v(" "),a("li",[s._v("Lt ：与 Gt 相反，是小于。")])])])]),s._v(" "),a("h3",{attrs:{id:"taint、tolerations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#taint、tolerations"}},[s._v("#")]),s._v(" Taint、Tolerations")]),s._v(" "),a("ul",[a("li",[s._v("Node Taint ：Node 的污点。")]),s._v(" "),a("li",[s._v("Pod Tolerations ：Pod 的容忍度。\n"),a("ul",[a("li",[s._v("scheduler 不会在将 Pod 调度到有污点的节点上，除非 Pod 能容忍该污点。")]),s._v(" "),a("li",[s._v("搭配使用污点和容忍度，可以限制某个 Pod 只能被调度到指定 Node 上。")])])])]),s._v(" "),a("p",[s._v("例：")]),s._v(" "),a("ul",[a("li",[s._v("给 Node 添加污点："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("kubectl taint nodes node1 "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("k1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("v1:NoSchedule\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[s._v("在 Pod spec 中配置容忍度："),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("tolerations")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k1"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("operator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Equal"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"v1"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("effect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"NoSchedule"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k2"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("operator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Exists"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("effect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PreferNoSchedule"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("key")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"k3"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("operator")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Exists"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("effect")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"NoExecute"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("tolerationSeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3600")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("ul",[a("li",[s._v("污点的效果分为三种：\n"),a("ul",[a("li",[s._v("NoSchedule ：如果 Pod 不容忍该污点，则不部署到该 Node 上。如果已经部署了，则继续运行该 Pod 。")]),s._v(" "),a("li",[s._v("PreferNoSchedule ：如果 Pod 不容忍该污点，则优先部署到其它 Node 上，不行的话才部署到该 Node 上。")]),s._v(" "),a("li",[s._v("NoExecute ：如果 Pod 不容忍该污点，则不部署到该 Node 上。如果已经部署了，则驱除该 Pod 。\n"),a("ul",[a("li",[s._v("可以额外设置 tolerationSeconds ，表示即使 Pod 容忍该污点，也最多只能保留指定秒数，超时之后就会被驱除，除非在此期间该污点消失。")])])])])]),s._v(" "),a("li",[s._v("在 Tolerations 中：\n"),a("ul",[a("li",[s._v("当 operator 为 Equal 时，如果 effect、key、value 与 Taint 的相同，则匹配该 Taint 。")]),s._v(" "),a("li",[s._v("当 operator 为 Exists 时，如果 effect、key 与 Taint 的相同，则匹配该 Taint 。")]),s._v(" "),a("li",[s._v("如果不指定 key ，则匹配 Taint 的所有 key 。")]),s._v(" "),a("li",[s._v("如果不指定 effect ，则匹配 Taint 的所有 effect 。")])])])])])]),s._v(" "),a("h2",{attrs:{id:"pod-的生命周期"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pod-的生命周期"}},[s._v("#")]),s._v(" Pod 的生命周期")]),s._v(" "),a("p",[s._v("Pod 被 kubelet 启动、终止的大致流程：")]),s._v(" "),a("ul",[a("li",[s._v("初始化：按顺序启动各个 init 容器。")]),s._v(" "),a("li",[s._v("启动  ：启动主容器、sidecar 容器。")]),s._v(" "),a("li",[s._v("运行  ：会被探针定期探测。")]),s._v(" "),a("li",[s._v("终止  ：终止各个容器。")]),s._v(" "),a("li",[s._v("重启  ：kubelet 会按照 restartPolicy 重启容器。")])]),s._v(" "),a("h3",{attrs:{id:"状态-3"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#状态-3"}},[s._v("#")]),s._v(" 状态")]),s._v(" "),a("p",[s._v("以下是一个 Pod 对象的状态示例：")]),s._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("apiVersion")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" v1\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kind")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Pod\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("metadata")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("spec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containers")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restartPolicy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Always   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Pod 中的容器 restartPolicy")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("schedulerName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("scheduler\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("status")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("conditions")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Pod 的状态")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Initialized\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("status")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"True"')]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 结合 type、status 来看，该 Pod 已初始化")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("lastProbeTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token null important"}},[s._v("null")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 上次探测状态的时刻")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("lastTransitionTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2019-12-24T08:20:23Z"')]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 上次状态改变的时刻")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("type")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Ready\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("status")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"True"')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("lastProbeTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token null important"}},[s._v("null")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("lastTransitionTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2019-12-24T08:21:24Z"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("...")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containerStatuses")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器的状态")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("containerID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("//2bc5f548736046c64a10d9162024ed102fba0565ff742e16cd032c7a1b75cc29\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" harbor.test.com/test/redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("5.0.6_1577092536\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("imageID")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" docker"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("pullable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("//harbor.test.com/test/redis@sha256"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("db3c9eb0f9bc7143d5995370afc23f7434f736a5ceda0d603e0132b4a6c7e2cd\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ready")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token boolean important"}},[s._v("true")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restartCount")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("state")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("running")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("startedAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2019-12-24T08:21:23Z"')]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("hostIP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 192.168.120.23\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("podIP")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10.244.57.150\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("phase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" Running\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("startTime")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2019-12-24T08:20:23Z"')]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br")])]),a("ul",[a("li",[a("p",[s._v("status.phase 记录了 Pod 目前处于生命周期的哪一阶段，有以下几种取值：")]),s._v(" "),a("ul",[a("li",[s._v("Pending ：待定。此时 kubelet 正在部署该 Pod ，包括分配 Node、拉取镜像、启动容器等。")]),s._v(" "),a("li",[s._v("Running ：运行中。此时 kubelet 已经启动了该 Pod 的所有容器。")]),s._v(" "),a("li",[s._v("Succeeded ：Pod 中的所有容器都已经正常终止。")]),s._v(" "),a("li",[s._v("Failed ：Pod 中的所有容器都已经终止，且至少有一个容器是异常终止。\n"),a("ul",[a("li",[s._v("Failed 的 Pod 会被 kubelet 自动重启，如果重启成功则会变回 Running 。")])])]),s._v(" "),a("li",[s._v("Unkown ：状态未知。例如与 Pod 所在节点通信失败时就会不知道状态。")])])]),s._v(" "),a("li",[a("p",[s._v("status.conditions 是一个数组，包含了对 Pod 多种状态条件的判断，如下：")]),s._v(" "),a("ul",[a("li",[s._v("PodScheduled ：Pod 已被调度到一个节点上。")]),s._v(" "),a("li",[s._v("Unschedulable ：Pod 不能被调度到节点上。可能是缺乏可用节点、缺乏挂载卷等资源。")]),s._v(" "),a("li",[s._v("Initialized ：Pod 中的所有 init 容器都已成功启动（不管是否运行结束）。\n"),a("ul",[a("li",[s._v("运行 init 容器的过程中，Pod 处于 pending 阶段，Initialized 条件为 True 。")])])]),s._v(" "),a("li",[s._v("ContainersReady ：Pod 中的所有容器已成功启动。")]),s._v(" "),a("li",[s._v("Ready ：Pod 处于就绪状态。此时 k8s 才允许该 Pod 被 Service 发现。")])])]),s._v(" "),a("li",[a("p",[s._v("status.containerStatuses.state 记录了容器的状态，有以下几种取值：")]),s._v(" "),a("ul",[a("li",[s._v("waiting ：正在准备启动。比如拉取镜像、取用 ConfigMap ，或者等待重启。")]),s._v(" "),a("li",[s._v("running ：正在运行。")]),s._v(" "),a("li",[s._v("terminated ：已终止。")])])]),s._v(" "),a("li",[a("p",[s._v("Pod 的状态取决于容器的状态。因此，分析 Pod 的状态时，需要考虑更细单位的容器。")]),s._v(" "),a("ul",[a("li",[s._v("kubelet 创建一个容器之后，还要等容器中的业务进程成功启动，这个容器才算真正启动。可以通过 postStart 判断容器是否已创建，通过 readinessProbe 判断容器是否已成功启动。")]),s._v(" "),a("li",[s._v("当 Pod 中的所有容器都处于 running 状态时，Pod 才能处于 Running 状态。")]),s._v(" "),a("li",[s._v("当 Pod 中有某个容器处于 terminated 状态时，kubelet 会按照 restartPolicy 重启它。在重启完成之前，Pod 都处于 Unavailable 状态。")])])])]),s._v(" "),a("h3",{attrs:{id:"探针"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#探针"}},[s._v("#")]),s._v(" 探针")]),s._v(" "),a("p",[s._v("探针：又称为健康检查。在 spec.contaienrs 中定义，用于定期探测容器是否在正常运行。")]),s._v(" "),a("ul",[a("li",[s._v("探针每次的探测结果有三种：\n"),a("ul",[a("li",[s._v("Success ：容器在正常运行。")]),s._v(" "),a("li",[s._v("Failure ：容器没在正常运行。此时 kubelet 会按照 restartPolicy 重启它。")]),s._v(" "),a("li",[s._v("Unknown ：未知结果，此时不采取行动。")])])]),s._v(" "),a("li",[s._v("探针有三种用途：\n"),a("ul",[a("li",[s._v("startupProbe ：启动探针，用于探测容器是否已成功启动。")]),s._v(" "),a("li",[s._v("readinessProbe ：就绪探针，用于探测容器是否处于就绪状态，可以开始工作。")]),s._v(" "),a("li",[s._v("livenessProbe ：存活探针，用于探测容器是否在正常运行。")])])]),s._v(" "),a("li",[s._v("探针的影响：\n"),a("ul",[a("li",[s._v("如果用户没定义探针，则容器刚创建时，可能尚未成功启动业务进程，kubelet 就会认为容器处于就绪状态，进而认为 Pod 处于就绪状态，提前接入 Service 的访问流量。")]),s._v(" "),a("li",[s._v("如果 readinessProbe 的结果为 Farlure ，则 k8s 会认为该容器所属的 Pod 不处于就绪状态，不允许被 Service 发现。")]),s._v(" "),a("li",[s._v("如果 startupProbe、livenessProbe 的结果为 Farlure ，则 k8s 会按照 restartPolicy 重启容器。")])])]),s._v(" "),a("li",[s._v("探针有三种实现方式：\n"),a("ul",[a("li",[s._v("ExecAction ：在容器中执行指定的命令，如果命令的退出码为 0 ，则检查结果为 Success 。")]),s._v(" "),a("li",[s._v("TCPSocketAction ：访问容器的指定端口，如果能建立 TCP 连接，则检查结果为 Success 。")]),s._v(" "),a("li",[s._v("HTTPGetAction ：向容器的指定 URL 发出 HTTP GET 请求，如果收到响应报文，且状态码为 2xx 或 3xx ，则检查结果为 Success 。")])])])]),s._v(" "),a("p",[s._v("例：")]),s._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("contaienrs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("livenessProbe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义 livenessProbe 用途、ExecAction 方式的探针")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每次探测时，在容器中执行命令：ls /tmp/health")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ls\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /tmp/health         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可见，当/tmp/health 文件存在时，探测结果才会为 Success")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("initialDelaySeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器刚创建之后，等待几秒才开始第一次探测（用于等待容器成功启动）")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("periodSeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每隔几秒探测一次")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("timeoutSeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每次探测的超时时间")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("failureThreshold")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器正常运行时，连续多少次探测为 Failure ，才判断容器为 Failure")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("successThreshold")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 容器启动时，或发现异常时，连续多少次探测为 Success ，才判断容器为 Success")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("readinessProbe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义 readinessProbe 用途、TCPSocketAction 方式的探针")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("tcpSocket")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("periodSeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("livenessProbe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义 livenessProbe 用途、HTTPGetAction 方式的探针")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("httpGet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("path")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" /health\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("port")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("httpHeaders")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 添加请求报文的 Headers")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" X"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("Custom"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("Header\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" hello\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("periodSeconds")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br")])]),a("h3",{attrs:{id:"poststart、prestop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#poststart、prestop"}},[s._v("#")]),s._v(" postStart、preStop")]),s._v(" "),a("p",[s._v("可以给 Pod 中的单个容器定义 postStart、preStop 钩子，在启动、终止过程中增加操作。如下：")]),s._v(" "),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("contaienrs")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" redis\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("lifecycle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("postStart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /bin/bash\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("c\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" echo hello ; sleep 1\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("preStop")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("exec")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("command")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" /bin/bash\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("c\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" redis"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("cli shutdown\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("ul",[a("li",[s._v("kubelet 刚创建一个容器之后，会立即执行其 postStart 钩子。\n"),a("ul",[a("li",[s._v("postStart 与容器的 ENTRYPOINT 是异步执行的，因此执行顺序不能确定。不过只有等 postStart 执行完成之后，k8s 才会将容器的状态标为 Running 。")])])]),s._v(" "),a("li",[s._v("kubelet 终止一个容器时，会先执行其 preStop 钩子。超过宽限期之后会发送 SIGTERM 信号并再宽限 2 秒，最后才发送 SIGKILL 信号。\n"),a("ul",[a("li",[s._v("没有定义 preStop 时，kubelet 会采用默认的终止方式：先向 Pod 中的所有容器的进程发送 SIGTERM 信号，并将 Pod 的状态标识为 Terminating 。超过宽限期（grace period ，默认为 30 秒）之后，如果仍有进程在运行，则发送 SIGKILL 信号，强制终止它们。")]),s._v(" "),a("li",[s._v("这里说的终止是指容器被 kubelet 主动终止，不包括容器自己运行结束的情况。")])])])]),s._v(" "),a("h3",{attrs:{id:"重启"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#重启"}},[s._v("#")]),s._v(" 重启")]),s._v(" "),a("p",[s._v("容器的重启策略分为以下几种：")]),s._v(" "),a("ul",[a("li",[a("code",[s._v("restartPolicy: Always")]),s._v(" ：当容器终止时，或者被探针判断为 Failure 时，总是会自动重启。这是默认策略。")]),s._v(" "),a("li",[a("code",[s._v("restartPolicy: OnFailure")]),s._v(" ：只有当容器异常终止时，才会自动重启。")]),s._v(" "),a("li",[a("code",[s._v("restartPolicy: Never")]),s._v(" ：总是不会自动重启。")])]),s._v(" "),a("p",[s._v("当容器重启时，")]),s._v(" "),a("ul",[a("li",[s._v("如果多次重启失败，重启的间隔时间将按 10s、20s、40s 的形式倍增，上限为 5min 。当容器成功运行 10min 之后会重置。")]),s._v(" "),a("li",[s._v("容器只会在当前 Node 上重启，除非因为 Node 故障等原因触发了主机调度。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);