(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{608:function(s,a,t){"use strict";t.r(a);var e=t(1),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"supervisor"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#supervisor"}},[s._v("#")]),s._v(" Supervisor")]),s._v(" "),t("p",[s._v("：一个命令行工具，用于管理进程，类似于 systemd 。，")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"http://supervisord.org/index.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("采用 Python 开发。")]),s._v(" "),t("li",[s._v("功能：\n"),t("ul",[t("li",[s._v("支持运行在 Linux、MacOS 等系统上，不支持 Windows 系统。")]),s._v(" "),t("li",[s._v("可以通过简单的命令来启动、停止进程，并且当进程异常退出时会自动重启它。")]),s._v(" "),t("li",[s._v("可以记录进程的 stdout、stderr 。")]),s._v(" "),t("li",[s._v("提供了 Web 管理页面。")])])]),s._v(" "),t("li",[s._v("采用 C/S 架构：\n"),t("ul",[t("li",[s._v("首先运行一个守护进程 supervisord ，然后由它以子进程的方式启动各个托管的进程。")]),s._v(" "),t("li",[s._v("用户可以执行 supervisorctl 命令，通过与 supervisord 通信，来控制托管的进程。")])])])]),s._v(" "),t("h2",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("用 yum 安装：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("yum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" supervisor\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("然后启动：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("supervisord                           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动服务器")]),s._v("\n            -c /etc/supervisord.conf  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用指定的配置文件")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("或者下载 Python 库然后安装：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://github.com/Supervisor/supervisor/archive/4.1.0.tar.gz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zxvf supervisor-4.1.0.tar.gz\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" supervisor-4.1.0\npython setup.py "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"开机自启"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#开机自启"}},[s._v("#")]),s._v(" 开机自启")]),s._v(" "),t("p",[s._v("虽然 Supervisor 能自动重启它托管的进程，但 supervisord 本身还不能自动重启。因此建议用 systemd 启动 supervisord ，从而保证 supervisord 能够开机自启、自动重启。步骤如下：")]),s._v(" "),t("ol",[t("li",[s._v("添加配置文件 /usr/lib/systemd/system/supervisord.service ："),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token section"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token section-name selector"}},[s._v("Unit")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("Description")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("Supervisor Daemon")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token section"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token section-name selector"}},[s._v("Service")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("User")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("leo")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("Group")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("leo")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("Type")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("forking")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("ExecStart")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("/usr/bin/supervisord -c /etc/supervisord.conf")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("ExecStop")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("/usr/bin/supervisorctl shutdown")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("ExecReload")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("/usr/bin/supervisorctl reload")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("KillMode")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("process")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("Restart")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("on-failure")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("RestartSec")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("1s")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token section"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token section-name selector"}},[s._v("Install")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("WantedBy")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("multi-user.target")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])])]),s._v(" "),t("li",[s._v("然后启动 supervisord ："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("systemctl start supervisord\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" supervisord\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),t("ul",[t("li",[s._v("用户需要先在配置文件中定义要控制的进程，然后才能用 Supervisor 管理。")]),s._v(" "),t("li",[s._v("Supervisor 默认使用 /etc/supervisord.conf 作为主配置文件（常用于保存 supervisord 的配置）。\n"),t("ul",[t("li",[s._v("还会导入 /etc/supervisord.d/ 目录下的其它配置文件（常用于保存各个进程的配置），这些配置文件的扩展名为 .ini ，采用 INI 的语法。")])])])]),s._v(" "),t("h3",{attrs:{id:"主配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#主配置"}},[s._v("#")]),s._v(" 主配置")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token section"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token section-name selector"}},[s._v("unix_http_server")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("file")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("/var/run/supervisor/supervisor.sock   ; supervisord 的 sock 文件的路径")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";chmod=0700                 ; sock 文件的权限(默认为 0700)")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";chown=nobody:nogroup       ; sock 文件的 uid:gid")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";[inet_http_server]         ; Web 管理页面（默认不启用）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";port=127.0.0.1:9001")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";username=user")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";password=123")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token section"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token section-name selector"}},[s._v("supervisord")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("logfile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("/var/log/supervisor/supervisord.log")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";logfile_maxbytes=50MB")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";logfile_backups=10")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";loglevel=info")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("pidfile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("/var/run/supervisord.pid")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("nodaemon")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("false")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token section"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token section-name selector"}},[s._v("rpcinterface:supervisor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("supervisor.rpcinterface_factory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("supervisor.rpcinterface:make_main_rpcinterface")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token section"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token section-name selector"}},[s._v("supervisorctl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("serverurl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("unix:///var/run/supervisor/supervisor.sock")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token section"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token section-name selector"}},[s._v("include")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v("   ; 导入其它配置文件\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("files")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("supervisord.d/*.ini")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br")])]),t("ul",[t("li",[s._v("使用非 root 用户启动 supervisord 时，它会因为无法创建某些目录而无法启动。因此建议采用以下措施：\n"),t("ul",[t("li",[s._v("将配置文件中的 "),t("code",[s._v("/var/run/supervisor/")]),s._v(" 目录改为 "),t("code",[s._v("/var/log/supervisor/")]),s._v(" 。")]),s._v(" "),t("li",[s._v("手动创建以下目录，并分配权限："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" /etc/supervisord.d/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" /var/log/supervisor/\n\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" -R leo:leo /etc/supervisord.d/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" -R leo:leo /etc/supervisord.conf\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" -R leo:leo /var/log/supervisor/\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])])])]),s._v(" "),t("li",[s._v("当 supervisord 开启了 inet_http_server 时，可以通过发出 HTTP 请求来管理该主机上的进程，如下："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://10.0.0.1:9001/index.html?processname=ping&action=start"')]),s._v(" -u "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"admin:WJnhZdpFvtml"')]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://10.0.0.1:9001/index.html?processname=ping&action=stop"')]),s._v(" -u "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"admin:WJnhZdpFvtml"')]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://10.0.0.1:9001/index.html?processname=ping&action=restart"')]),s._v(" -u "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"admin:WJnhZdpFvtml"')]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" -L "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://10.0.0.1:9001/logtail/ping"')]),s._v(" -u "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"admin:WJnhZdpFvtml"')]),s._v("                               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看日志")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"进程配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#进程配置"}},[s._v("#")]),s._v(" 进程配置")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token section"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token section-name selector"}},[s._v("program:ping")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v("              ; 被管理的进程名\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("/bin/ping 127.0.0.1 ; 该进程的启动命令")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("directory")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("/root             ; 工作目录（执行 command 之前会切换到该目录）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("user")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("root                   ; 用哪个用户启动该进程")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(';environment=A="1",B="2"    ; 设置环境变量')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";numprocs=1                 ; 该进程要启动多少个副本")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";priority=999               ; 进程启动的优先级，值越小则越优先启动")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("autostart")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("true              ; 当 supervisord 启动时是否自动启动该进程")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("autorestart")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("unexpected      ; 当进程启动成功之后退出时是否重启它")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("startsecs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("1                 ; 进程启动之后保持运行多少秒，才视作进程启动成功了")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("startretries")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("3              ; 启动失败之后最多尝试重启多少次")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";exitcodes=0,2              ; 如果进程以这些退出码退出，则视作正常退出，否则视作异常退出")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";stopsignal=TERM            ; 当 supervisord 主动终止该进程时，发送哪种信号（可以是 TERM、HUP、INT、QUIT、KILL、USR1、USR2）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";stopwaitsecs=10            ; 发送 stopsignal 信号之后，如果超过 stopwaitsecs 秒进程仍然没退出，则发送 SIGKILL 信号强制终止")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";stopasgroup=false          ; 发送 stopsignal 信号时，是否发送给子进程")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";killasgroup=false          ; 发送 SIGKILL 信号时，是否发送给子进程")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("stdout_logfile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("/var/log/supervisor/%(program_name)s_stdout.log   ; stdout 日志文件的保存路径（不配置的话就不会记录日志）")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("stdout_logfile_maxbytes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("100MB                                    ; stdout 日志文件的最大大小，超出则会循环写入，设置成 0 则不限制大小")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("stdout_logfile_backups")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("0                                         ; 最多保存多少份以前的日志文件（按 *.1、*.2、*.3 格式编号），设置成 0 则不保存")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";redirect_stderr=false                                           ; 是否把 stderr 重定向到 stdout")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("stderr_logfile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("/var/log/supervisor/%(program_name)s_stderr.log   ; stderr 日志文件的保存路径")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("stderr_logfile_maxbytes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("100MB")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("stderr_logfile_backups")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("0")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";[group:test]                       ; 创建一个 group ，便于同时管理多个 program")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v(";programs=ping,program2,program3")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("如果 command 是执行一个可执行文件，则必须使用绝对路径，如下：")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("./test.sh         # 错误")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("/root/test.sh     # 正确")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("command 不支持动态取值，如下：")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("echo $PWD     # 执行结果相当于 echo '$PWD'")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("echo `date`   # 执行结果相当于 echo '`date`'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("p",[s._v("如果需要动态取值，建议将 command 保存到一个 sh 脚本中，然后执行该 sh 脚本。")])]),s._v(" "),t("li",[t("p",[s._v("用 supervisord 管理的进程必须保持在前台运行，否则会脱离 supervisord 的控制，不能捕捉它的 stdout、stderr ，也不能终止它。")])]),s._v(" "),t("li",[t("p",[s._v("用 supervisord 启动 Python 进程时， Python 解释器默认不会自动刷新输出缓冲区，导致不能记录该进程的 stdout、stderr 。因此需要用 python -u 的方式启动，禁用输出缓冲区。如下：")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("command")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("python -u test.py")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("当 supervisord 启动一个进程时（状态为 STARTING ）：")]),s._v(" "),t("ul",[t("li",[s._v("如果进程在 startsecs 秒之内退出了（包括正常退出、异常退出），则视作启动失败（状态为 BACKOFF ），最多尝试重启 startretries 次（如果依然失败则状态为 FATAL ）。")]),s._v(" "),t("li",[s._v("如果进程在 startsecs 秒之内没有退出，则视作进程启动成功了（状态为 RUNNING ）。")]),s._v(" "),t("li",[s._v("如果进程在 startsecs 秒之后退出了（包括正常退出、异常退出，状态为 EXITED ），则根据 autorestart 策略决定是否重启它（不受 startretries 限制）。")]),s._v(" "),t("li",[s._v("如果进程在 startsecs 秒之后被用户通过 supervisorctl stop 命令主动停止了，则状态为 STOPPED 。")])])]),s._v(" "),t("li",[t("p",[s._v("使用 supervisorctl start 启动进程时，至少会阻塞前端 startsecs 秒。")])]),s._v(" "),t("li",[t("p",[s._v("autorestart 有三种取值，决定了进程（启动成功之后）退出时是否重启它：")]),s._v(" "),t("ul",[t("li",[s._v("true ：总是重启。")]),s._v(" "),t("li",[s._v("flase ：总是不重启。")]),s._v(" "),t("li",[s._v("unexpected ：异常退出时才重启，即退出码与 exitcodes 不同。")])])]),s._v(" "),t("li",[t("p",[s._v("建议为进程只保留一份日志，另外用 logrotate 来按日期切割日志。配置如下：")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("stdout_logfile")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("/var/log/supervisor/%(program_name)s.out")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("stdout_logfile_maxbytes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("stdout_logfile_backups")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("redirect_stderr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("true")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[s._v("#")]),s._v(" 命令")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("supervisorctl\n              start "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动进程")]),s._v("\n              stop "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止进程")]),s._v("\n              restart "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启进程")]),s._v("\n\n              status          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有进程的状态")]),s._v("\n              update          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重新加载发生改变的 /etc/supervisord.d/*.ini 配置文件（这会自动重启受影响的进程）")]),s._v("\n\n              "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("shutdown")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 停止 supervisord")]),s._v("\n              reload          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启 supervisord（这会重新加载所有配置文件、重启所有进程）")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br")])]),t("ul",[t("li",[s._v("直接执行 supervisorctl 命令会进入其交互式终端。")]),s._v(" "),t("li",[t("code",[s._v("<name>")]),s._v(" 有以下几种取值：\n"),t("ul",[t("li",[t("code",[s._v("all")]),s._v(" ：选中当前主机上所有被 supervisord 管理的进程。")]),s._v(" "),t("li",[t("code",[s._v("program_name")]),s._v(" ：只选中指定名字的进程。")]),s._v(" "),t("li",[t("code",[s._v("group_name")]),s._v(" ：选中一个组内的所有进程。")]),s._v(" "),t("li",[t("code",[s._v("group_name:program_name")]),s._v(" ：选中一个组内的指定进程。")])])]),s._v(" "),t("li",[s._v("supervisord 启动的进程都是它的子进程，因此：\n"),t("ul",[t("li",[s._v("如果修改了 shell 的环境变量，要重启 supervisord 才会生效。")]),s._v(" "),t("li",[s._v("如果 supervisord 进程退出了，通常会自动终止它管理的各个进程。")])])])]),s._v(" "),t("h2",{attrs:{id:"日志"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#日志"}},[s._v("#")]),s._v(" 日志")]),s._v(" "),t("p",[s._v("Supervisor 的日志文件默认保存在 "),t("code",[s._v("/var/log/supervisor/")]),s._v(" 目录下，主要包括：")]),s._v(" "),t("ul",[t("li",[s._v("supervisord.log ：记录了 supervisord 的日志，例如："),t("div",{staticClass:"language- line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-text"}},[t("code",[s._v("2020-01-12 06:42:25,426 INFO exited: kafka-consumer (exit status 1; not expected)     # 进程退出了，且没有使用预期的退出码\n2020-01-12 06:42:25,496 INFO spawned: 'kafka-consumer' with pid 20535                 # 已重新启动进程\n2020-01-12 06:42:26,487 INFO success: kafka-consumer entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)  # 进程启动成功\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])]),s._v(" "),t("li",[s._v("%(program_name)s_stdout.log ：记录了进程的 stdout 。")]),s._v(" "),t("li",[s._v("%(program_name)s_stderr.log ：记录了进程的 stderr 。")])]),s._v(" "),t("h2",{attrs:{id:"cesi"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#cesi"}},[s._v("#")]),s._v(" Cesi")]),s._v(" "),t("p",[s._v("：一个 Web 服务器，基于 Python3 的 Flask 开发，用于管理多台主机上的 Supervisor （需要它们开启 inet_http_server ）。")]),s._v(" "),t("ul",[t("li",[t("p",[t("a",{attrs:{href:"https://github.com/gamegos/cesi",target:"_blank",rel:"noopener noreferrer"}},[s._v("GitHub"),t("OutboundLink")],1)])]),s._v(" "),t("li",[t("p",[s._v("安装：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://github.com/gamegos/cesi/releases/download/v2.6.8/cesi-extended.tar.gz\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" cesi/\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("tar")]),s._v(" -zxvf cesi-extended.tar.gz -C cesi/\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" cesi/\npip3 "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -r requirements.txt\npython3 cesi/run.py --config-file defaults/cesi.conf.toml\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("ul",[t("li",[s._v("启动之后，访问 "),t("a",{attrs:{href:"http://127.0.0.1:5000",target:"_blank",rel:"noopener noreferrer"}},[s._v("http://127.0.0.1:5000"),t("OutboundLink")],1),s._v(" 即可查看 Web 页面。默认的账号、密码为 admin、admin 。")])])]),s._v(" "),t("li",[t("p",[s._v("Cesi 的主配置文件是 defaults/cesi.conf.toml ，内容示例如下：")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token section"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token section-name selector"}},[s._v("cesi")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v("                            # 对 cesi 本身的配置\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("database")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v('"sqlite:///users.db"   # SQLite 数据库的位置')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("activity_log")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v('"activity.log"     # 日志文件的保存路径')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("admin_username")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token inner-value"}},[s._v("admin")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("admin_password")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token inner-value"}},[s._v("admin")]),s._v('"')]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token section"}},[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token section-name selector"}},[s._v("[nodes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")])]),s._v("]                         # 对一个 Supervisor 节点的配置\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("name")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token inner-value"}},[s._v("node1")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("environment")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v('"内网"              # 用于对 Supervisor 进行逻辑上的分组')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("host")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token inner-value"}},[s._v("10.0.0.1")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("port")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v('"'),t("span",{pre:!0,attrs:{class:"token inner-value"}},[s._v("9001")]),s._v('"')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("username")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v('""                     # 用于登录 Supervisor 的账号')]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("password")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v('""')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("ul",[t("li",[s._v("Cesi 将用户信息存储在 SQLite 数据库中，因此不能通过配置文件创建账号、修改密码，要在 Web 页面上操作。")]),s._v(" "),t("li",[s._v("Cesi 只划分了两种用户权限：\n"),t("ul",[t("li",[s._v("Admin ：有权使用 Cesi ，并管理用户。")]),s._v(" "),t("li",[s._v("Normal User ：有权使用 Cesi 。")])])]),s._v(" "),t("li",[s._v("可以通过 Environment 对各个 Supervisor 进行分组。")]),s._v(" "),t("li",[s._v("可以通过 Group 对全部 Supervisor 中的进程进行分组（该 Group 参数在 Supervisor 中配置）。")]),s._v(" "),t("li",[s._v("只要有一个 node 无法连接， Cesi 就会抛出异常，导致所有 node 都不会显示。")])])]),s._v(" "),t("li",[t("p",[s._v("Cesi 提供了一些 Restful API ：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("GET /api/v2/nodes/                                         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取全部 Supervisor 节点的信息")]),s._v("\nGET /api/v2/nodes/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("node_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/                             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取指定节点的信息（包括节点信息、进程信息）")]),s._v("\nGET /api/v2/nodes/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("node_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/processes/                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取指定节点上全部进程的信息")]),s._v("\nGET /api/v2/nodes/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("node_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/processes/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("process_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 获取指定节点上的指定进程的信息")]),s._v("\n\nGET /api/v2/nodes/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("node_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/processes/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("process_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/start/\nGET /api/v2/nodes/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("node_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/processes/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("process_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/stop/\nGET /api/v2/nodes/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("node_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/processes/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("process_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/restart/\nGET /api/v2/nodes/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("node_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/processes/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("process_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/log/\n\nGET /api/v2/nodes/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("node_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/all-processes/start/         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动指定节点上的全部进程")]),s._v("\nGET /api/v2/nodes/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("node_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/all-processes/stop/\nGET /api/v2/nodes/"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("node_name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("/all-processes/restart/\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);