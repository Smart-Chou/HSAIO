(window.webpackJsonp=window.webpackJsonp||[]).push([[199],{841:function(t,s,a){"use strict";a.r(s);var n=a(1),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"♢-cython"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#♢-cython"}},[t._v("#")]),t._v(" ♢ Cython")]),t._v(" "),a("p",[t._v("：Python 的第三方库，用于 Python 与 C/C++ 的混合开发。")]),t._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://cython.readthedocs.io/en/latest/",target:"_blank",rel:"noopener noreferrer"}},[t._v("官方文档"),a("OutboundLink")],1)]),t._v(" "),a("li",[t._v("安装："),a("code",[t._v("pip install Cython")])]),t._v(" "),a("li",[t._v("Cython 本身是一种混编语言，可以将 C 代码封装成 Python 模块，或者将 Python 代码编译成 C 代码。")]),t._v(" "),a("li",[t._v("Cython 是 Python 的超集。不仅支持所有的 Python 语法，还可以使用 C/C++ 的数据类型。\n"),a("ul",[a("li",[t._v("将 Python 代码改写为 Cython 风格，会更接近 C 语言，有利于提高运行效率。")])])])]),t._v(" "),a("h2",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[t._v("#")]),t._v(" 原理")]),t._v(" "),a("p",[t._v("Cython 主要使用以下几种文件：")]),t._v(" "),a("ul",[a("li",[t._v(".pyx 文件\n"),a("ul",[a("li",[t._v("：包含了主要的程序代码。")]),t._v(" "),a("li",[t._v("通常可以把.py 文件直接改名为.pyx 。")])])]),t._v(" "),a("li",[t._v(".pyd 文件\n"),a("ul",[a("li",[t._v("：声明一些通用的函数、类，类似于 C 语言的头文件。")]),t._v(" "),a("li",[t._v("当 Cython 编译一个.pyx 文件时，会寻找是否存在同名的.pyd 文件。")])])]),t._v(" "),a("li",[t._v(".pyi 文件\n"),a("ul",[a("li",[t._v("：可通过 include 语句导入其它文件。")])])])]),t._v(" "),a("h2",{attrs:{id:"用法示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用法示例"}},[t._v("#")]),t._v(" 用法示例")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("创建一个 testC.pyx 文件，内容如下：")]),t._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("fun1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    cdef char "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello World!"')]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("p"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])]),a("p",[t._v("用 "),a("code",[t._v("cdef")]),t._v(" 可以定义 C 语言数据类型的变量。")])]),t._v(" "),a("li",[a("p",[t._v("创建一个 setup.py 文件，在其中声明要处理的.pyx 文件。如下：")]),t._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" distutils"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("core "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" setup\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("from")]),t._v(" Cython"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("Build "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" cythonize\n\nsetup"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("\n    ext_modules"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v("cythonize"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"testC.pyx"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("在当前目录下执行编译命令：")]),t._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[t._v("python setup.py build_ext --inplace\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("默认会编译生成一个 C 语言文件，再链接生成一个当前平台的库文件（在 Windows 上是.pyd 文件，在 Linux 上是.so 文件）。")]),t._v(" "),a("p",[t._v("在 .pyx 文件的第一行加入以下声明，就会让 Cython 把它编译成 C++ 代码。")]),t._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# distutils: language=c++")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("在 Python 解释器中直接导入编译生成的库文件。如下：")]),t._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("import")]),t._v(" testC\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" testC"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("fun1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("b'Hello World!'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])])]),t._v(" "),a("h2",{attrs:{id:"其它"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#其它"}},[t._v("#")]),t._v(" 其它")]),t._v(" "),a("p",[t._v("例："),a("a",{attrs:{href:"http://docs.cython.org/en/latest/src/tutorial/clibraries.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("Python 调用 C/C++ 的 API"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("例："),a("a",{attrs:{href:"http://docs.cython.org/en/latest/src/userguide/external_C_code.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("C/C++ 调用 Python 的 API"),a("OutboundLink")],1)]),t._v(" "),a("p",[t._v("教程："),a("a",{attrs:{href:"http://docs.cython.org/en/latest/src/tutorial/index.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://docs.cython.org/en/latest/src/tutorial/index.html"),a("OutboundLink")],1)])])}),[],!1,null,null,null);s.default=e.exports}}]);