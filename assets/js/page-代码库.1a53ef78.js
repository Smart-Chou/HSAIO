(window.webpackJsonp=window.webpackJsonp||[]).push([[235],{839:function(s,t,n){"use strict";n.r(t);var a=n(1),e=Object(a.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"代码库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#代码库"}},[s._v("#")]),s._v(" 代码库")]),s._v(" "),n("ul",[n("li",[s._v("Python 与其它编程语言相比的一大特色是，官方、社区提供了大量实现各种功能的代码库，可直接调用，避免自己重复造轮子。")]),s._v(" "),n("li",[s._v("Python 官方提供了一些标准库，大部分在安装 Python 解释器时就自带了，也可以通过 pip 命令下载它们。\n"),n("ul",[n("li",[n("a",{attrs:{href:"https://docs.python.org/3/library/index.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("Python 标准库列表"),n("OutboundLink")],1)])])]),s._v(" "),n("li",[s._v("用户还可以使用其他用户发布的 Python 库，称为第三方库。\n"),n("ul",[n("li",[s._v("目前流行的第三方库分享平台是 "),n("a",{attrs:{href:"https://pypi.org/",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://pypi.org/"),n("OutboundLink")],1)]),s._v(" "),n("li",[s._v("第三方库一般安装在 Python 解释器的安装目录的 site-packages 目录下，比如 "),n("code",[s._v("/usr/lib/Python3.6/site-packages/")]),s._v(" 。")])])]),s._v(" "),n("li",[s._v("第三方库举例：\n"),n("ul",[n("li",[s._v("autopep8 ：用于将 Python 代码自动排版成 PEP8 风格。")]),s._v(" "),n("li",[s._v("pylint ：用于检查 Python 代码的语法、代码风格。")])])])]),s._v(" "),n("h2",{attrs:{id:"♢-setuptools"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#♢-setuptools"}},[s._v("#")]),s._v(" ♢ setuptools")]),s._v(" "),n("p",[s._v("：Python 的标准库，用于制作 Python 包。")]),s._v(" "),n("ul",[n("li",[s._v("Python 包的根目录下通常存在一个 setup.py 文件，用于打包或安装该库。"),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("python setup.py build     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 编译（不一定需要）")]),s._v("\npython setup.py "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])])]),s._v(" "),n("li",[s._v("easy_install ：setuptools 库提供的一个命令行工具，用于安装 Python 包。\n"),n("ul",[n("li",[s._v("比较老旧，不推荐使用。")])])])]),s._v(" "),n("h3",{attrs:{id:"打包格式"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#打包格式"}},[s._v("#")]),s._v(" 打包格式")]),s._v(" "),n("ul",[n("li",[s._v("分享 Python 代码库给别人时，通常打包成压缩文件再发送。\n"),n("ul",[n("li",[s._v('此处的 "包" 与 Python 的 "包" 目录是不同概念。')]),s._v(" "),n("li",[n("a",{attrs:{href:"https://packaging.python.org/guides/distributing-packages-using-setuptools/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),n("OutboundLink")],1)])])])]),s._v(" "),n("p",[s._v("主要有两种打包格式：")]),s._v(" "),n("ul",[n("li",[s._v("源代码包\n"),n("ul",[n("li",[s._v("：采用 tar、zip 等压缩格式，只包含源文件。需要用户解压后，使用其中的 setup.py 文件进行安装。")]),s._v(" "),n("li",[s._v("属于源代码发布（Source Distribution）。\n"),n("ul",[n("li",[s._v("可以添加一个 MANIFEST.in 文件，声明打包时需要 include 或 exclude 的文件。")])])]),s._v(" "),n("li",[s._v("对于纯 Python 库，源代码包可以直接安装使用。对于非纯 Python 库，可能需要编译之后才能安装、使用。")])])]),s._v(" "),n("li",[s._v("wheel 包\n"),n("ul",[n("li",[s._v("：采用 zip 压缩格式，扩展名为 .whl ，包含预编译文件，因此用户可以直接安装、使用。")]),s._v(" "),n("li",[s._v("属于二进制发布（Binary Distribution）。\n"),n("ul",[n("li",[s._v("默认不会读取 MANIFEST.in 文件。")])])]),s._v(" "),n("li",[s._v("一个包含预编译文件的 Python 库，通常需要对不同平台分别编译 wheel 包，按以下格式命名："),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("distribution"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("-"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("version"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("-"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("python tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("-"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("build tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("?-"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("abi tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("-"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("platform tag"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(".whl\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# distribution  ：库名")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# version       ：版本")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# build tag     ：内部版本号，可选")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# python tag    ：支持的 Python 解释器，比如 py2、py3、py27、py35、cp35 ，取值为 none 则不限制")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# abi tag       ：要求的 Python 解释器的 ABI ，取值为 none 则不限制")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# platform tag  ：支持的平台，比如 manylinux1_x86_64 ，取值为 any 则不限制")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[s._v("包名中的各个字段只能包含字母、数字，其它字符都要转换成下划线 "),n("code",[s._v("_")]),s._v(" 。")]),s._v(" "),n("li",[s._v("wheel 包名示例："),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("Django-3.1.5-py3-none-any.whl         "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 它表示 Django 库的 3.1.5 版本，只支持 Python3 解释器，支持所有平台")]),s._v("\nnumpy-1.19.5-cp36-cp36m-manylinux1_i686.whl\nPyQt6-6.0.0-6.0.0-cp36.cp37.cp38.cp39-abi3-macosx_10_15_aarch64.whl\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])])])])])])]),s._v(" "),n("h3",{attrs:{id:"打包步骤"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#打包步骤"}},[s._v("#")]),s._v(" 打包步骤")]),s._v(" "),n("p",[s._v("通常通过 setup.py 文件制作源代码包或 wheel 包，步骤如下：")]),s._v(" "),n("ol",[n("li",[n("p",[s._v("先编写一个 setup.py 文件，配置该 Python 库：")]),s._v(" "),n("div",{staticClass:"language-py line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-py"}},[n("code",[n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" setuptools\n\n"),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("open")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'README.md'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" encoding"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'utf-8'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    readme_md "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" f"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("read"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nsetuptools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("setup"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n    name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'pyexiv2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                                                                   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该库的名称。由 ASCII 字母、数字组成，不区分大小写。还可包含 -_. 三种字符，但视作相同")]),s._v("\n    version"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'2.1.0'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                                                                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该库的版本")]),s._v("\n    author"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'LeoHsiao'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    author_email"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'leohsiao@foxmail.com'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    description"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Read/Write metadata of digital image, including EXIF, IPTC, XMP.'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 简介")]),s._v("\n    long_description"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("readme_md"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                                                       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 详细说明")]),s._v("\n    long_description_content_type"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'text/markdown'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    license"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'GPLv3'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    url"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'https://github.com/LeoHsiao1/pyexiv2'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                                       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 项目网站")]),s._v("\n    packages"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("setuptools"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("find_packages"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                                              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 从当前目录开始，自动发现包以及子包，加入打包")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# packages=['pyexiv2','pyexiv2/tests'],                                           # 指定 Python 包目录（不会包括子目录），加入打包")]),s._v("\n    package_data"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("''")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*.md'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'*/*.md'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                                            "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将某个包中某些路径的文件加入打包，包名为空则匹配所有包")]),s._v("\n    python_requires"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'>=3.5'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("                                                          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装该库需要的 Python")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# install_requires=["pybind11==2.4.3"],                                           # 安装该库需要的依赖库')]),s._v("\n    classifiers"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("                                                                     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该库的分类标签")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'License :: OSI Approved :: GNU General Public License v3 (GPLv3)'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Operating System :: POSIX :: Linux'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Operating System :: MacOS'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Operating System :: Microsoft :: Windows'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Programming Language :: Python :: 3.5'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Programming Language :: Python :: 3.6'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Programming Language :: Python :: 3.7'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br"),n("span",{staticClass:"line-number"},[s._v("25")]),n("br"),n("span",{staticClass:"line-number"},[s._v("26")]),n("br"),n("span",{staticClass:"line-number"},[s._v("27")]),n("br"),n("span",{staticClass:"line-number"},[s._v("28")]),n("br"),n("span",{staticClass:"line-number"},[s._v("29")]),n("br"),n("span",{staticClass:"line-number"},[s._v("30")]),n("br")])]),n("ul",[n("li",[s._v("Python2 通常基于标准库 "),n("code",[s._v("distutils")]),s._v(" 编写 setup.py 文件。")]),s._v(" "),n("li",[s._v("Python3 通常基于第三方库 "),n("code",[s._v("setuptools")]),s._v(" 编写 setup.py 文件。")])])]),s._v(" "),n("li",[n("p",[s._v("然后执行以下命令进行打包：")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("python -m pip "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" setuptools wheel twine      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装打包工具")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("git")]),s._v(" clean -d -fx                                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删掉项目目录下的多余文件")]),s._v("\npython setup.py sdist                             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成源代码包，默认保存到 dist 目录下")]),s._v("\npython setup.py bdist_wheel                       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成 wheel 包")]),s._v("\n                          --python-tag py3        "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定 Python 解释器标签")]),s._v("\n                          --py-limited-api cp32   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定 ABI 标签")]),s._v("\n                          --plat-name win-amd64   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定平台标签")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br")])]),n("ul",[n("li",[n("a",{attrs:{href:"https://packaging.python.org/specifications/platform-compatibility-tags/",target:"_blank",rel:"noopener noreferrer"}},[s._v("whl 包的标签规范"),n("OutboundLink")],1)])])]),s._v(" "),n("li",[n("p",[s._v("可以将 dist 目录下的 Python 包上传到 pypi.org ：")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("twine upload dist/*\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),n("ul",[n("li",[s._v("不支持上传平台标签为 linux 的 wheel 包，需要改成 manylinux ，强调该 wheel 包兼容不同的 Linux 发行版。\n"),n("ul",[n("li",[s._v("比如 manylinux2010 是指大概于 2010 年之后发布的 Linux 发行版，支持 x86_64 和 i686 的 CPU 架构。")])])]),s._v(" "),n("li",[s._v("上传某个版本的 Python 包文件之后，不能重复上传或修改该版本的文件，只能上传更高版本的文件。")])])])]),s._v(" "),n("h2",{attrs:{id:"♢-pip"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#♢-pip"}},[s._v("#")]),s._v(" ♢ pip")]),s._v(" "),n("p",[s._v("：Python 的第三方库。相当于改进版的 easy_install ，是目前流行的 Python 包管理工具，可以下载、安装、卸载 Python 包。")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://pip.pypa.io/en/stable/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),n("OutboundLink")],1)])]),s._v(" "),n("h3",{attrs:{id:"安装"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),n("ul",[n("li",[s._v("在 Window 上，官方的 Python 安装包自带了 pip 工具。")]),s._v(" "),n("li",[s._v("在 Linux 上，可以使用官方的脚本安装："),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://bootstrap.pypa.io/get-pip.py\npython get-pip.py\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f get-pip.py\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])]),s._v("默认是安装到全局，也可以单独给当前用户安装："),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("python get-pip.py --user\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'export PATH=$PATH:~/.local/bin'")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),s._v(" ~/.bash_profile\n"),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("source")]),s._v(" ~/.bash_profile\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br")])])])]),s._v(" "),n("h3",{attrs:{id:"命令"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[s._v("#")]),s._v(" 命令")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("pip\n    "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装指定的包")]),s._v("\n            --upgrade       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装最新的版本")]),s._v("\n            --user          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装到当前用户的 ~/.local/ 目录下。否则默认是安装到 Python 解释器的安装目录下，供所有用户访问")]),s._v("\n            --no-cache-dir  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 下载时禁用缓存。默认会将下载的包缓存到磁盘")]),s._v("\n            -i https://pypi.tuna.tsinghua.edu.cn/simple   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定远程仓库的索引页面。默认为 https://pypi.python.org/simple ，这里采用网速更快的国内镜像源")]),s._v("\n            --timeout "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("15")]),s._v("                                  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置访问远程仓库的超时时间")]),s._v("\n            --proxy "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("user:passwd@"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("proxy.server:port       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用一个网络代理。使用 socks 代理时需要先 pip install PySocks")]),s._v("\n    uninstall "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 卸载指定的包")]),s._v("\n    show "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".          "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示已安装包的信息")]),s._v("\n    list                    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示已安装的所有包")]),s._v("\n    -V                      "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示版本（还会显示该 pip 属于哪个 Python 解释器）")]),s._v("\n\n    cache\n        "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("dir")]),s._v("                 "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示缓存的保存目录")]),s._v("\n        info                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示缓存的信息")]),s._v("\n        list   "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("pattern"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出缓存的包")]),s._v("\n        remove "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pattern"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除缓存的包")]),s._v("\n        purge               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有缓存，但不会删除缓存目录")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br")])]),n("ul",[n("li",[s._v("执行 "),n("code",[s._v("pip install <name>")]),s._v(" 时，\n"),n("ul",[n("li",[s._v("name 可以是一个 Python 包的名称，比如 'pip install django' 。\n"),n("ul",[n("li",[s._v("还可以加上版本号，比如 'django==2.2.0' 、'django>=2.2.0' 。")]),s._v(" "),n("li",[s._v("如果该包已安装，则 pip 会结束执行，显示相应提示，比如 "),n("code",[s._v("Requirement already satisfied: django")]),s._v(" 。")]),s._v(" "),n("li",[s._v("如果该包未安装，则 pip 会从远程仓库搜索并下载它，然后安装。")]),s._v(" "),n("li",[s._v("如果该包需要依赖其它包，则 pip 会自动安装它们。")])])]),s._v(" "),n("li",[s._v("name 也可以是本机上的 Python 包的文件路径。比如 "),n("code",[s._v("pip install /tmp/django-2.2.0-py3-none-any.whl")]),s._v(" 。")])])]),s._v(" "),n("li",[s._v("pip 本身也是一个 Python 的第三方库，会安装到某个 Python 解释器的 site-packages 目录下，专属于这个 Python 解释器。\n"),n("ul",[n("li",[s._v("安装了多个 Python 解释器时，注意区分它们的 pip ，可以通过执行 "),n("code",[s._v("python -m pip")]),s._v(" 来指定某个 Python 解释器的 pip 。")]),s._v(" "),n("li",[s._v("可以让 pip 更新自己："),n("code",[s._v("pip install --upgrade pip")])])])]),s._v(" "),n("li",[s._v("可执行以下命令，同步 pip 安装的所有包："),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("pip freeze "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" requirements.txt     "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将 pip 已安装的所有包及其版本导出到文本文件中")]),s._v("\npip "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -r requirements.txt   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 读取文件文件的内容，安装其中列出的所有包")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),s._v("不过这样并不能解决依赖库冲突的问题：假设安装包 A 时需要安装包 "),n("code",[s._v("B==2.0")]),s._v("、"),n("code",[s._v("C==3.0")]),s._v(" ，而安装库 B 时又自动安装了包 "),n("code",[s._v("C==3.1")]),s._v(" ，则包 A 即使安装成功，也可能运行出错。")])]),s._v(" "),n("h2",{attrs:{id:"♢-virtualenv"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#♢-virtualenv"}},[s._v("#")]),s._v(" ♢ virtualenv")]),s._v(" "),n("p",[s._v("：Python 的第三方库，用于创建 Python 的虚拟环境。")]),s._v(" "),n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://virtualenv.pypa.io/en/latest/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),n("OutboundLink")],1)])]),s._v(" "),n("li",[n("p",[s._v("安装："),n("code",[s._v("pip install virtualenv")])])]),s._v(" "),n("li",[n("p",[s._v("常用于给每个 Python 项目创建一个 Python 虚拟环境，给它们分别安装 Python 的第三方库，隔离它们的运行环境。")]),s._v(" "),n("ul",[n("li",[s._v("如果安装第三方库时，总是安装到主机上全局的 site-packages 目录，则需要 root 权限才能写入，而且多个项目安装的第三方库可能会起冲突。因此建议创建虚拟环境。")])])]),s._v(" "),n("li",[n("p",[s._v("用法：")]),s._v(" "),n("ol",[n("li",[s._v("创建虚拟环境："),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("virtualenv .venv\n          -p /usr/bin/python3.6    "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定要拷贝的 Python 解释器（默认是安装 virtualenv 的那个 Python 解释器）")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])]),s._v("它会创建一个名为 .venv 的文件夹，将 Python 解释器的 bin、lib 目录拷贝进去。\n"),n("ul",[n("li",[s._v("Python 的可执行文件只是拷贝软链接。")]),s._v(" "),n("li",[s._v("默认不会拷贝第三方库，只会拷贝 pip、setuptools、wheel 三个包。")])])]),s._v(" "),n("li",[s._v("使用虚拟环境中的 Python 解释器："),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v(".venv/bin/python\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br")])]),s._v("也可以进入虚拟环境的 Shell ："),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# source .venv/bin/activate")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(".venv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# type python")]),s._v("\npython is hashed "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("/root/.venv/bin/python"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(".venv"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# deactivate           # 退出虚拟环境的 Shell （如果采用其它方式退出，则可能不能恢复之前的 shell ）")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br")])])])])]),s._v(" "),n("li",[n("p",[s._v("虚拟环境的目录结构示例：")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v(".venv/\n├── bin\n│   ├── activate\n│   ├── easy_install\n│   ├── easy_install3\n│   ├── easy_install-3.6\n│   ├── easy_install3.6\n│   ├── pip\n│   ├── pip3\n│   ├── pip-3.6\n│   ├── pip3.6\n│   ├── python -"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /usr/bin/python3\n│   ├── python3 -"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" python\n│   ├── python3.6 -"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" python\n│   ├── wheel\n│   ├── wheel3\n│   ├── wheel-3.6\n│   └── wheel3.6\n├── lib\n│   └── python3.6\n├── lib64\n│   └── python3.6\n└── pyvenv.cfg\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br")])])])]),s._v(" "),n("h2",{attrs:{id:"♢-pipenv"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#♢-pipenv"}},[s._v("#")]),s._v(" ♢ pipenv")]),s._v(" "),n("p",[s._v("：Python 的第三方库，兼有 pip 和 virtualenv 的功能，更方便。")]),s._v(" "),n("ul",[n("li",[n("a",{attrs:{href:"https://pipenv.pypa.io/en/latest/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官网"),n("OutboundLink")],1)]),s._v(" "),n("li",[s._v("安装："),n("code",[s._v("pip install pipenv")])])]),s._v(" "),n("h3",{attrs:{id:"原理"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),n("ul",[n("li",[s._v("使用 pipenv 时，它会调用 virtualenv 为当前项目创建一个 Python 虚拟环境。\n"),n("ul",[n("li",[s._v("默认是在用户家目录下创建一个目录来保存虚拟环境，比如 "),n("code",[s._v("/home/leo/.local/share/virtualenvs/test-BuDEOXnJ")]),s._v(' ，该目录的命名规则为 "项目目录名-哈希值" 。\n'),n("ul",[n("li",[s._v("可以声明环境变量 "),n("code",[s._v("export PIPENV_VENV_IN_PROJECT=1")]),s._v(" ，让 pipenv 将虚拟环境保存在 "),n("code",[s._v("${project_dir}/.venv")]),s._v(" 目录下。")])])]),s._v(" "),n("li",[s._v("pipenv 会记录每个项目目录与虚拟环境目录的对应关系。\n"),n("ul",[n("li",[s._v("如果改变项目目录的路径，则 pipenv 会找不到该项目对应的虚拟环境目录。")]),s._v(" "),n("li",[s._v("每个项目目录同时只能分配一个虚拟环境目录。如果多次创建虚拟环境，则会移除之前的虚拟环境目录。")])])])])]),s._v(" "),n("li",[s._v("执行 "),n("code",[s._v("pipenv install")]),s._v(" 或 "),n("code",[s._v("pipenv uninstall")]),s._v(" 时会自动更新 Pipfile 和 Pipfile.lock 文件，如果它们不存在则自动创建。\n"),n("ul",[n("li",[s._v("Pipfile 记录了用户执行 "),n("code",[s._v("pipenv install")]),s._v(" 时指定的 Python 包的名称、版本、远程仓库，用于代替 pip 生成的 requirements.txt 文件。")]),s._v(" "),n("li",[s._v("Pipfile.lock 记录了实际安装的所有 Python 包，比 Pipfile 多记录了哈希值、依赖关系。\n"),n("ul",[n("li",[s._v("例如用户执行 "),n("code",[s._v("pipenv install requests")]),s._v(" ，Pipfile 中记录的是 "),n("code",[s._v("requests==*")]),s._v(" ，Pipfile.lock 中记录的是实际安装的版本。")])])])])])]),s._v(" "),n("h3",{attrs:{id:"命令-2"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#命令-2"}},[s._v("#")]),s._v(" 命令")]),s._v(" "),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[s._v("pipenv\n      --python "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.6")]),s._v("              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建虚拟环境，使用指定版本的 Python 解释器（它必须已安装）")]),s._v("\n      --python /path/to/python  "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用指定路径的 Python 解释器")]),s._v("\n\n      --where             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示项目的根目录，即 Pipfile 所在目录")]),s._v("\n      --venv              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示虚拟环境所在目录")]),s._v("\n      --rm                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除虚拟环境")]),s._v("\n      --envs              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示 pipenv 支持的所有环境变量")]),s._v("\n\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v("             "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装 Pipfile 中的所有包")]),s._v("\n              "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装指定的包（兼容 pip install 的语法）")]),s._v("\n      uninstall\n              "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".   "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 卸载指定的包")]),s._v("\n              --all       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 卸载所有包")]),s._v("\n      graph               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 以树形结构显示当前虚拟环境安装的所有包")]),s._v("\n      check               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 检查 Pipfile 是否存在格式错误、安全漏洞")]),s._v("\n\n      lock                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生成 Pipfile.lock 文件")]),s._v("\n      "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sync")]),s._v("                "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装 Pipfile.lock 指定的所有包")]),s._v("\n      clean               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 卸载 Pipfile.lock 之外的所有包（这不会修改 Pipfile.lock ）")]),s._v("\n      update              "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行 lock 和 sync")]),s._v("\n\n      shell               "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入虚拟环境的 bash shell 。这会导入相应的环境变量，执行 exit 可退出")]),s._v("\n      run "),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("command"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("       "),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在虚拟环境的 shell 中执行一条命令")]),s._v("\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br"),n("span",{staticClass:"line-number"},[s._v("3")]),n("br"),n("span",{staticClass:"line-number"},[s._v("4")]),n("br"),n("span",{staticClass:"line-number"},[s._v("5")]),n("br"),n("span",{staticClass:"line-number"},[s._v("6")]),n("br"),n("span",{staticClass:"line-number"},[s._v("7")]),n("br"),n("span",{staticClass:"line-number"},[s._v("8")]),n("br"),n("span",{staticClass:"line-number"},[s._v("9")]),n("br"),n("span",{staticClass:"line-number"},[s._v("10")]),n("br"),n("span",{staticClass:"line-number"},[s._v("11")]),n("br"),n("span",{staticClass:"line-number"},[s._v("12")]),n("br"),n("span",{staticClass:"line-number"},[s._v("13")]),n("br"),n("span",{staticClass:"line-number"},[s._v("14")]),n("br"),n("span",{staticClass:"line-number"},[s._v("15")]),n("br"),n("span",{staticClass:"line-number"},[s._v("16")]),n("br"),n("span",{staticClass:"line-number"},[s._v("17")]),n("br"),n("span",{staticClass:"line-number"},[s._v("18")]),n("br"),n("span",{staticClass:"line-number"},[s._v("19")]),n("br"),n("span",{staticClass:"line-number"},[s._v("20")]),n("br"),n("span",{staticClass:"line-number"},[s._v("21")]),n("br"),n("span",{staticClass:"line-number"},[s._v("22")]),n("br"),n("span",{staticClass:"line-number"},[s._v("23")]),n("br"),n("span",{staticClass:"line-number"},[s._v("24")]),n("br")])]),n("ul",[n("li",[s._v("例：创建虚拟环境"),n("div",{staticClass:"language-sh line-numbers-mode"},[n("pre",{pre:!0,attrs:{class:"language-sh"}},[n("code",[n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("PIPENV_VENV_IN_PROJECT")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" pipenv --python "),n("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.9")]),s._v("\npipenv shell\n")])]),s._v(" "),n("div",{staticClass:"line-numbers-wrapper"},[n("span",{staticClass:"line-number"},[s._v("1")]),n("br"),n("span",{staticClass:"line-number"},[s._v("2")]),n("br")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);