(window.webpackJsonp=window.webpackJsonp||[]).push([[69],{612:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),a("h2",{attrs:{id:"架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#架构"}},[s._v("#")]),s._v(" 架构")]),s._v(" "),a("ul",[a("li",[s._v("容器（Container）是一个像虚拟机的沙盒，内部可以运行一组进程。")]),s._v(" "),a("li",[s._v("镜像（Image）是用于创建容器的模板，包含了应用程序的可执行文件文件、依赖文件、配置信息等。")]),s._v(" "),a("li",[s._v("Docker 采用 C/S 架构工作：\n"),a("ul",[a("li",[s._v("在宿主机上运行一个守护进程 dockerd ，作为服务器，负责管理本机的容器、镜像、数据卷、网络等对象。\n"),a("ul",[a("li",[s._v("早期版本的 dockerd 进程以子进程的形式运行各个容器的 1 号进程，存在单点故障的风险。")]),s._v(" "),a("li",[s._v("后来，改为给每个容器创建一个守护进程 containerd-shim （新版本为 containerd-shim-runc-v2 ），作为容器的父进程。")])])]),s._v(" "),a("li",[s._v("用户可以在宿主机上执行 docker 命令，作为客户端，与 dockerd 交互，比如请求启动容器。\n"),a("ul",[a("li",[s._v("客户端默认通过本机的 "),a("code",[s._v("/var/run/docker.sock")]),s._v(" 文件与 dockerd 通信，也可通过 tcp 端口访问本机或其它主机的 dockerd 。")]),s._v(" "),a("li",[s._v("非 root 用户无权访问 docker.sock 文件，导致无权执行 docker ps 等命令。此时可以将该用户加入 docker 用户组："),a("code",[s._v("sudo usermod leo -aG docker")]),s._v(" ，从而开通权限。")])])])])])]),s._v(" "),a("h2",{attrs:{id:"namespace"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#namespace"}},[s._v("#")]),s._v(" namespace")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Docker 基于 Linux namespace 技术隔离了各个容器的运行环境。")]),s._v(" "),a("ul",[a("li",[s._v("隔离了进程、网络、文件系统等系统资源，接近于独享一个虚拟机的运行环境。")]),s._v(" "),a("li",[s._v("没有隔离硬件资源。例如：一个容器可能占用全部的 CPU 和内存；在容器内执行 top 命令会看到整个宿主机的硬件资源。")]),s._v(" "),a("li",[s._v("没有隔离 Linux 内核，容器内的进程可能通过内核漏洞逃逸到宿主机上。")])])]),s._v(" "),a("li",[a("p",[s._v("namespace 分为多种类型，分别用于隔离不同的系统资源。如下：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("类型")]),s._v(" "),a("th",[s._v("Flag")]),s._v(" "),a("th",[s._v("隔离资源")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("ipc")]),s._v(" "),a("td",[s._v("CLONE_NEWIPC")]),s._v(" "),a("td",[s._v("System V 系统的 IPC 对象、POSIX 系统的消息队列")])]),s._v(" "),a("tr",[a("td",[s._v("network")]),s._v(" "),a("td",[s._v("CLONE_NEWNET")]),s._v(" "),a("td",[s._v("网络设备、IP、Socket")])]),s._v(" "),a("tr",[a("td",[s._v("mnt")]),s._v(" "),a("td",[s._v("CLONE_NEWNS")]),s._v(" "),a("td",[s._v("文件系统的挂载点")])]),s._v(" "),a("tr",[a("td",[s._v("pid")]),s._v(" "),a("td",[s._v("CLONE_NEWPID")]),s._v(" "),a("td",[s._v("进程的 PID")])]),s._v(" "),a("tr",[a("td",[s._v("user")]),s._v(" "),a("td",[s._v("CLONE_NEWUSER")]),s._v(" "),a("td",[s._v("用户、用户组")])]),s._v(" "),a("tr",[a("td",[s._v("uts")]),s._v(" "),a("td",[s._v("CLONE_NEWUTS")]),s._v(" "),a("td",[s._v("主机名、域名")])])])]),s._v(" "),a("ul",[a("li",[s._v("每种类型的 namespace 可以创建多个实例。\n"),a("ul",[a("li",[s._v("每个进程可以同时使用多种类型的 namespace 实例。")]),s._v(" "),a("li",[s._v("如果一个 namespace 内的所有进程都退出，则内核会自动销毁该 namespace 。除非 "),a("code",[s._v("/proc/<pid>/ns/<namespace>")]),s._v(" 文件被一直打开或挂载。")])])]),s._v(" "),a("li",[s._v("例：\n"),a("ul",[a("li",[s._v("不同 pid namespace 中的进程可以分配相同的 PID 。")]),s._v(" "),a("li",[s._v("docker 容器内，第一个启动的进程被分配的 PID 为 1 ，而 PPID 为 0 。")])])])])]),s._v(" "),a("li",[a("p",[s._v("关于 pid namespace ：")]),s._v(" "),a("ul",[a("li",[s._v("pid namespace 支持嵌套，当前 pid namespace 中创建的所有 pid namespace 都属于子实例。\n"),a("ul",[a("li",[s._v("父实例可以看到子孙实例的进程信息，但反之不行。"),a("br"),s._v("\n比如在父实例中执行 ps -ef 命令，会将子孙实例中的进程也显示出来，并将它们的 PID 转换成父实例中的 PID 。")]),s._v(" "),a("li",[s._v("子孙实例不可用看到父实例的进程信息。")]),s._v(" "),a("li",[s._v("主机启动之后，第一个创建的 pid namespace 就是最上层的实例。")])])]),s._v(" "),a("li",[s._v("每个 pid namespace 中，第一个创建的进程的 PID 为 1 ，通常为 init 进程。\n"),a("ul",[a("li",[s._v("如果其它进程产生了孤儿进程，则内核会将它们改为当前 pid namespace 的 init 进程的子进程。")]),s._v(" "),a("li",[s._v("如果 init 进程退出，则内核会向当前及子孙 pid namespace 中的所有进程发送 SIGKILL 信号，杀死它们。")]),s._v(" "),a("li",[s._v("内核只支持将已注册 handler 的信号发送给 init 进程，会忽略 SIGKILL、SIGSTOP 等信号。但是可以发送给子孙 pid namespace 中的 init 进程，因为它们在当前 pid namespace 中的 PID 不为 1 。这样会导致子孙 pid namespace 被销毁。")])])]),s._v(" "),a("li",[s._v("调用 setns() 或 unshare() 时，不会改变当前进程的 pid namespace ，而是影响之后创建的子进程。\n"),a("ul",[a("li",[s._v("因此，一个进程在创建之后，其 PID 总是不变。成为孤儿进程时， PPID 会变为 1 。")])])]),s._v(" "),a("li",[s._v("相关 API ："),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<unistd.h>")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pid_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getpid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回当前进程的 PID ，属于当前的 pid namespace")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("pid_t")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getppid")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 返回父进程的 PID 。如果父进程属于不同的 pid namespace ，则返回 0")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("/proc/<pid>/ns/")]),s._v(" 目录下，通过一些软链接，记录了进程所属的 namespace ID 。如下：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ll /proc/1/ns")]),s._v("\ntotal "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nlrwxrwxrwx. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":25 ipc -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" ipc:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4026531839")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nlrwxrwxrwx. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":25 mnt -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" mnt:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4026531840")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nlrwxrwxrwx. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":25 net -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" net:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4026531956")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nlrwxrwxrwx. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":25 pid -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" pid:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4026531836")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nlrwxrwxrwx. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":25 user -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" user:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4026531837")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\nlrwxrwxrwx. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":25 uts -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" uts:"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4026531838")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("ul",[a("li",[s._v("如果两个进程的某种 namespace ID 相同，则说明属于这种类型的同一个 namespace 实例。")]),s._v(" "),a("li",[s._v("创建子进程时，默认继承父进程的 namespace 实例。")])])]),s._v(" "),a("li",[a("p",[s._v("相关 API ：")]),s._v(" "),a("div",{staticClass:"language-c line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-c"}},[a("code",[a("span",{pre:!0,attrs:{class:"token macro property"}},[a("span",{pre:!0,attrs:{class:"token directive-hash"}},[s._v("#")]),a("span",{pre:!0,attrs:{class:"token directive keyword"}},[s._v("include")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("<sched.h>")])]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("clone")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("child_func"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("child_stack"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("arg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建一个子进程，并创建指定类型的 namespace ，让子进程加入其中")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// child_func   ：子进程要运行的函数")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// child_stack  ：子进程使用的栈空间")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// flags        ：一种或多种 namespace 的 flag ，比如 flags = CLONE_NEWNS | CLONE_NEWPID | CLONE_NEWUSER")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// args         ：传给子进程的参数")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setns")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" fd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" nstype"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 让当前进程加入已存在的 namespace")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// fd     ：一个 namespace 的文件描述符")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// nstype ：用于检查 fd 指向的 namespace 类型，填 0 则不检查")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("unshare")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" flags"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 根据 flags 创建新的 namespace ，然后让当前进程加入其中。这会先离开已加入的同类型 namespace")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"cgroup"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#cgroup"}},[s._v("#")]),s._v(" Cgroup")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Docker 基于 Linux Cgroup 技术限制各个容器占用的 CPU、内存等系统资源。")]),s._v(" "),a("ul",[a("li",[s._v("在 Cgroup 技术之前，通常通过 ulimit 命令限制 shell 终端占用的系统资源，但功能较少。")])])]),s._v(" "),a("li",[a("p",[s._v("Cgroup 的版本：")]),s._v(" "),a("ul",[a("li",[s._v("v1\n"),a("ul",[a("li",[a("a",{attrs:{href:"https://www.kernel.org/doc/Documentation/cgroup-v1/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("本文采用该版本。")])])]),s._v(" "),a("li",[s._v("v2\n"),a("ul",[a("li",[s._v("将所有 subsystem 都关联到一个 unified hierarchy 中。")]),s._v(" "),a("li",[s._v("同一个 subsystem 不能同时关联 v1 和 v2 版本的 hierarchy 。")]),s._v(" "),a("li",[s._v("只允许在根节点、叶子节点创建 cgroup 。")])])])])])]),s._v(" "),a("h3",{attrs:{id:"主要概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#主要概念"}},[s._v("#")]),s._v(" 主要概念")]),s._v(" "),a("ul",[a("li",[s._v("task\n"),a("ul",[a("li",[s._v("：代表一个进程。")])])]),s._v(" "),a("li",[s._v("cgroup\n"),a("ul",[a("li",[s._v("：控制组，包含一组进程。")]),s._v(" "),a("li",[s._v("cgroup 的最小管理单位是进程，不能管理进程中的某个线程。")]),s._v(" "),a("li",[s._v("创建子进程时，默认继承父进程的 cgroup 。但是创建之后，修改父进程或子进程的 cgroup ，不再相互影响。")])])]),s._v(" "),a("li",[s._v("hierarchy\n"),a("ul",[a("li",[s._v("：层级，是由多个 cgroup 实例以目录树的形式组成，又称为 cgroup 树。")]),s._v(" "),a("li",[s._v("通过挂载文件系统的方式，创建 hierarchy 。\n"),a("ul",[a("li",[s._v("一般将 hierarchy 挂载在 "),a("code",[s._v("/sys/fs/cgroup/")]),s._v(" 目录下。")]),s._v(" "),a("li",[s._v("通过在 hierarchy 目录下创建、删除子目录的方式，创建、删除 cgroup 节点。")]),s._v(" "),a("li",[s._v("cgroup 子节点默认继承父节点的属性。")]),s._v(" "),a("li",[s._v("如果一个 cgroup 节点不包含任何进程，也没有子节点，则称为空节点，允许被删除。")]),s._v(" "),a("li",[s._v("创建 hierarchy 时，根路径下的 cgroup 节点是第一个创建的节点，称为 root cgroup 。")])])]),s._v(" "),a("li",[s._v("每个进程同时可以存在于多个 hierarchy 中。\n"),a("ul",[a("li",[s._v("在同一个 hierarchy 中，每个进程同时只能属于一个 cgroup ，但可以切换到其它 cgroup 。")])])])])]),s._v(" "),a("li",[s._v("subsystem\n"),a("ul",[a("li",[s._v("：资源控制器（Resource Controller）。")]),s._v(" "),a("li",[s._v("通过将 subsystem 关联到 hierarchy 的方式，控制 cgroup 内进程占用的系统资源。\n"),a("ul",[a("li",[s._v("每个 subsystem 同时只能关联一个 hierarchy 。")]),s._v(" "),a("li",[s._v("每个 hierarchy 同时可以关联多个 subsystem 。")])])]),s._v(" "),a("li",[s._v("subsystem 分为多种类型："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("pids        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 限制、统计进程总数，包括 Cgroup 当前节点及其子节点")]),s._v("\n\ncpu         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 限制 CPU 使用量")]),s._v("\ncpuacct     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 统计 CPU 使用量")]),s._v("\ncpuset      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只允许使用 CPU 的指定核")]),s._v("\n\nmemory      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 限制、统计内存的使用量")]),s._v("\n\nblkio       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 限制对块设备的 IO 速度")]),s._v("\ndevices     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 控制能否访问某些设备")]),s._v("\nfreezer     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暂停进程。这不是通过发送 SIGSTOP 信号，而是在进程被 CPU 执行时突然阻塞。此时进程依然存在，不能继续执行，不能响应信号")]),s._v("\nhugetlb     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 限制 huge page 的使用量")]),s._v("\nperf_event  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许进程被 perf 命令监控")]),s._v("\n\nnet_prio    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置对网络接口的访问优先级")]),s._v("\nnet_cls     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过等级识别符 (classid) 标记进程发出的网络数据包，便于被 iptables 等工具统计")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])])]),s._v(" "),a("li",[s._v("每种 subsystem 通过读写一组文件来实现配置，例如："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("pids.max              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 限制进程总数，取值为 max 则不限制")]),s._v("\npids.current          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 记录当前的进程总数")]),s._v("\n\ncpu.shares\ncpu.cfs_period_us     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对应 --cpu-period")]),s._v("\ncpu.cfs_quota_us      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 对应 --cpu-quota")]),s._v("\n\nmemory.limit_in_bytes "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 限制进程最大的内存使用量，取值为 -1 则不限制")]),s._v("\nmemory.usage_in_bytes "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 记录进程当前的内存使用量，包括 RSS 和 Page Cache 。因此，如果 Docker 容器进行大量磁盘 IO ，则监控到的内存开销会比 RSS 偏大")]),s._v("\nmemory.oom_control    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取值为 0 时，启用 OOM-killer ，当进程占用的内存超过限制时杀死它。取值为 1 时，禁用 OOM-killer ，只是暂停进程")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])])])])]),s._v(" "),a("h3",{attrs:{id:"查看"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#查看"}},[s._v("#")]),s._v(" 查看")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("例：查看指定进程的 cgroup 信息")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat /proc/$$/cgroup")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v(":memory:/user.slice\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(":cpuset:/\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(":cpuacct,cpu:/user.slice\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v(":hugetlb:/\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(":net_prio,net_cls:/\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(":devices:/user.slice\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(":freezer:/\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(":blkio:/user.slice\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(":pids:/user.slice\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(":perf_event:/\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(":name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("systemd:/user.slice/user-1000.slice/session-3785.scope\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("ul",[a("li",[s._v("每行的三个字段分别表示：\n"),a("ul",[a("li",[s._v("cgroup ID 。")]),s._v(" "),a("li",[s._v("cgroup 绑定的所有 subsystem 的名称，用逗号分隔。\n"),a("ul",[a("li",[a("code",[s._v("name=systemd")]),s._v(" 表示没有绑定 subsystem ，只是定义了名称。")])])]),s._v(" "),a("li",[s._v("进程在 cgroup 树中的路径。\n"),a("ul",[a("li",[s._v("这是对于挂载点的相对路径，以 / 开头。")])])])])]),s._v(" "),a("li",[s._v("对于 Cgroup v2 ，每行总是显示成 "),a("code",[s._v("0::<PATH>")]),s._v(" 的格式。")])])]),s._v(" "),a("li",[a("p",[s._v("例：查看系统的所有 subsystem")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat /proc/cgroups")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#subsys_name    hierarchy       num_cgroups     enabled")]),s._v("\ncpuset          "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\ncpu             "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("71")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\ncpuacct         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("71")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nmemory          "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("71")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\ndevices         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("71")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nfreezer         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nnet_cls         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nblkio           "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("71")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nperf_event      "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nhugetlb         "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\npids            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("71")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\nnet_prio        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("ul",[a("li",[s._v("四列分别表示 subsystem 的：\n"),a("ul",[a("li",[s._v("名称")]),s._v(" "),a("li",[s._v("关联的 hierarchy ID")]),s._v(" "),a("li",[s._v("关联的 cgroup 中的进程数")]),s._v(" "),a("li",[s._v("是否启用")])])])])])]),s._v(" "),a("h3",{attrs:{id:"创建"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建"}},[s._v("#")]),s._v(" 创建")]),s._v(" "),a("p",[s._v("创建 Cgroup 的示例：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("通过挂载文件系统的方式，创建 hierarchy ：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /cgroup/hierarchy_1\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 挂载一个 cgroup 类型的虚拟文件系统，作为 hierarchy ，命名为 hierarchy_1 。默认关联所有 subsystem")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mount -t cgroup hierarchy_1 /cgroup/hierarchy_1")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可以通过 -o 选项传入一些参数，这里是只关联指定的 subsystem")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mount -t cgroup -o cpuset,cpuacct hierarchy_1 /cgroup/hierarchy_1")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 挂载 hierarchy ，关联的 subsystem 为空")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mount")]),s._v(" -t cgroup -o none,name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("subsystem_1  hierarchy_1  /cgroup/hierarchy_1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("ul",[a("li",[s._v("如果使用的 subsystem 已经被关联，则挂载 hierarchy 时会报错："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("mount: hierarchy_1 is already mounted or /cgroup/hierarchy_1 busy\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[s._v("删除 hierarchy 的命令："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("umount")]),s._v("      /cgroup/hierarchy_1\n/bin/rm -r  /cgroup/hierarchy_1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("hierarchy 在挂载之后会自动创建 root cgroup 节点，生成一些默认文件。如下：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cd /cgroup/hierarchy_1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ll")]),s._v("\ntotal "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":17 cgroup.clone_children  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 文件内容默认为 0 。如果为 1 ，则创建子节点时会拷贝当前节点的 cpuset subsystem 配置")]),s._v("\n--w--w--w-. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":17 cgroup.event_control\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":17 cgroup.procs           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 记录该 cgroup 关联的所有进程，每行一个 PID")]),s._v("\n-r--r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":17 cgroup.sane_behavior\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":17 notify_on_release      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 文件内容默认为 0 。如果为 1 ，则 cgroup 退出时会执行 release_agent")]),s._v("\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":17 release_agent          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该文件只存在于 root cgroup 中，包含一些 cgroup 退出时需要执行的命令")]),s._v("\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":17 tasks                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 与 cgroup.procs 类似，记录进程中主线程的 TID ，即与 PID 一致")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# head cgroup.procs          # root cgroup 默认包含系统的所有进程")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("在 hierarchy 目录下添加 cgroup 节点：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mkdir cgroup_1             # 创建一个 cgroup 子节点，这会自动生成一些默认文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cd cgroup_1/")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1/cgroup_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ll")]),s._v("\ntotal "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":35 cgroup.clone_children\n--w--w--w-. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":35 cgroup.event_control\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":35 cgroup.procs\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":35 notify_on_release\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Mar "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("26")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("17")]),s._v(":35 tasks\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1/cgroup_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat cgroup.procs  # 非 root cgroup 的节点，默认不包含任何进程")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("在 cgroup 节点中增加进程：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1/cgroup_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo 1 >> cgroup.procs   # 向该 cgroup 分组加入一个进程，这会自动将该进程移出之前的 cgroup")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1/cgroup_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat cgroup.procs")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1/cgroup_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# head ../cgroup.procs")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("11")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1/cgroup_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat ../cgroup.procs >> cgroup.procs # 每次只能加入一个 PID")]),s._v("\ncat: "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" error: Argument list too long\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1/cgroup_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo 3 >> cgroup.procs              # 不能加入不存在的进程的 PID")]),s._v("\n-bash: echo: "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("write")]),s._v(" error: No such process\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1/cgroup_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo > cgroup.procs                 # 只能在 cgroup 中加入进程，不支持删除进程")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1/cgroup_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat cgroup.procs")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1/cgroup_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $$ > cgroup.procs  # 加入当前终端的 PID")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1/cgroup_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat cgroup.procs")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4593")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6121")]),s._v("                                                                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 终端执行命令时创建了子进程，因此也加入了其 PID")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1/cgroup_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo $$ > cgroup.procs  # 加入 PID 时，会自动排序、去重、去掉不存在的 PID")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1/cgroup_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cat cgroup.procs")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4593")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6160")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br")])]),a("ul",[a("li",[s._v("非 root 用户只能修改自己进程所属的 cgroup 。")]),s._v(" "),a("li",[s._v("非空节点的 cgroup 不允许被删除："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1/cgroup_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# cd ..")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS /cgroup/hierarchy_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# /bin/rm -r cgroup_1/")]),s._v("\n/bin/rm: cannot remove ‘cgroup_1/cgroup.clone_children’: Operation not permitted\n/bin/rm: cannot remove ‘cgroup_1/cgroup.event_control’: Operation not permitted\n/bin/rm: cannot remove ‘cgroup_1/notify_on_release’: Operation not permitted\n/bin/rm: cannot remove ‘cgroup_1/cgroup.procs’: Operation not permitted\n/bin/rm: cannot remove ‘cgroup_1/tasks’: Operation not permitted\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])])])])]),s._v(" "),a("h3",{attrs:{id:"libcgroup-tools"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#libcgroup-tools"}},[s._v("#")]),s._v(" libcgroup-tools")]),s._v(" "),a("p",[s._v("：一个用于查看、配置 Cgroup 的工具包。")]),s._v(" "),a("ul",[a("li",[s._v("安装："),a("code",[s._v("yum install -y libcgroup-tools")])]),s._v(" "),a("li",[s._v("命令："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("lscgroup        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示本机的所有 cgroup")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])]),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("lssubsys        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示已挂载的 subsystem")]),s._v("\n        -a      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示所有 subsystem")]),s._v("\n        -m      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 增加显示每个 subsystem 的挂载点")]),s._v("\n        -i      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 增加显示每个 subsystem 关联的 hierarchy ID")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("cgdelete "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("controllers"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(":"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除 cgroup")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[s._v("例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# lscgroup")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\ncpu,cpuacct:/               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每行的格式为 <controllers>:<path> ，即 subsystem 的类型、cgroup 在 hierarchy 下的相对路径")]),s._v("\ncpu,cpuacct:/docker\ncpu,cpuacct:/docker/baf31e1d1a0b055b7f7d9947ec035d716a2d7788ee47473f85f9f4061633fabe\ncpu,cpuacct:/docker/ba919a1393fbd560291ec8dd28eedf12b1e6ce4f0c1ab4df04d929074a436661\ncpu,cpuacct:/user.slice\ncpu,cpuacct:/system.slice\ncpu,cpuacct:/system.slice/iptables.service\ncpu,cpuacct:/system.slice/run-user-1000.mount\ncpu,cpuacct:/system.slice/crond.service\ncpuset:/\ncpuset:/docker\ncpuset:/docker/baf31e1d1a0b055b7f7d9947ec035d716a2d7788ee47473f85f9f4061633fabe\ncpuset:/docker/ba919a1393fbd560291ec8dd28eedf12b1e6ce4f0c1ab4df04d929074a436661\n"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("name")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("subsystem_1:/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"layer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#layer"}},[s._v("#")]),s._v(" layer")]),s._v(" "),a("ul",[a("li",[s._v("Docker 容器内采用联合挂载（Union mount）技术挂载多层文件系统（file system layer）。\n"),a("ul",[a("li",[s._v("mount 命令会让挂载的 layer 覆盖挂载点，而 Union mount 会让挂载的 layer 与挂载点合并：路径不同的文件会混合，路径相同的文件会覆盖。")]),s._v(" "),a("li",[s._v("支持 Union mount 的 layer 称为 Union Filesystem ，比如 UnionFS、AUFS、OverlayFS 等。")]),s._v(" "),a("li",[s._v("使用 Union mount 合并多层 layer 时，只有最上层的那个 layer 为读写模式（称为 top layer），其它 layer 都为 read-only 模式。")])])]),s._v(" "),a("li",[s._v("一个 Docker 镜像由一层或多层 layer 组成，每层 layer 采用 SHA256 哈希值作为 ID 。")]),s._v(" "),a("li",[s._v("创建 Docker 容器时的挂载过程：\n"),a("ol",[a("li",[s._v("先根据 Docker 镜像创建一个只读模式的 RootFS 文件系统，包含 /bin、/dev、/home 等 FHS 标准目录。")]),s._v(" "),a("li",[s._v("然后挂载一层读写模式的 top layer ，内容为空，不包含任何文件。\n"),a("ul",[a("li",[s._v("容器内进程创建、修改的所有文件，都保存在 top layer 中。")]),s._v(" "),a("li",[s._v("采用写时复制（Copy On Write，COW）：当容器要修改 read-only layer 中的文件时，内核会自动将该文件拷贝到 top layer 中，供容器修改，并覆盖原 layer 中的文件。")])])])])])])])}),[],!1,null,null,null);t.default=e.exports},652:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),a("h2",{attrs:{id:"架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#架构"}},[s._v("#")]),s._v(" 架构")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("zk server 可以只部署单实例，也可以部署多个实例，组成集群。")]),s._v(" "),a("ul",[a("li",[s._v("每个 server 都拥有整个集群的数据副本，客户端连接到任一 server 即可访问集群。")])])]),s._v(" "),a("li",[a("p",[s._v("部署多个 zk server 时，需要至少 Quorum 数量的节点正常工作，集群才可用。")]),s._v(" "),a("ul",[a("li",[s._v("部署的 server 数量建议为奇数，为偶数时并不会提高可用性。")]),s._v(" "),a("li",[s._v("部署 1 个 server 时，不能组成集群，只能工作在 standalone 模式。")]),s._v(" "),a("li",[s._v("部署 2 个 server 时，能组成一个最小的 zk 集群，但存在单点故障的风险。\n"),a("ul",[a("li",[s._v("任一 server 故障时，剩下的 server 不超过集群的半数，不能投票决策。")])])]),s._v(" "),a("li",[s._v("部署 3 个 server 时，组成的 zk 集群最多允许 1 个 server 故障。")]),s._v(" "),a("li",[s._v("部署 4 个 server 时，组成的 zk 集群也是最多允许 1 个 server 故障。")])])]),s._v(" "),a("li",[a("p",[s._v("集群中的 server 分为三种角色：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("leader")]),s._v(" "),a("ul",[a("li",[s._v("：领导者，有权发出提议（Proposal）、投票。")]),s._v(" "),a("li",[s._v("提议通过之后，就会更新集群的数据。")]),s._v(" "),a("li",[s._v("可以处理客户端的读、写请求。")])])]),s._v(" "),a("li",[a("p",[s._v("follower")]),s._v(" "),a("ul",[a("li",[s._v("：跟随者，有权投票。")]),s._v(" "),a("li",[s._v("会复制 leader 的数据到本机，因此可以处理客户端的读请求。")]),s._v(" "),a("li",[s._v("收到客户端的写请求时，会转发给 leader ，相当于反向代理。")])])]),s._v(" "),a("li",[a("p",[s._v("observer")]),s._v(" "),a("ul",[a("li",[s._v("：观察者。")]),s._v(" "),a("li",[s._v("无权投票，只能听从投票结果，因此不会影响集群的可用性，可以允许故障。")]),s._v(" "),a("li",[s._v("可以像 follower 一样接收客户端的读写请求，因此能提高集群的并发量。")]),s._v(" "),a("li",[s._v("leader、follower 是 zk 集群在选举时自动分配的角色，而 observer 是由用户指定的可选角色。")])])])])])]),s._v(" "),a("h2",{attrs:{id:"事务"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务"}},[s._v("#")]),s._v(" 事务")]),s._v(" "),a("ul",[a("li",[s._v("每个事务拥有一个十六进制编号，称为 zxid 。\n"),a("ul",[a("li",[s._v("zxid 用 long 型变量存储，长度为 64 位。")]),s._v(" "),a("li",[s._v("zxid 的前 32 位用于记录当前的 epoch 编号，后 32 位用于记录这是当前 epoch 中的第几个事务，从 0 开始递增。例如 zxid=0x2000004b2 。")])])]),s._v(" "),a("li",[s._v("当事务日志达到一定数量时，zk 会将当前全部 znode 的数据保存为磁盘中的一个快照文件，然后创建新的事务日志文件。\n"),a("ul",[a("li",[s._v("创建快照文件、事务日志文件时，采用当前最新一个 zxid 作为文件后缀名。")]),s._v(" "),a("li",[s._v("快照文件、事务日志文件默认一直不会删除，因此可以让 zk 数据回滚到历史状态。")])])]),s._v(" "),a("li",[s._v("保存快照的过程中，如果新产生了事务，也会被加入快照。\n"),a("ul",[a("li",[s._v("此时事务日志文件的 zxid 会略大于快照文件的 zxid 。")]),s._v(" "),a("li",[s._v("该快照称为模糊快照，不过 zk 依然可以根据它恢复数据。")])])])]),s._v(" "),a("h2",{attrs:{id:"zab"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zab"}},[s._v("#")]),s._v(" ZAB")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("zk 采用的分布式共识协议是 ZAB（Zookeeper Atomic Broadcast），与 Raft 协议相似。")]),s._v(" "),a("ul",[a("li",[s._v("默认采用 FastLeaderElection 选举算法。选举过程很快，一般低于 1 s 。")]),s._v(" "),a("li",[s._v("Leader 的任期称为 epoch 。\n"),a("ul",[a("li",[s._v("每个 epoch 拥有一个从 0 开始递增的数字编号。")])])])])]),s._v(" "),a("li",[a("p",[s._v("ZAB 协议为 zk server 划分了多个运行阶段：")]),s._v(" "),a("ul",[a("li",[s._v("启动：每个 server 在启动时，不知道自己的角色，需要开始选举，直到选出 leader ，或者发现已有的 leader 。")]),s._v(" "),a("li",[s._v("election ：选举")]),s._v(" "),a("li",[s._v("discovery ：发现领导者")]),s._v(" "),a("li",[s._v("synchronization ：同步跟随者")]),s._v(" "),a("li",[s._v("broadcast ：广播事务")])])])]),s._v(" "),a("h3",{attrs:{id:"election"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#election"}},[s._v("#")]),s._v(" election")]),s._v(" "),a("ol",[a("li",[s._v("有权投票的 server 进入 LOOKING 竞选状态。向其它 server 发送自己的投票，包含以下信息：\n"),a("ul",[a("li",[s._v("epoch ：本轮投票的编号。")]),s._v(" "),a("li",[s._v("zxid ：提议的 leader 的最新 zxid 。")]),s._v(" "),a("li",[s._v("leader ：提议的 leader 的 ID 。默认推举自己。")])])]),s._v(" "),a("li",[s._v("每个 server 收到其它 server 的投票时，会与自己的投票进行对比。\n"),a("ul",[a("li",[s._v("依次比较 epoch、zxid、leader 三种值的大小，取值越大则投票的权重越高。")]),s._v(" "),a("li",[s._v("如果自己投票的权重更大，则发送给对方 server 。否则采用对方的投票作为自己的新投票。")]),s._v(" "),a("li",[s._v("这样会尽量推举拥有最新事务的 server 作为 leader 。")])])]),s._v(" "),a("li",[s._v("重复 1-2 步，直到一个 server 发现有 Quorum 数量的 server 推举自己为 leader ，则将 epoch 加 1 ，向所有 server 发送自己成为 leader 的消息。")]),s._v(" "),a("li",[s._v("投票成功。各个 server 被分配了角色，进入 LEADING、FOLLOWING 或 OBSERVING 状态。\n"),a("ul",[a("li",[s._v("但此时 follower 不一定能访问到 leader ，也尚未同步数据，要等到 broadcast 阶段才能供客户端访问。")])])])]),s._v(" "),a("h3",{attrs:{id:"discovery"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#discovery"}},[s._v("#")]),s._v(" discovery")]),s._v(" "),a("ol",[a("li",[s._v("follower 连接到 leader ，发送 FOLLOWERINFO 消息。")]),s._v(" "),a("li",[s._v("等 Quorum 数量的 follower 建立连接之后，leader 停止接受新连接。并向已有的 follower 发送 LEADERINFO(e) 消息，提议开始一个新的 epoch ，其 e 值大于这些 follower 的 acceptedEpoch 。\n"),a("ul",[a("li",[s._v("统计的 Quorum 数量包括了 leader、follower ，不包括 observer 。")])])]),s._v(" "),a("li",[s._v("follower 收到 LEADERINFO(e) 消息，进行判断：\n"),a("ul",[a("li",[s._v("如果 e > acceptedEpoch ，则设置 acceptedEpoch = e ，并回复 ACKEPOCH(e) ，表示接受新的 epoch 。")]),s._v(" "),a("li",[s._v("如果 e == acceptedEpoch ，则跳到执行下一步。")]),s._v(" "),a("li",[s._v("如果 e < acceptedEpoch ，则断开连接，重新开始选举。")])])]),s._v(" "),a("li",[s._v("等 Quorum 数量的 follower 回复 ACKEPOCH 之后，leader 开始下一阶段。\n"),a("ul",[a("li",[s._v("所有 follower 都必须满足以下两个条件之一，否则 leader 断开连接，重新开始选举："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("follower.currentEpoch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("  leader.currentEpoch\nfollower.currentEpoch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("==")]),s._v(" leader.currentEpoch "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("&&")]),s._v(" follower.lastZxid "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<=")]),s._v(" leader.lastZxid\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])]),s._v(" "),a("li",[s._v("如果上述过程失败或超时，则重新开始选举。")])])])]),s._v(" "),a("h3",{attrs:{id:"synchronization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#synchronization"}},[s._v("#")]),s._v(" synchronization")]),s._v(" "),a("ol",[a("li",[s._v("follower 连接到 leader ，加入 Learner 队列。")]),s._v(" "),a("li",[s._v("leader 给 follower 同步数据。有多种同步模式：\n"),a("ul",[a("li",[s._v("如果 follower 落后少量事务，则 leader 发送 DIFF 消息，同步缺少的事务。")]),s._v(" "),a("li",[s._v("如果 follower 落后太多事务，则 leader 发送 SNAP 消息，同步全部 znode 的快照。")]),s._v(" "),a("li",[s._v("如果 follower 的 zxid 比 leader 还大，则发送 TRUNC 消息，丢弃多出的事务。")])])]),s._v(" "),a("li",[s._v("当 follower 同步完数据之后，leader 向它发送 NEWLEADER(e) 消息，提议自己作为该 epoch 的 leader 。")]),s._v(" "),a("li",[s._v("follower 收到 NEWLEADER(e) 消息，停止同步，设置 currentEpoch = e ，然后回复 ACK 消息。")]),s._v(" "),a("li",[s._v("等 Quorum 数量的 follower 回复 ACK 之后，leader 正式成为该 epoch 的 leader ，向所有 follower 发送 UPTODATE 消息，表示超过 Quorum 数量的 follower 已完成同步。")]),s._v(" "),a("li",[s._v("follower 收到 UPTODATE 消息，开始接受客户端连接。")])]),s._v(" "),a("h3",{attrs:{id:"broadcast"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#broadcast"}},[s._v("#")]),s._v(" broadcast")]),s._v(" "),a("ul",[a("li",[s._v("提交一个新事务的流程如下，类似于两阶段提交：\n"),a("ol",[a("li",[s._v("leader 开始一个新事务，广播 PROPOSE 消息给所有 follower ，提议该事务。")]),s._v(" "),a("li",[s._v("follower 收到 PROPOSE 消息，将事务写入磁盘的事务日志文件。然后回复 ACK(zxid) 消息给 leader ，表示直到该 zxid 的事务都已经被接受。")]),s._v(" "),a("li",[s._v("等 Quorum 数量的 follower 回复 ACK 之后， leader 正式提交该事务。然后广播 COMMIT(zxid) 消息给所有 follower ，表示直到该 zxid 的事务都已经被提交。")])])]),s._v(" "),a("li",[s._v("leader 确保超过 Quorum 数量的 follower 同步了最新事务之后，才会开始下一个事务。\n"),a("ul",[a("li",[s._v("尚未同步的 follower 必须按 zxid 顺序执行事务，即优先执行 zxid 最小的事务，且不允许跳过事务。")]),s._v(" "),a("li",[s._v("如果 follower 与 PROPOSE 消息的 epoch 不同，则不会接受提议，而是先经历 discovery、synchronization 阶段。")])])]),s._v(" "),a("li",[s._v("如果 follower 在一定时间内没有收到 leader 的 PROPOSE 或 ping 消息，则认为 leader 故障，状态从 FOLLOWING 变为 LOOKING ，重新选举。\n"),a("ul",[a("li",[s._v("此时原 leader 可能依然处于 LEADING 状态，可以被客户端连接，但它没有 Quorum 数量的 follower ，不能提交事务。")]),s._v(" "),a("li",[s._v("因此，集群中可能同时存在多个 leader ，但最多只有一个 leader 能拥有 Quorum 数量的 follower ，不会发生脑裂。")])])]),s._v(" "),a("li",[s._v("如果 leader 在一定时间内没有等到 Quorum 数量的 follower 回复 ACK ，则状态从 LEADING 变为 LOOKING ，重新选举。")])]),s._v(" "),a("h2",{attrs:{id:"源代码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#源代码"}},[s._v("#")]),s._v(" 源代码")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("QuorumPeer 类负责根据 ZAB 协议管理服务器，定义如下：")]),s._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("QuorumPeer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ZooKeeperThread")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("implements")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("QuorumStats"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Provider")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("QuorumServer")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 服务器对象")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("String")]),s._v(" hostname"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LearnerType")]),s._v(" type "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LearnerType")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("PARTICIPANT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ServerState")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 服务器的状态")]),s._v("\n        LOOKING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        FOLLOWING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        LEADING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        OBSERVING\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("ZabState")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 服务器在 ZAB 协议中的运行阶段")]),s._v("\n        ELECTION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        DISCOVERY"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        SYNCHRONIZATION"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        BROADCAST\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("SyncMode")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// synchronization 阶段的同步模式")]),s._v("\n        NONE"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        DIFF"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        SNAP"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n        TRUNC\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("enum")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("LearnerType")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// server 类型。Learner 类是 Followers 类和 Observers 类的父类，用于同步 leader 的数据")]),s._v("\n        PARTICIPANT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参选者，在选举之后可以变成 leader 或 follower")]),s._v("\n        OBSERVER                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 观察者")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("void")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("run")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// zk 会创建一个子线程去执行 QuorumPeer.run()")]),s._v("\n        LOG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("debug")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Starting quorum peer"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("running"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 循环体，根据 server 的状态执行一些操作")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("switch")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("getPeerState")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" LOOKING"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// LOOKING 状态要进行选举")]),s._v("\n                        LOG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"LOOKING"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" OBSERVING"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n                        LOG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"OBSERVING"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setObserver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("makeObserver")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("logFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                        observer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("observeLeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" FOLLOWING"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n                        LOG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"FOLLOWING"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setFollower")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("makeFollower")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("logFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                        follower"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("followLeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n                    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" LEADING"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("\n                        LOG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("info")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"LEADING"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("setLeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("makeLeader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("logFactory"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n                        leader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("lead")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// LEADING 状态则作为 leader 角色保持运行")]),s._v("\n                        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("finally")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n            LOG"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("warn")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"QuorumPeer main thread exited"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("QuorumCnxManager 类负责管理服务器之间的通信。")]),s._v(" "),a("ul",[a("li",[s._v("通信的消息采用以下数据结构："),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("QuorumPacket")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" type"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消息的类型。例如取值为 3 时表示 ACK 类型")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" zxid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("byte")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" data"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 消息的内容")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("List")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Id")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v(" authinfo"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[s._v("收、发的消息会放在队列 recvQueue、queueSendMap 中，异步处理。")]),s._v(" "),a("li",[s._v("FastLeaderElection 选举算法的投票采用以下数据结构："),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("Notification")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("public")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("static")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("final")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" CURRENTVERSION "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0x2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("int")]),s._v(" version"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 投票格式的版本")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" sid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送该投票的 server 的 id")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("QuorumPeer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ServerState")]),s._v(" state"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 发送该投票的 server 的状态")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("QuorumVerifier")]),s._v(" qv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" leader"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 提议的 leader")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" electionEpoch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 本轮选举的 epoch")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" peerEpoch"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 提议的 leader 的 epoch")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("long")]),s._v(" zxid"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 提议的 leader 的最新 zxid")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])])])])])]),s._v(" "),a("h2",{attrs:{id:"日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志"}},[s._v("#")]),s._v(" 日志")]),s._v(" "),a("ul",[a("li",[s._v("在 3 节点的 zk 集群中，重启其中一个节点，日志示例如下："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该 server 启动之后，默认监听 TCP 3888 端口，用于选举")]),s._v("\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ListenerHandler-/0.0.0.0:3888:QuorumCnxManager"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$Listener")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ListenerHandler")]),s._v("@1065"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" is accepting connections now, my election "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("bind")]),s._v(" port: /0.0.0.0:3888\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动之后处于 LOOKING 状态，发起一轮投票")]),s._v("\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("QuorumPeer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("plain"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("secure"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("disabled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":QuorumPeer@1374"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - LOOKING\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("QuorumPeer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("plain"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("secure"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("disabled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":FastLeaderElection@944"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - New election. My "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(", proposed "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("zxid")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("0x500000342\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发送一个投票给其它节点。其中 my state 表示当前节点的状态， n.* 表示 Notification 中的信息")]),s._v("\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("WorkerReceiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":FastLeaderElection"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$Messenger")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$WorkerReceiver")]),s._v("@389"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Notification: my state:LOOKING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" n.sid:1, n.state:LOOKING, n.leader:1, n.round:0x1, n.peerEpoch:0x5, n.zxid:0x500000342, message "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" version:0x2, n.config version:0x0\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 投票时，各个 server 需要两两连接，但每对 server 之间只需建立一个 TCP 连接。因此只允许由 id 更大的 server 主动建立连接，断开其余连接")]),s._v("\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("QuorumConnectionThread-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("-2:QuorumCnxManager@513"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Have smaller server identifier, so dropping the connection: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myId:1 --"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" sid:3"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("QuorumConnectionThread-"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("-1:QuorumCnxManager@513"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Have smaller server identifier, so dropping the connection: "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("myId:1 --"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" sid:2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ListenerHandler-/0.0.0.0:3888:QuorumCnxManager"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$Listener")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ListenerHandler")]),s._v("@1070"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Received connection request from /10.0.0.2:46728\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ListenerHandler-/0.0.0.0:3888:QuorumCnxManager"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$Listener")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$ListenerHandler")]),s._v("@1070"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Received connection request from /10.0.0.3:35372\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 收到其它 server 发来的投票。可见它们不处于 LOOKING 状态，已存在 leader")]),s._v("\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("WorkerReceiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":FastLeaderElection"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$Messenger")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$WorkerReceiver")]),s._v("@389"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Notification: my state:LOOKING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" n.sid:3, n.state:LEADING, n.leader:3, n.round:0xa9, n.peerEpoch:0x5, n.zxid:0x400000000, message "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" version:0x2, n.config version:0x0\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("WorkerReceiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":FastLeaderElection"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$Messenger")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$WorkerReceiver")]),s._v("@389"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Notification: my state:LOOKING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" n.sid:2, n.state:FOLLOWING, n.leader:3, n.round:0xa9, n.peerEpoch:0\nx5, n.zxid:0x400000000, message "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" version:0x2, n.config version:0x0\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("WorkerReceiver"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(":FastLeaderElection"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$Messenger")]),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$WorkerReceiver")]),s._v("@389"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Notification: my state:LOOKING"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" n.sid:3, n.state:LEADING, n.leader:3, n.round:0xa9, n.peerEpoch:0x5\n, n.zxid:0x400000000, message "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("format")]),s._v(" version:0x2, n.config version:0x0\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("QuorumPeer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("plain"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("secure"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("disabled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":QuorumPeer@857"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Peer state changed: following\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("QuorumPeer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("plain"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("secure"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("disabled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":QuorumPeer@1456"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - FOLLOWING\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("QuorumPeer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("plain"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("secure"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("disabled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":Follower@75"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - FOLLOWING - LEADER ELECTION TOOK - "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("23")]),s._v(" MS\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该 server 结束选举，接着进入 discovery、synchronization 阶段")]),s._v("\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("QuorumPeer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("plain"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("secure"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("disabled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":QuorumPeer@863"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Peer state changed: following - discovery\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("LeaderConnector-/10.0.0.3:2888:Learner"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$LeaderConnector")]),s._v("@330"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Successfully connected to leader, using address: /10.0.0.3:2888\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("QuorumPeer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("plain"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("secure"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("disabled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":QuorumPeer@863"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Peer state changed: following - synchronization\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("QuorumPeer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("plain"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("secure"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("disabled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":Learner@511"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Getting a "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v(" from the leader 0x500000342\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("QuorumPeer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("plain"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("secure"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("disabled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":QuorumPeer@868"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Peer state changed: following - synchronization - "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("diff")]),s._v("\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("QuorumPeer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("plain"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("secure"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("disabled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":Learner@677"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Learner received NEWLEADER message\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("QuorumPeer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("plain"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("secure"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("disabled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":Learner@661"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Learner received UPTODATE message\nINFO  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("QuorumPeer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("myid"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("plain"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.0")]),s._v(".0.0:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("secure"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("disabled"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(":QuorumPeer@863"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" - Peer state changed: following - broadcast\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br")])])])])])}),[],!1,null,null,null);t.default=e.exports},662:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#原理"}},[s._v("#")]),s._v(" 原理")]),s._v(" "),a("h2",{attrs:{id:"架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#架构"}},[s._v("#")]),s._v(" 架构")]),s._v(" "),a("ul",[a("li",[s._v("基本架构：\n"),a("ul",[a("li",[s._v("运行一些 Kafka 服务器，组成集群。")]),s._v(" "),a("li",[s._v("用户运行客户端程序，连接到 Kafka 服务器，作为 Producer 生产消息，或者作为 consumer 消费消息。")])])])]),s._v(" "),a("h3",{attrs:{id:"broker"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#broker"}},[s._v("#")]),s._v(" Broker")]),s._v(" "),a("p",[s._v("：Kafka 服务器，负责存储、管理消息。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("broker 会将消息以日志文件的形式存储，存放在 "),a("code",[s._v("logs/<topic>-<partition>/")]),s._v(" 目录下，因此会受到文件系统的影响。")])]),s._v(" "),a("li",[a("p",[s._v("虽然 broker 将消息保存在磁盘中，但采取以下措施提高了读写速度：")]),s._v(" "),a("ul",[a("li",[s._v("生产消息、消费消息时，是按顺序读写磁盘，因此比随机读写的速度快很多。")]),s._v(" "),a("li",[s._v("生产消息时，先将消息写入 MMAP 内存映射文件，然后再 flush 到磁盘。因此写入速度更快。")]),s._v(" "),a("li",[s._v("消费消息时，用 sendfile 快速发送文件。")])])]),s._v(" "),a("li",[a("p",[s._v("Kafka 集群中会选出一个 broker 作为 Controller 。")]),s._v(" "),a("ul",[a("li",[s._v("每个 broker 在启动之后，都会尝试到 zk 中创建 "),a("code",[s._v("/controller")]),s._v(" 节点，创建成功则当选。")]),s._v(" "),a("li",[s._v("Controller 负责管理整个集群，比如在每个 partition 的所有副本中选出一个作为 leader replica 。")]),s._v(" "),a("li",[s._v("增加 broker 的数量，就可以对 Kafka 集群横向扩容。")])])])]),s._v(" "),a("h3",{attrs:{id:"producer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#producer"}},[s._v("#")]),s._v(" Producer")]),s._v(" "),a("p",[s._v("：生产者，即生产消息的客户端，负责发布消息到 broker 。")]),s._v(" "),a("ul",[a("li",[s._v("Producer 向某个 topic 发布消息时，默认会将消息随机分配到不同的 partition 。\n"),a("ul",[a("li",[s._v("可以指定 partition ，也可以指定均衡策略来自动分配 partition 。")])])])]),s._v(" "),a("h3",{attrs:{id:"consumer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#consumer"}},[s._v("#")]),s._v(" Consumer")]),s._v(" "),a("p",[s._v("：消费者，即消费消息的客户端，负责从 broker 消费消息。")]),s._v(" "),a("ul",[a("li",[s._v("consumer 消费消息的步骤：\n"),a("ol",[a("li",[s._v("发送请求到 broker ，订阅一个或多个 topic 。")]),s._v(" "),a("li",[s._v("定时发送请求到 broker ，轮询自己订阅的 topic 。如果存在可消费的消息，则拉取到本机。")])])]),s._v(" "),a("li",[s._v('consumer 消费消息的过程类似于下载文件，消息被 "消费" 之后并不会被删除，除非超过 broker 的存储限制。')])]),s._v(" "),a("h3",{attrs:{id:"consumer-group"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#consumer-group"}},[s._v("#")]),s._v(" Consumer Group")]),s._v(" "),a("p",[s._v("：消费者组，用于在逻辑上对 consumer 分组管理。")]),s._v(" "),a("ul",[a("li",[s._v("客户端运行 consumer 实例时，可以指定其所属的 consumer group 。\n"),a("ul",[a("li",[s._v("如果不指定，则该 consumer 的 group 为空，不会被 Coordinator 协调。")])])]),s._v(" "),a("li",[s._v("一个 consumer 同时只能消费一个 partition ，因此通常用一组 consumer 同时消费一个 topic 下的不同 partition ，通过并行消费来提高消费速度。\n"),a("ul",[a("li",[s._v("当一个 group 消费一个 topic 时，如果 partition 的数量小于 consumer 的数量，就会有 consumer 空闲。\n"),a("ul",[a("li",[s._v("因此，最好将 partition 的数量设置成与 consumer 数量相同，或者为 consumer 数量的整数倍，以便于平均分配。")])])]),s._v(" "),a("li",[s._v("不同 group 之间相互独立，即使同时消费同一个 topic 下的同一个 partition 也互不影响。")])])])]),s._v(" "),a("h3",{attrs:{id:"coordinator"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#coordinator"}},[s._v("#")]),s._v(" Coordinator")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("Kafka 会根据 consumer group ID 的哈希值，分配 topic: __consumer_offsets 中的一个 partition ，用于存储该 group 的 offset 信息。")]),s._v(" "),a("ul",[a("li",[s._v("该 partition 的 leader replica 所在的 broker 运行的 GroupCoordinator 类，负责管理该 group 的 consumer、offset 。")])])]),s._v(" "),a("li",[a("p",[s._v("Coordinator 管理的 consumer group 分为多个状态（group state）：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("PreparingRebalance    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 准备开始 Rebalance")]),s._v("\nCompletingRebalance   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 即将完成 Rebalance ，正在发送分配方案")]),s._v("\nStable                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 已完成 Rebalance ，可以正常消费")]),s._v("\nEmpty                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 组内没有成员")]),s._v("\nDead                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 组内没有成员，且 offset 等 metadata 已删除，不能响应请求")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("consumer 启动时，如果指定了所属的 consumer group ，则会发送带有 UNKNOWN_MEMBER_ID 标志的 JoinGroup 请求给 Coordinator ，请求加入指定的 group ，并请求分配 member id 。")]),s._v(" "),a("ul",[a("li",[s._v("GroupCoordinator 会给每个 consumer 分配一个 member id ，格式为 "),a("code",[s._v("client.id-UUID")]),s._v(" ，其中 UUID 为随机生成的十六进制编号。\n"),a("ul",[a("li",[s._v("第一个加入 group 的 consumer 会担任组长（Group Leader）。")]),s._v(" "),a("li",[s._v("每个 consumer 会定时向 Coordinator 发送 Heartbeat 请求，以维持在线。否则 Coordinator 会从该 group 删除该 consumer 。")])])]),s._v(" "),a("li",[s._v("组长负责分配各个 consumer 消费的 partition ，该过程称为 Consumer Rebalance 。流程如下：\n"),a("ol",[a("li",[s._v("组长从 Coordinator 获取该组的 consumer 列表，分配各个 consumer 消费的 partition 。")]),s._v(" "),a("li",[s._v("组长发送 SyncGroup 请求给 Coordinator ，告知分配方案。")]),s._v(" "),a("li",[s._v("Coordinator 等收到 consumer 的 Heartbeat 请求时，在响应中告知已发生 Rebalance 。")]),s._v(" "),a("li",[s._v("consumer 删掉内存中的 UUID 等成员信息，重新加入该 group ，进入新的 generation 。")])])]),s._v(" "),a("li",[s._v("当 group 的 consumer 或 partition 数量变化时，都会自动触发一次 Rebalance 。")]),s._v(" "),a("li",[s._v("每次 Rebalance 时，group 就开始一个新时代（generation）。\n"),a("ul",[a("li",[s._v("每个 generation 拥有一个从 0 递增的编号。")])])])])]),s._v(" "),a("li",[a("p",[s._v("日志示例：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# broker 1 的 Coordinator 被分配了任务，开始管理 __consumer_offsets partition 对应的 consumer group")]),s._v("\nINFO\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("GroupCoordinator "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": Elected as the group coordinator "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" partition "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("28")]),s._v("\nINFO\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("GroupCoordinator "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": Elected as the group coordinator "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" partition "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# broker 1 的 Coordinator 被取消分配，停止管理一些 consumer group")]),s._v("\nINFO\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("GroupCoordinator "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": Resigned as the group coordinator "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" partition "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\nINFO\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("GroupCoordinator "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": Resigned as the group coordinator "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" partition "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nINFO\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("GroupCoordinator "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": Resigned as the group coordinator "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" partition "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("24")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一个成员加入 stable 状态的 consumer group ，被分配了 member id")]),s._v("\nINFO\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("GroupCoordinator "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": Dynamic Member with unknown member "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" joins group test_group_1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" Stable state. Created a new member "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" consumer-1-5ee75316-16c0-474f-9u2d-6e57f4b238b3 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" this member and "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" to the group.\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 准备开始 rebalance ，原因是加入一个新成员，其 group instance id 为 None ，说明不是 Static Member")]),s._v("\nINFO\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("GroupCoordinator "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": Preparing to rebalance group test_group_1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" state PreparingRebalance with old generation "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("38")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__consumer_offsets-21"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("reason: Adding new member consumer-1-5ee75316-16c0-474f-9u2d-6e57f4b238b3 with group instance "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" None"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# group 进入 stable 状态，开始一个新 generation ，拥有 3 个成员")]),s._v("\nINFO\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("GroupCoordinator "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": Stabilized group test_group_1 generation "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("39")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("__consumer_offsets-21"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" with "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" members\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Coordinator 收到 leader 发来的分配方案")]),s._v("\nINFO\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("GroupCoordinator "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": Assignment received from leader "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" group test_group_1 "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" generation "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("39")]),s._v(". The group has "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" members, "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" of "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" are static.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])]),a("ul",[a("li",[s._v("Preparing to rebalance 的几种 reason 示例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("Adding new member "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$memberId")]),s._v(" with group instance "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$groupInstanceId")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 加入一个新成员")]),s._v("\nremoving member "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$memberId")]),s._v(" on LeaveGroup                                 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一个成员发出 LeaveGroup 请求，主动离开 group")]),s._v("\nremoving member "),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$memberId")]),s._v(" on heartbeat expiration                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 一个成员因为 Heartbeat 超时，被移出 group")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("Rebalance 期间，所有 consumer 都要暂停消费，开销较大。因此应该尽量避免触发 Rebalance ，比如重启 consumer 时。")]),s._v(" "),a("ul",[a("li",[s._v("consumer 重启之后，会发送 JoinGroup 请求重新加入 group ，被分配一个新的 member id ， 触发一次 Rebalance 。\n"),a("ul",[a("li",[s._v("而旧的 member id 不再使用，等到 Heartbeat 超时，又会触发一次 Rebalance 。")])])]),s._v(" "),a("li",[s._v("Kafka v2.3 开始，consumer 增加了配置参数 "),a("code",[s._v("group.instance.id")]),s._v(" 。启用该参数时，consumer 会从默认的 Dynamic Member 变成 Static Member 类型。\n"),a("ul",[a("li",[s._v("consumer 重启之后发送 JoinGroup 请求时，Coordinator 会识别出它是 Static Member ，会分配一个新 UUID ，并删除之前的 member id 。因此不会触发 Rebalance ，除非 Heartbeat 超时。")]),s._v(" "),a("li",[s._v("日志示例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("INFO\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("GroupCoordinator "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": Static member Some"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("static_member_1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" of group test_group_1 with unknown member "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" rejoins, assigning new member "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" static_member_1-cdf1c4ea-2f1c-4f4d-bc46-bf443e5f7322, "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("while")]),s._v(" old member "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v(" static_member_1-8b5d89b3-0757-4441-aeaa-50e7f9f55cee will be removed.\nINFO\t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("GroupCoordinator "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(": Static member "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("which")]),s._v(" joins during Stable stage and doesn't affect selectProtocol will not trigger rebalance.\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])])])])])])])]),s._v(" "),a("h3",{attrs:{id:"zookeeper"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#zookeeper"}},[s._v("#")]),s._v(" Zookeeper")]),s._v(" "),a("ul",[a("li",[s._v("Kafka 采用 Zookeeper 作为分布式框架，记录 broker、topic、consumer 等信息。\n"),a("ul",[a("li",[s._v("每个 broker 启动时，会到 zk 记录自己的 IP 和端口，供其它 broker 发现和访问。")]),s._v(" "),a("li",[s._v("根据 broker.id 识别每个 broker ，即使 IP 和端口变化也会自动发现。")]),s._v(" "),a("li",[s._v("Kafka 集群第一次启动时会生成一个随机的 cluster ID ，保存到 zk 中。\n"),a("ul",[a("li",[s._v("broker 每次连接 zk 时都会检查 cluster ID 是否一致，因此一个 zk 集群不能供多个 Kafka 集群使用。")])])])])]),s._v(" "),a("li",[s._v("Kafka 在 zk 中使用的 znode 示例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("/\n├── admin               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用于传递一些管理命令")]),s._v("\n│   └── delete_topics   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认为 null")]),s._v("\n├── cluster\n│   └── "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("id")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 记录 Kafka 集群的 id")]),s._v("\n├── brokers\n│   ├── ids             "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 记录 broker 的信息。各个 broker 会在其下创建临时节点，当 broker 下线时会被自动删除")]),s._v("\n│   ├── seqid\n│   └── topics          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 记录 topic 的信息")]),s._v("\n├── config\n├── consumers\n├── controller          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 记录当前的 controller ，这是一个临时节点")]),s._v("\n├── controller_epoch    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 记录 controller 当选的 epoch")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("ul",[a("li",[s._v("例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("zk: localhost:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("CONNECTED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" get /brokers/ids/1\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"listener_security_protocol_map"')]),s._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PLAINTEXT"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PLAINTEXT"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"endpoints"')]),s._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"PLAINTEXT://10.0.0.1:9092"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"jmx_port"')]),s._v(":-1,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"features"')]),s._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"host"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10.0.0.1"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"timestamp"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1627960927890"')]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"port"')]),s._v(":9092,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"version"')]),s._v(":5"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("zk: localhost:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("CONNECTED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" get /brokers/topics/__consumer_offsets/partitions/0/state\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"controller_epoch"')]),s._v(":1,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"leader"')]),s._v(":2,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"version"')]),s._v(":1,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"leader_epoch"')]),s._v(":0,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"isr"')]),s._v(":"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2,3")]),s._v(",1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("zk: localhost:2181"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("CONNECTED"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" get /controller\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"version"')]),s._v(":1,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"brokerid"')]),s._v(":1,"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"timestamp"')]),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1627960928034"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])])])])]),s._v(" "),a("h2",{attrs:{id:"消息"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#消息"}},[s._v("#")]),s._v(" 消息")]),s._v(" "),a("ul",[a("li",[s._v("Kafka 处理数据的基本单位为消息（message），又称为 record 。")]),s._v(" "),a("li",[s._v("消息采用 Kafka 自定的格式封装，类似于 TCP 报文。")])]),s._v(" "),a("h3",{attrs:{id:"topic"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#topic"}},[s._v("#")]),s._v(" Topic")]),s._v(" "),a("p",[s._v("：主题，用于在逻辑上对消息分组管理。")]),s._v(" "),a("ul",[a("li",[s._v("不同 topic 之间相互独立，它们的消息互不影响。")])]),s._v(" "),a("h3",{attrs:{id:"partition"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#partition"}},[s._v("#")]),s._v(" Partition")]),s._v(" "),a("p",[s._v("：分区。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("topic 在存储时会拆分成一个或多个 partition 。")]),s._v(" "),a("ul",[a("li",[s._v("每个 partition 可以存储多个副本。")]),s._v(" "),a("li",[s._v("partition 存储到磁盘时，每隔一定时间或大小就划分出一个日志段（LogSegment）文件。")])])]),s._v(" "),a("li",[a("p",[s._v("broker 每收到一条新消息时，先看它属于哪个 topic ，然后考虑分配到哪个 partition 中存储。")]),s._v(" "),a("ul",[a("li",[s._v("Kafka 会尽量将同一 topic 的各个 partition 存储到不同的 broker 上，从而分散负载。")]),s._v(" "),a("li",[s._v("Kafka 会尽量将同一 partition 的各个 replica 存储到不同的 broker 上，从而抵抗单点故障。")]),s._v(" "),a("li",[s._v("客户端只需要连接 broker 就能生产、消费消息，不需要关心消息的实际存储位置。")])])]),s._v(" "),a("li",[a("p",[s._v("Kafka 数据目录的结构如下：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("/data/kafka-logs/                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据日志的存储目录，其下每个子目录的命名格式为 <topic>-<partition id>")]),s._v("\n├── test-0/                           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该目录用于存储 test 主题的 0 号分区")]),s._v("\n│   ├── 00000000000000000000.index    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第一个 LogSegment 的索引文件，其中第一个消息的 offset 为 0")]),s._v("\n│   ├── 00000000000000000000.log      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第一个 LogSegment 的数据日志文件")]),s._v("\n│   ├── 00000000000000367814.index    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 第二个 LogSegment 的索引文件，其中第一个消息的 offset 为 367814")]),s._v("\n│   ├── 00000000000000367814.log\n│   ├── leader-epoch-checkpoint       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 记录每一任 leader 当选时的 epoch 和 offset")]),s._v("\n│   └── partition.metadata\n├── test-2/\n└── test-3/\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("ul",[a("li",[s._v("partition 采用稀疏索引，避免单个索引文件的体积过大。读取某个 offset 的消息时，需要先找到它对应的 LogSegment ，再根据该 LogSegment 的 index 文件找到消息。")])])])]),s._v(" "),a("h3",{attrs:{id:"replica"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#replica"}},[s._v("#")]),s._v(" Replica")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("每个 partition 会存储多个副本（replica），从而备份数据。")])]),s._v(" "),a("li",[a("p",[s._v("Kafka 会自动在每个 partition 的所有副本中选出一个作为 "),a("code",[s._v("leader replica")]),s._v(" ，而其它副本称为 "),a("code",[s._v("follower replica")]),s._v(" 。")]),s._v(" "),a("ul",[a("li",[s._v("leader 可以进行读写操作，负责处理客户端的访问请求。")]),s._v(" "),a("li",[s._v("follower 只能进行读操作，负责与 leader 的数据保持一致，从而备份数据。")]),s._v(" "),a("li",[s._v("客户端读写 partition 时看到的总是 leader ，看不到 follower 。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Assigned Replicas")])]),s._v(" "),a("ul",[a("li",[s._v("：指一个 partition 拥有的所有 replica 。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Preferred replica")])]),s._v(" "),a("ul",[a("li",[s._v("：指 assigned replicas 中的第一个 replica 。")]),s._v(" "),a("li",[s._v("新建一个 partition 时，一般由 preferred replica 担任 leader replica 。\n"),a("ul",[a("li",[s._v("当所在的 broker 故障时，会选出其它 replica 担任 leader 。")]),s._v(" "),a("li",[s._v("当 preferred replica 恢复时，会担任普通的 replica 。但 kafka 会自动尝试让 preferred replica 重新担任 leader ，该过程称为 preferred-replica-election、Partition Rebalance 。")])])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("In Sync Replicas (ISR)")])]),s._v(" "),a("ul",[a("li",[s._v("：指一个 partition 中与 leader 保持同步的所有 replica 。")]),s._v(" "),a("li",[s._v("如果一个 follower 的滞后时间超过 "),a("code",[s._v("replica.lag.time.max.ms")]),s._v(" ，或者 leader 连续这么长时间没有收到该 follower 的 fetch 请求，则认为它失去同步，从 ISR 中移除。\n"),a("ul",[a("li",[s._v("例如：IO 速度过慢，使得 follower 从 leader 复制数据的速度，比 leader 新增数据的速度慢，就会导致 lastCaughtUpTimeMs 一直没有更新，最终失去同步。")])])]),s._v(" "),a("li",[s._v("leader 本身也属于 ISR 。")]),s._v(" "),a("li",[s._v("只有 ISR 中的 replica 可以被选举为 leader 。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Under-replicated Replicas Set")])]),s._v(" "),a("ul",[a("li",[s._v("：指一个 partition 中与 leader 没有同步的 replica 。")]),s._v(" "),a("li",[s._v("当一个 follower 将 leader 的最后一条消息（Log End Offset）之前的日志全部成功复制之后，则认为该 follower 已经赶上了 leader ，记录此时的时刻作为该 follower 的 "),a("code",[s._v("lastCaughtUpTimeMs")]),s._v(" 。")]),s._v(" "),a("li",[s._v("Kafka 的 ReplicaManager 会定期计算每个 follower 的 lastCaughtUpTimeMs 与当前时刻的差值，作为该 follower 对 leader 的滞后时间。")])])])]),s._v(" "),a("h3",{attrs:{id:"offset"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#offset"}},[s._v("#")]),s._v(" Offset")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("partition 中存储的每个消息都有一个唯一的偏移量（offset），用于索引。")]),s._v(" "),a("ul",[a("li",[s._v("offset 的值采用 Long 型变量存储，容量为 64 bit 。")]),s._v(" "),a("li",[s._v("生产者生产消息时、消费者消费消息时，offset 都会自动递增。\n"),a("ul",[a("li",[s._v("因此，partition 类似于先入先出的队列，先生产的消息会先被消费。")])])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Log Start Offset")])]),s._v(" "),a("ul",[a("li",[s._v("：partition 中第一个消息的偏移量。刚创建一个 topic 时，该值为 0 。每次 broker 清理消息日志之后，该值会增大一截。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Log End Offset (LEO)")])]),s._v(" "),a("ul",[a("li",[s._v("：partition 中最新一个消息的偏移量。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("High Watemark (HW)")])]),s._v(" "),a("ul",[a("li",[s._v("：partition 允许被 consumer 看到的最高偏移量。")]),s._v(" "),a("li",[s._v("partition 的 leader 新增一个消息时，会更新 LEO 的值，并传给 follower 进行同步。因此 HW 的值总是小于等于 LEO 。")]),s._v(" "),a("li",[s._v("consumer 只能看到 HW ，不知道 LEO 的值。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Consumer Committed Offset")])]),s._v(" "),a("ul",[a("li",[s._v("：某个 consumer 在某个 partition 中最后一次消费的消息的偏移量。")]),s._v(" "),a("li",[s._v("它由 Coordinator 记录，可以保证在 Rebalance 之后 consumer 不会重复消费。")]),s._v(" "),a("li",[s._v("Kafka 能确保一个消息成功生产，但不能确保消息被消费，需要客户端主动更新 Committed Offset 。")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Consumer Current Offset")])]),s._v(" "),a("ul",[a("li",[s._v("：某个 consumer 在某个 partition 中下一次希望消费的消息的偏移量。")]),s._v(" "),a("li",[s._v("它由 consumer 自己记录，可以保证在多次调用 poll() 方法时不会重复消费。\n"),a("ul",[a("li",[s._v("如果记录的 offset 偏小，就会重复消费。如果记录的 offset 偏大，就会遗漏消费。")])])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("Consumer Lag")])]),s._v(" "),a("ul",[a("li",[s._v("：consumer 在消费某个 partition 时的滞后量，即还有多少个消息未消费。")]),s._v(" "),a("li",[s._v("它的值等于 "),a("code",[s._v("HW - Consumer Committed Offset")]),s._v(" 。")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);