(window.webpackJsonp=window.webpackJsonp||[]).push([[271],{1064:function(a,s,t){"use strict";t.r(s);var e=t(1),n=Object(e.a)({},(function(){var a=this,s=a.$createElement,t=a._self._c||s;return t("ContentSlotsDistributor",{attrs:{"slot-key":a.$parent.slotKey}},[t("p",[a._v("请注意，"),t("code",[a._v("docker run")]),a._v(" 命令的名称有点误导，因为它会创建一个容器，而不是仅仅启动它，这会导致在停止容器而不删除容器后使用 "),t("code",[a._v("docker run")]),a._v(" 时发生冲突。有关简单的开始，请参见下文。")]),a._v(" "),t("h2",{attrs:{id:"创建容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#创建容器"}},[a._v("#")]),a._v(" 创建容器")]),a._v(" "),t("p",[a._v("持久化数据存储在容器内部的/data下，因此使用Docker进行持久化部署的唯一要求是在路径上挂载持久化卷：")]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用 Docker：")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run -d --name vaultwarden -v /vw-data/:/data/ -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(":80 vaultwarden/server:latest\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用 Podman 作为非 root：")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" run -d --name vaultwarden -v /vw-data/:/data/:Z -e "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a._v("ROCKET_PORT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(" -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("8080")]),a._v(":8080 vaultwarden/server:latest\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用 Podman 作为 root：")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("sudo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("podman")]),a._v(" run -d --name vaultwarden -v vw-data:/data/:Z -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("80")]),a._v(":80 vaultwarden/server:latest\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br"),t("span",{staticClass:"line-number"},[a._v("6")]),t("br")])]),t("p",[a._v("这将保留 "),t("code",[a._v("/vw-data/")]),a._v(" 下的任何持久数据，您可以将路径调整为适合您的任何内容。")]),a._v(" "),t("p",[a._v("该服务将在主机端口 80 或 8080 上公开。")]),a._v(" "),t("p",[a._v("对于非 x86 硬件或运行特定版本，您可以"),t("RouterLink",{attrs:{to:"/vaultwarden/Container/Which-container-image-to-use.html"}},[a._v("使用哪个容器镜像")]),a._v("。")],1),a._v(" "),t("p",[a._v("如果您的 docker/vaultwarden 在具有固定 IP 的设备上运行，您可以将主机端口绑定到该特定 IP，从而防止将主机端口暴露给整个世界或网络。在host-port和container-port前面添加IP地址(例如192.168.0.2)如下：")]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# 使用 Docker:")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run -d --name vaultwarden -v /vw-data/:/data/ -p "),t("span",{pre:!0,attrs:{class:"token number"}},[a._v("192.168")]),a._v(".0.2:80:80 vaultwarden/server:latest\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br")])]),t("h2",{attrs:{id:"启动容器"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#启动容器"}},[a._v("#")]),a._v(" 启动容器")]),a._v(" "),t("p",[a._v("如果容器已被"),t("code",[a._v("docker stop vaultwarden")]),a._v("、重启或任何其他原因停止，您可以使用以下命令重新启动它。")]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" start vaultwarden\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("h2",{attrs:{id:"自定义容器启动"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#自定义容器启动"}},[a._v("#")]),a._v(" 自定义容器启动")]),a._v(" "),t("p",[a._v("如果您想在容器启动时运行自定义启动脚本，您可以将单个脚本作为 "),t("code",[a._v("/etc/vaultwarden.sh")]),a._v(" 和/或脚本目录安装到容器中作为 "),t("code",[a._v("/etc/vaultwardend")]),a._v("。在后一种情况下，只运行带有"),t("code",[a._v(".sh")]),a._v("扩展名的文件，因此带有其他扩展名的文件(例如，数据/配置文件)可以驻留在同一个目录中。 (请参阅 "),t("a",{attrs:{href:"https://github.com/dani-garcia/vaultwarden/blob/master/docker/start.sh",target:"_blank",rel:"noopener noreferrer"}},[a._v("start.sh"),t("OutboundLink")],1),a._v("了解其工作原理的详细信息。)")]),a._v(" "),t("p",[a._v("自定义启动脚本可用于修补 Web Vault 文件或安装附加包、CA 证书等，而无需构建和维护您自己的 Docker 映像。")]),a._v(" "),t("h3",{attrs:{id:"例子"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#例子"}},[a._v("#")]),a._v(" 例子")]),a._v(" "),t("p",[a._v("假设您的脚本名为 "),t("code",[a._v("init.sh")]),a._v(" 并包含以下内容：")]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("echo")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[a._v('"starting up"')]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("您可以像这样在启动时运行脚本：")]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" run -d --name vaultwarden -v "),t("span",{pre:!0,attrs:{class:"token variable"}},[t("span",{pre:!0,attrs:{class:"token variable"}},[a._v("$(")]),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[a._v("pwd")]),t("span",{pre:!0,attrs:{class:"token variable"}},[a._v(")")])]),a._v("/init.sh:/etc/vaultwarden.sh "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("<")]),a._v("other "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("docker")]),a._v(" args"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("..")]),a._v("."),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v(">")]),a._v(" vaultwarden/server:latest\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br")])]),t("p",[a._v("如果你运行 "),t("code",[a._v("docker logs vaultwarden")]),a._v("，你现在应该看到 "),t("code",[a._v("starting up")]),a._v(" 作为输出的第一行。")]),a._v(" "),t("p",[a._v("请注意，每次容器启动时都会运行 init 脚本(不仅仅是第一次)，因此这些脚本通常应该是幂等的(即，您可以多次运行脚本而不会出现不良/错误行为)。如果您的脚本自然没有此属性，您可以执行以下操作：")]),a._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("if")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("[")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[a._v("!")]),a._v(" -e /.init "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[a._v(";")]),a._v(" "),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("then")]),a._v("\n  "),t("span",{pre:!0,attrs:{class:"token function"}},[a._v("touch")]),a._v(" /.init\n\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[a._v("# run your init steps...")]),a._v("\n"),t("span",{pre:!0,attrs:{class:"token keyword"}},[a._v("fi")]),a._v("\n")])]),a._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[a._v("1")]),t("br"),t("span",{staticClass:"line-number"},[a._v("2")]),t("br"),t("span",{staticClass:"line-number"},[a._v("3")]),t("br"),t("span",{staticClass:"line-number"},[a._v("4")]),t("br"),t("span",{staticClass:"line-number"},[a._v("5")]),t("br")])])])}),[],!1,null,null,null);s.default=n.exports}}]);