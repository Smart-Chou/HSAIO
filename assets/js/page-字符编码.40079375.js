(window.webpackJsonp=window.webpackJsonp||[]).push([[288],{833:function(s,t,a){"use strict";a.r(t);var e=a(1),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"字符编码"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#字符编码"}},[s._v("#")]),s._v(" 字符编码")]),s._v(" "),a("ul",[a("li",[s._v("字符编码（Text Encoding）：指将一个字符转换成其它字符，类似于转义字符的转码。\n"),a("ul",[a("li",[s._v("常用于过滤掉某些不能直接处理的字符。\n"),a("ul",[a("li",[s._v("比如在 URL 中不支持传输汉字，要转换成 URLencode 编码的字符。")])])])])])]),s._v(" "),a("h2",{attrs:{id:"bcd"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bcd"}},[s._v("#")]),s._v(" BCD")]),s._v(" "),a("p",[s._v("：Binary-Coded Decimal‎（二进码十进数），是用 4 位二进制数表示一个十进制数 0~9 。")]),s._v(" "),a("ul",[a("li",[s._v("BCD 码常用于浮点数运算，可以保持数值的精度、减少运算耗时。")]),s._v(" "),a("li",[s._v("BCD 码分为多种类型，其中最常使用的是 8421BCD 码，它规定 4 位二进制数的位权分别为 8、4、2、1 。\n"),a("ul",[a("li",[s._v("例如 0010 表示 2 ，1001 表示 9 。")])])])]),s._v(" "),a("h2",{attrs:{id:"urlencode"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#urlencode"}},[s._v("#")]),s._v(" URLencode")]),s._v(" "),a("p",[s._v("：URL 编码，又称为百分号编码（Percent-encoding）。用于将 ASCII 编码的字符串转换成 URL 格式，并将 URL 中不允许使用的字符转码。")]),s._v(" "),a("ul",[a("li",[s._v("Python 的标准库 urllib 提供了 URLencode 的方法。")])]),s._v(" "),a("p",[s._v("原理：")]),s._v(" "),a("ol",[a("li",[s._v("将字符串转换成 ASCII 编码。")]),s._v(" "),a("li",[s._v("将字符串中的每对键值对参数用 = 连接、键值对之间用 & 分隔。")]),s._v(" "),a("li",[s._v("根据 RFC 3986 规范进行转码：\n"),a("ul",[a("li",[s._v("URL 中只允许包含以下字符：\n"),a("ul",[a("li",[s._v("数字 "),a("code",[s._v("0-9")])]),s._v(" "),a("li",[s._v("英文字母 "),a("code",[s._v("A-Za-z")])]),s._v(" "),a("li",[s._v("4 个特殊字符 "),a("code",[s._v("-_.~")])]),s._v(" "),a("li",[s._v("保留字符 "),a("code",[s._v("!*'();:@&=+$,/?#[]")]),s._v(" 。它们用于构成语法，用户也不应该直接使用。")])])]),s._v(" "),a("li",[s._v("其它字符不能直接使用，要转换成百分号 % 加两位 16 进制编码。比如空格转换成 %20 ，! 转换成 %21 。")])])])]),s._v(" "),a("h2",{attrs:{id:"base64"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#base64"}},[s._v("#")]),s._v(" Base64")]),s._v(" "),a("p",[s._v("：用于将二进制编码的字符串转换成由最多 64 种字符组成。")]),s._v(" "),a("p",[s._v("原理：")]),s._v(" "),a("ol",[a("li",[a("p",[s._v("准备一个包含 64 种字符的索引表。比如：")]),s._v(" "),a("table",[a("thead",[a("tr",[a("th",[s._v("索引")]),s._v(" "),a("th",[s._v("字符")])])]),s._v(" "),a("tbody",[a("tr",[a("td",[s._v("0")]),s._v(" "),a("td",[s._v("A")])]),s._v(" "),a("tr",[a("td",[s._v("1")]),s._v(" "),a("td",[s._v("B")])]),s._v(" "),a("tr",[a("td",[s._v("2")]),s._v(" "),a("td",[s._v("C")])]),s._v(" "),a("tr",[a("td",[s._v("3")]),s._v(" "),a("td",[s._v("D")])]),s._v(" "),a("tr",[a("td",[s._v("4")]),s._v(" "),a("td",[s._v("E")])]),s._v(" "),a("tr",[a("td",[s._v("...")]),s._v(" "),a("td",[s._v("...")])])])])]),s._v(" "),a("li",[a("p",[s._v("将字符串转换成二进制编码。")])]),s._v(" "),a("li",[a("p",[s._v("从原数据中取出 3 个字节，拆分成 4 组，每组 6 个 bit 。")])]),s._v(" "),a("li",[a("p",[s._v("将每组的二进制值作为索引，转换成索引表中的对应字符。")])]),s._v(" "),a("li",[a("p",[s._v("重复 3-4 步骤，转换原数据的全部内容，组成一个字符串。")]),s._v(" "),a("ul",[a("li",[s._v("如果最后一次只取出 1 个字节，则末尾补上 4 bit 的 0 ，得到 2 组。再加上 2 个等号 = 补成 4 组。")]),s._v(" "),a("li",[s._v("如果最后一次只取出 2 个字节，则末尾补上 2 bit 的 0 ，得到 3 组。再加上 1 个等号 = 补成 4 组。")])])])]),s._v(" "),a("ul",[a("li",[s._v("标准的 Base64 索引表包含了 26 个大写字母 "),a("code",[s._v("A-Z")]),s._v(" 、26 个小写字母 "),a("code",[s._v("a-z")]),s._v(" 、10 个数字 "),a("code",[s._v("0-9")]),s._v(" 、2 个特殊字符 "),a("code",[s._v("+/")]),s._v(" ，主要用于转义非 ASCII 字符、不可打印的 ASCII 字符。")]),s._v(" "),a("li",[s._v("例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("取 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" 个字节：         A, B, C\n二进制编码为：        0100 0001 , 0100 0010 , 0100 0011\n拆分成 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(" 组之后为：   010000    , 010100    , 001001    , 000011\n十进制值为：          "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("20")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9")]),s._v(", "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("\n转换成索引表中的字符： Q , U, J, D\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"quoted-printable"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#quoted-printable"}},[s._v("#")]),s._v(" Quoted-printable")]),s._v(" "),a("p",[s._v("：可打印字符引用编码。用于将 ASCII 编码的字符串转换成只剩可打印字符。")]),s._v(" "),a("ul",[a("li",[s._v("常用于编码邮件内容。")])]),s._v(" "),a("p",[s._v("原理：")]),s._v(" "),a("ol",[a("li",[s._v("将字符串转换成 ASCII 编码。")]),s._v(" "),a("li",[s._v("将字符串中的每个非可打印字符，用两个十六进制数表示，并加上等号 = 作为前缀。\n"),a("ul",[a("li",[s._v("比如 "),a("code",[s._v("=")]),s._v(" 要转换成 "),a("code",[s._v("=3D")]),s._v(" 。")]),s._v(" "),a("li",[s._v("每行字符串的末尾加上 = 作为分行符。")]),s._v(" "),a("li",[s._v("每行字符串最多包含 76 个字符。")])])])]),s._v(" "),a("h2",{attrs:{id:"♢-base64"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#♢-base64"}},[s._v("#")]),s._v(" ♢ base64")]),s._v(" "),a("p",[s._v("：Python 的标准库，提供了 Base64 格式的编码、解码方法。")]),s._v(" "),a("ul",[a("li",[s._v("用法示例："),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" base64\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" base64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b64encode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'hello'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("encode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 先从 str 类型转换成 bytes 类型，再转换成 Base64 编码的 bytes 类型")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("b'aGVsbG8='")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" base64"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("b64decode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("b'hello'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"♢-quopri"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#♢-quopri"}},[s._v("#")]),s._v(" ♢ quopri")]),s._v(" "),a("p",[s._v("：Python 的标准库，提供了 Quoted-printable 格式的编码、解码方法。")]),s._v(" "),a("ul",[a("li",[s._v("用法示例："),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" quopri\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" quopri"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("encodestring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("b'hello world!==\\r\\n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("b'hello world!=3D=3D\\r\\n'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">>")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" quopri"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("decodestring"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("b'hello world!=3D=3D\\r\\n'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("b'hello world!==\\r\\n'")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])])])])}),[],!1,null,null,null);t.default=n.exports}}]);