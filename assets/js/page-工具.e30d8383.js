(window.webpackJsonp=window.webpackJsonp||[]).push([[74],{665:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"工具"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工具"}},[s._v("#")]),s._v(" 工具")]),s._v(" "),a("h2",{attrs:{id:"shell-脚本"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shell-脚本"}},[s._v("#")]),s._v(" shell 脚本")]),s._v(" "),a("p",[s._v("kafka 的 bin 目录下自带了多个 shell 脚本，可用于管理 Kafka 。")]),s._v(" "),a("ul",[a("li",[a("p",[a("code",[s._v("kafka-server-stop.sh")]),s._v(" 用于停止 broker 进程。")]),s._v(" "),a("ul",[a("li",[s._v("它会查找本机上的所有 broker 进程，发送 SIGTERM 信号。\n"),a("ul",[a("li",[s._v("broker 进程收到终止信号后，会将所有数据保存到磁盘中，才退出，该过程需要几秒甚至几十秒。")])])]),s._v(" "),a("li",[s._v("如果强制杀死 broker 进程，可能导致数据丢失。重启时会发出警告："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("WARN  Found a corrupted index file, xxxx/0000000000000000xxxx.index, deleting and rebuilding index"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("kafka.log.Log"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("kafka-topics.sh")]),s._v(" 用于管理 topic 。")]),s._v(" "),a("ul",[a("li",[s._v("例：连接到 zk ，查询 topic 列表。"),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("bin/kafka-topics.sh  --zookeeper localhost:2181  --list\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[s._v("例：连接到 zk ，请求创建 topic ，并指定分区数、每个分区的副本数。"),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("bin/kafka-topics.sh "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --zookeeper localhost:2181 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --create "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --topic topic_1 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --partitions "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --replication-factor "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[s._v("例：连接到 zk ，请求删除 topic 。"),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("bin/kafka-topics.sh "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --zookeeper localhost:2181 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --delete "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --topic topic_1\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("这里将 --delete 选项改为 --describe ，就是查询 topic 的状态。")])])])])]),s._v(" "),a("li",[a("p",[s._v("运行生产者终端，从 stdin 读取消息并发送到 broker ：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("bin/kafka-console-producer.sh "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --broker-list localhost:9092 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --topic topic_1\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --producer.config config/producer.properties")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("运行消费者终端，读取消息并输出到 stdout ：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("bin/kafka-console-consumer.sh "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --bootstrap-server localhost:9092 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --topic topic_1\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --group group_1     # 指定 consumer group 的 ID ，不指定则随机生成")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --from-beginning    # 从第一条消息开始消费")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --consumer.config config/consumer.properties")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("运行生产者的性能测试：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("bin/kafka-producer-perf-test.sh\n    --producer.config config/producer.properties\n    --topic topic_1\n    --num-records "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 发送多少条消息")]),s._v("\n    --record-size "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1024")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每条消息的大小")]),s._v("\n    --throughput "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 限制每秒种发送的消息数")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("code",[s._v("kafka-consumer-groups.sh")]),s._v(" 用于管理消费组。用法：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("bin/kafka-consumer-groups.sh --bootstrap-server "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.1")]),s._v(".6.151:9092\n    --list            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 列出所有消费组")]),s._v("\n\n    --group "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定消费组。可多次使用该参数，也可用 --all-groups 指定所有")]),s._v("\n      --delete        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除消费组，这会删除其所有 offset")]),s._v("\n      --describe\n        --members     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看所有成员")]),s._v("\n        --offsets     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看对各个 topic partition 的 Committed Offset")]),s._v("\n\n      --topic "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定一个 topic 。可多次使用该参数，也可用 --all-topics 指定所有")]),s._v("\n        --delete-offsets            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除 offset")]),s._v("\n        --execute --reset-offsets   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 调整对某个 topic 的 offset")]),s._v("\n          --to-offset "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n          --to-earliest\n          --to-latest\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("ul",[a("li",[s._v("当一个消费组的所有成员都停止运行时，才支持修改 offset 。")]),s._v(" "),a("li",[s._v("如果一个消费组停止运行，则超过 log.retention.hours 时间之后 Kafka 会从 __consumer_offsets 中删除其 offset 记录。")]),s._v(" "),a("li",[s._v("如果一个消费组取消订阅某个 topic ，则 Kafka 依然会在 __consumer_offsets 中记录旧订阅的 offset 。除非主动删除 group 或 offset 。")])])]),s._v(" "),a("li",[a("p",[s._v("给 Kafka 集群新增 broker 之后，可能被自动用于存储新创建的 topic ，但不会影响已有的 topic 。可以采取以下两种措施：")]),s._v(" "),a("ul",[a("li",[s._v("使用 "),a("code",[s._v("kafka-reassign-partitions.sh")]),s._v(" 脚本，将指定 topic 的所有分区迁移到指定 broker 上。")]),s._v(" "),a("li",[s._v("使用 Kafka Manager ，在网页上迁移 topic ，更方便。")])])])]),s._v(" "),a("h2",{attrs:{id:"kafka-manager"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kafka-manager"}},[s._v("#")]),s._v(" Kafka Manager")]),s._v(" "),a("p",[s._v("：一个 Web 服务器，用于管理 Kafka 。")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/yahoo/CMAK",target:"_blank",rel:"noopener noreferrer"}},[s._v("GitHub"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("主要用于监控、管理 topic、partition ，不支持查看 Kafka 消息。")]),s._v(" "),a("li",[s._v("由 Yahoo 公司开源，采用 Java 开发。")]),s._v(" "),a("li",[s._v("2020 年，发布 v3 版本。为了避免与 Kafka 版权冲突而改名为 Cluster Manager for Apache Kafka ，简称为 CMAK 。")])]),s._v(" "),a("h3",{attrs:{id:"部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[s._v("#")]),s._v(" 部署")]),s._v(" "),a("ul",[a("li",[s._v("用 docker-compose 部署："),a("div",{staticClass:"language-yml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-yml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kafka-manager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" kafka"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("manager\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" kafkamanager/kafka"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("manager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("3.0.0.4\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" unless"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("stopped\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 9000"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("9000")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ZK_HOSTS")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10.0.0.1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2181")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# JAVA_OPTS: -Xmx1g -Xms1g -Djava.security.auth.login.config=/opt/jaas.conf")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("ul",[a("li",[s._v("Kafka Manager 本身需要使用一个 zk 集群存储数据。")])])])]),s._v(" "),a("h3",{attrs:{id:"用法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#用法"}},[s._v("#")]),s._v(" 用法")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("访问 Kafka Manager 的 Web 页面，即可创建一个 Cluster ，表示 Kafka 集群。")]),s._v(" "),a("ul",[a("li",[s._v("需要指定该 Kafka 集群对应的 zk 集群的地址。")]),s._v(" "),a("li",[s._v('可以勾选 "JMX Polling" ，连接到 Kafka 的 JMX 端口，监控消息的传输速度。')]),s._v(" "),a("li",[s._v('可以勾选 "Poll consumer information"，监控消费者的 offset 。')])])]),s._v(" "),a("li",[a("p",[s._v("支持查看、创建、配置 topic、partition 。")]),s._v(" "),a("ul",[a("li",[s._v("topic 的统计信息示例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("Replication                 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每个分区的的副本数")]),s._v("\nNumber of Partitions        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该 topic 的分区数")]),s._v("\nSum of partition offsets    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\nTotal number of Brokers     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Kafka 集群存在的 Broker 数")]),s._v("\nNumber of Brokers "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" Topic "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该 topic 存储时占用的 Broker 数")]),s._v("\nPreferred Replicas %        "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Leader replica 为 Preferred replica 的分区，所占百分比")]),s._v("\nBrokers Skewed %            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 存储的副本过多的 Broker 所占百分比")]),s._v("\nBrokers Leader Skewed %     "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 存储的 Leader replica 过多的 Broker 所占百分比")]),s._v("\nBrokers Spread %            "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("66")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该 topic 占用的 Kafka 集群的 Broker 百分比，这里等于 2/3 * 100%")]),s._v("\nUnder-replicated %          "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 存在未同步副本的那些分区，所占百分比")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])]),a("ul",[a("li",[s._v("上例中的 topic 总共有 3×3 个副本，占用 2 个 Broker 。为了负载均衡，每个 Broker 应该存储 3×3÷2 个副本，取整后可以为 4 或 5 。如果某个 Broker 实际存储的副本数超过该值，则视作 Skewed 。")])])]),s._v(" "),a("li",[s._v("Broker 的统计信息示例："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("Broker      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# of Partitions     # as Leader     Partitions    Skewed?     Leader Skewed?")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,1")]),s._v(",2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,1")]),s._v(",2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("           "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("                   "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0,1")]),s._v(",2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("       "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),s._v("每行表示一个 Broker 的信息，各列分别表示该 Broker 的：\n"),a("ul",[a("li",[s._v("ID")]),s._v(" "),a("li",[s._v("存储的分区副本数")]),s._v(" "),a("li",[s._v("存储的 Leader replica 数")]),s._v(" "),a("li",[s._v("存储的各个分区 ID")]),s._v(" "),a("li",[s._v("存储的副本是否过多")]),s._v(" "),a("li",[s._v("存储的 Leader replica 是否过多")])])])])]),s._v(" "),a("li",[a("p",[s._v("支持 preferred-replica-election 。")])]),s._v(" "),a("li",[a("p",[s._v("支持 Reassign Partitions 。用法如下：")]),s._v(" "),a("ol",[a("li",[s._v("在 topic 详情页面，点击 "),a("code",[s._v("Generate Partition Assignments")]),s._v(" ，设置允许该 topic 分配到哪些 broker 上的策略。")]),s._v(" "),a("li",[s._v("点击 "),a("code",[s._v("Run Partition Assignments")]),s._v(" ，执行自动分配的策略。")])]),s._v(" "),a("ul",[a("li",[s._v("如果不满足策略，则自动迁移 replica 到指定的 broker 上，并重新选举 leader 。\n"),a("ul",[a("li",[s._v("迁移 replica 时会导致客户端短暂无法访问。")]),s._v(" "),a("li",[s._v("同时迁移多个 replica 时，可能负载过大，导致 Kafka broker 卡死。")])])]),s._v(" "),a("li",[s._v("如果已满足策略，则不会进行迁移。因此该操作具有幂等性。")]),s._v(" "),a("li",[s._v("也可以点击 "),a("code",[s._v("Manual Partition Assignments")]),s._v(" ，进行手动分配。")])]),s._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[s._v("到菜单栏的 "),a("code",[s._v("Reassign Partitions")]),s._v(" 页面，查看正在执行的分配操作。")])])])]),s._v(" "),a("h2",{attrs:{id:"kafka-eagle"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kafka-eagle"}},[s._v("#")]),s._v(" Kafka Eagle")]),s._v(" "),a("p",[s._v("：一个 Web 服务器，用于 管理 Kafka 。")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/smartloli/kafka-eagle",target:"_blank",rel:"noopener noreferrer"}},[s._v("GitHub"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("与 Kafka Manager 相比，多了查询消息、生产消息、配置告警的功能，但缺少关于 Preferred Replica 的功能。")]),s._v(" "),a("li",[s._v("采用 Java 开发，占用大概 1G 内存。")])]),s._v(" "),a("h2",{attrs:{id:"kowl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#kowl"}},[s._v("#")]),s._v(" Kowl")]),s._v(" "),a("p",[s._v("：一个 Web 服务器，用于 管理 Kafka 。")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/cloudhut/kowl",target:"_blank",rel:"noopener noreferrer"}},[s._v("GitHub"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("与 Kafka Manager 相比，页面更整洁，多了查看 topic 体积、查看消息内容、查看 consumer 详情的功能。但缺少 Brokers Skewed 等负载均衡的功能。")]),s._v(" "),a("li",[s._v("采用 Golang 开发，只占用几十 MB 内存。")]),s._v(" "),a("li",[s._v("用 Docker 部署："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d --name kowl -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("8080")]),s._v(":8080 -e "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KAFKA_BROKERS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.1:9092 quay.io/cloudhut/kowl:v1.4.0\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"offset-explorer"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#offset-explorer"}},[s._v("#")]),s._v(" Offset Explorer")]),s._v(" "),a("p",[s._v("：旧名为 Kafka Tool ，是一个 GUI 工具，可用作 Kafka 客户端。")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://www.kafkatool.com/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官网"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("支持查看、管理 topic ，支持查看消息、生产消息，缺少关于监控的功能。")])]),s._v(" "),a("h2",{attrs:{id:"♢-kafka-python"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#♢-kafka-python"}},[s._v("#")]),s._v(" ♢ kafka-python")]),s._v(" "),a("p",[s._v("：Python 的第三方库，提供了 Kafka 客户端的功能。")]),s._v(" "),a("ul",[a("li",[a("p",[a("a",{attrs:{href:"https://kafka-python.readthedocs.io/en/master/index.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),a("OutboundLink")],1)])]),s._v(" "),a("li",[a("p",[s._v("安装："),a("code",[s._v("pip install kafka-python")])])]),s._v(" "),a("li",[a("p",[s._v("例：生产消息")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" kafka "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" KafkaProducer\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个 Producer ，连接到 broker")]),s._v("\nproducer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" KafkaProducer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("bootstrap_servers"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'localhost:9092'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生产一个消息到指定的 topic")]),s._v("\nmsg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'Hello'")]),s._v("\nfuture "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" producer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("send"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'topic_1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n                       value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("encode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 消息的内容，必须为 bytes 类型")]),s._v("\n                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# partition=None,    # 指定分区。默认为 None ，会自动分配一个分区")]),s._v("\n                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# key=None,          # 指定 key ，bytes 类型。用于根据 key 的哈希值分配一个分区，比如相同 key 的消息总是分配到相同分区")]),s._v("\n                      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("try")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    metadata "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" future"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("get"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 等待服务器的回复")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("except")]),s._v(" Exception "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("as")]),s._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("str")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'sent: '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'offset: '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" metadata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("offset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'topic: '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("  metadata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("topic"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'partition: '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" metadata"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("partition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("例：消费消息")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" kafka "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" KafkaConsumer\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建一个 Consumer ，连接到 broker ，订阅指定的 topic")]),s._v("\nconsumer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" KafkaConsumer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'topic_1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" bootstrap_servers"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'localhost:9092'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Consumer 对象支持迭代。默认从最新 offset 处开始迭代，没有收到消息时会一直阻塞等待，除非设置了 consumer_timeout_ms")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("for")]),s._v(" msg "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("in")]),s._v(" consumer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'got: '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("decode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("print")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'offset: '")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" msg"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("offset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br")])]),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" kafka "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" TopicPartition\n\nconsumer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("subscribe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'topic_1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nconsumer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("seek"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TopicPartition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'topic_1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" partition"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 调整消费的 offset")]),s._v("\nconsumer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("seek_to_beginning"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("TopicPartition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("topic"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'topic_1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" partition"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nmsg_set "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" consumer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("poll"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("max_records"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("KafkaConsumer 的定义：")]),s._v(" "),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[s._v("KafkaConsumer")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("six"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("__init__")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("topics"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("**")]),s._v("configs"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v("\"\"\" 先输入要消费的 topics 。可用的 configs 参数如下：\n        # 关于 broker\n        bootstrap_servers='localhost',  # 可以指定一个列表，例如 ['10.0.0.1:9092', '10.0.0.2:9092']\n\n        # 关于 SASL 认证\n        sasl_mechanism='PLAIN',\n        security_protocol='SASL_PLAINTEXT',\n        sasl_plain_username='admin',\n        sasl_plain_password='******',\n\n        # 关于客户端\n        client_id='client_1',           # 客户端的名称，默认为 kafka-python-$version\n        group_id='group_1',             # 消费者组的名称，默认为 None ，即不加入消费者组\n        consumer_timeout_ms=5000,       # 迭代消息时，持续一定时长未收到新消息则结束迭代。默认无限制\n        \"\"\"")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("assign")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" partitions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('""" 主动分配当前 consumer 消费的 TopicPartition 。\n        此时不会被 Coordinator 处理，不会触发 Rebalance 。但不能与 subscribe() 同时使用，否则报错。\n        例： consumer.assign([TopicPartition(topic=\'topic_1\', partition=0), TopicPartition(topic=\'topic_1\', partition=1)])\n        """')]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("assignment")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('""" 返回一个集合，包含当前 consumer 被分配的所有 TopicPartition """')]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("close")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" autocommit"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('""" 关闭 consumer """')]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("commit")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" offsets"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('""" 提交 offsets 。这会阻塞 consumer 直到成功提交 """')]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("committed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" partition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" metadata"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("False")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('""" 返回指定 TopicPartition 的 Committed Offset """')]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("commit_async")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" offsets"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" callback"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('""" 异步地提交 offsets """')]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("poll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" timeout_ms"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" max_records"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" update_offsets"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("True")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('""" 从当前 consumer 被分配的 partition 拉取消息，组成一个集合并返回。\n        update_offsets：是否自动递增 offset 以便下一次拉取。\n        """')]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("seek")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" partition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" offset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('""" 调整当前消费的 offset ，用于下一次 poll """')]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("seek_to_beginning")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("partitions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('""" 将 offset 调整到可见的最老 offset """')]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("seek_to_end")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v("partitions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('""" 将 offset 调整到可见的最新 offset """')]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" topics"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" pattern"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" listener"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("None")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('""" 订阅一组 topics ，或者订阅与正则表达式匹配的 topics ，这会自动分配 TopicPartition 。\n        不支持增加订阅，新的订阅列表会覆盖旧的订阅列表。\n        可以订阅不存在的 topic ，此时不会被分配 partition ，调用 poll() 的结果为空集合 。\n        """')]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("subscription")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('""" 返回一个集合，包含当前 consumer 订阅的所有 topic 的名称 """')]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("unsubscribe")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("self"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token triple-quoted-string string"}},[s._v('""" 取消订阅的所有 topics """')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br"),a("span",{staticClass:"line-number"},[s._v("44")]),a("br"),a("span",{staticClass:"line-number"},[s._v("45")]),a("br"),a("span",{staticClass:"line-number"},[s._v("46")]),a("br"),a("span",{staticClass:"line-number"},[s._v("47")]),a("br"),a("span",{staticClass:"line-number"},[s._v("48")]),a("br"),a("span",{staticClass:"line-number"},[s._v("49")]),a("br"),a("span",{staticClass:"line-number"},[s._v("50")]),a("br"),a("span",{staticClass:"line-number"},[s._v("51")]),a("br"),a("span",{staticClass:"line-number"},[s._v("52")]),a("br"),a("span",{staticClass:"line-number"},[s._v("53")]),a("br"),a("span",{staticClass:"line-number"},[s._v("54")]),a("br"),a("span",{staticClass:"line-number"},[s._v("55")]),a("br"),a("span",{staticClass:"line-number"},[s._v("56")]),a("br"),a("span",{staticClass:"line-number"},[s._v("57")]),a("br"),a("span",{staticClass:"line-number"},[s._v("58")]),a("br"),a("span",{staticClass:"line-number"},[s._v("59")]),a("br"),a("span",{staticClass:"line-number"},[s._v("60")]),a("br"),a("span",{staticClass:"line-number"},[s._v("61")]),a("br"),a("span",{staticClass:"line-number"},[s._v("62")]),a("br"),a("span",{staticClass:"line-number"},[s._v("63")]),a("br"),a("span",{staticClass:"line-number"},[s._v("64")]),a("br"),a("span",{staticClass:"line-number"},[s._v("65")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"♢-confluent-kafka"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#♢-confluent-kafka"}},[s._v("#")]),s._v(" ♢ confluent-kafka")]),s._v(" "),a("p",[s._v("：Python 的第三方库，提供了 Kafka 客户端的功能，比 kafka-python 的功能更多。")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://github.com/confluentinc/confluent-kafka-python",target:"_blank",rel:"noopener noreferrer"}},[s._v("GitHub"),a("OutboundLink")],1)]),s._v(" "),a("li",[s._v("安装："),a("code",[s._v("pip install confluent-kafka")])]),s._v(" "),a("li",[s._v("例：消费消息"),a("div",{staticClass:"language-py line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-py"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" confluent_kafka "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("import")]),s._v(" Consumer\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建消费者，传入配置参数，兼容 Kafka 原生的 properties")]),s._v("\nconsumer "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" Consumer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'bootstrap.servers'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'10.0.0.1,10.0.0.2,10.0.0.3'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'group.id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'test_group_1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'group.instance.id'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'static_member_1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'auto.offset.reset'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'earliest'")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\nconsumer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("subscribe"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'topic_1'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\nmsg "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" consumer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("poll"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 消费一条消息。如果超过 timeout 依然未获取到消息，则返回 None")]),s._v("\nconsumer"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("close"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br")])])])])])}),[],!1,null,null,null);t.default=e.exports}}]);