(window.webpackJsonp=window.webpackJsonp||[]).push([[308],{624:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[s._v("#")]),s._v(" 性能优化")]),s._v(" "),a("blockquote",[a("p",[s._v("TODO:待补充")])]),s._v(" "),a("p",[s._v("相关命令：")]),s._v(" "),a("div",{staticClass:"language-js line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-js"}},[a("code",[s._v("db"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("serverStatus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取服务器的状态")]),s._v("\ndb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("serverStatus")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("connections   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取客户端连接数")]),s._v("\n\ndb"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("currentOp")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 获取所有数据库正在执行的操作")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("h2",{attrs:{id:"性能测试"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能测试"}},[s._v("#")]),s._v(" 性能测试")]),s._v(" "),a("p",[s._v("可以用 "),a("code",[s._v("mongostat")]),s._v("、"),a("code",[s._v("mongostop")]),s._v(" 命令查看 MongoDB 服务器的状态。")])])}),[],!1,null,null,null);t.default=e.exports},632:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[s._v("#")]),s._v(" 性能优化")]),s._v(" "),a("p",[s._v("当数据库受到高并发访问时，可以使用以下方案缓解数据库的访问压力：")]),s._v(" "),a("ul",[a("li",[s._v("使用消息队列缓存写入的数据，将并发写入变成异步写入。")]),s._v(" "),a("li",[s._v("按主从集群部署，实现数据备份、读写分离。")]),s._v(" "),a("li",[s._v("按集群架构部署，实现高可用。")])]),s._v(" "),a("p",[s._v("可采用以下方法提高数据库的查询效率：")]),s._v(" "),a("ul",[a("li",[s._v("将数据库尽量分表、分库（比如不同业务的分开），减少每张表的大小。")]),s._v(" "),a("li",[s._v("正确地设置索引。")]),s._v(" "),a("li",[s._v("用 Redis 缓存用户经常查询的数据，既能提高用户的查询速度，又能降低数据库的访问压力。")])]),s._v(" "),a("blockquote",[a("p",[s._v("TODO:待补充")])]),s._v(" "),a("h2",{attrs:{id:"内存开销"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#内存开销"}},[s._v("#")]),s._v(" 内存开销")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("MySQL 服务器占用的总内存主要包括：")]),s._v(" "),a("ul",[a("li",[s._v("全局共享的内存："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("innodb_buffer_pool\ninnodb_log_buffer\ntemptable_max_ram\nkey_buffer_size       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用于缓冲索引，默认为 16M")]),s._v("\nquery_cache\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])])]),s._v(" "),a("li",[s._v("每个客户端线程独享一份的内存："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("join_buffer_size      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认为 256K")]),s._v("\nread_buffer_size      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认为 128K")]),s._v("\nsort_buffer_size      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认为 512K")]),s._v("\nread_rnd_buffer_size  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 默认为 256K")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])])])]),s._v(" "),a("li",[a("p",[s._v("performance_schema 数据库的以下数据表，记录了各种事件占用的内存：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("memory_summary_by_account_by_event_name   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 各个 user@host 占用的内存")]),s._v("\nmemory_summary_by_thread_by_event_name    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 各个客户端线程占用的内存")]),s._v("\nmemory_summary_global_by_event_name       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 各个 event 占用的内存")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])]),a("p",[s._v("其中的主要字段：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("COUNT_ALLOC                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 累计分配内存的次数")]),s._v("\nCOUNT_FREE                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 累计释放内存的次数")]),s._v("\nCURRENT_COUNT_USED            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当前分配但未释放的内存次数，等于 COUNT_ALLOC - COUNT_FREE")]),s._v("\nHIGH_COUNT_USED               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CURRENT_COUNT_USED 的历史最大值")]),s._v("\n\nSUM_NUMBER_OF_BYTES_ALLOC     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 累计分配的内存量（包括已释放的）")]),s._v("\nCURRENT_NUMBER_OF_BYTES_USED  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 当前分配但未释放的内存量，等于 SUM_NUMBER_OF_BYTES_ALLOC - SUM_NUMBER_OF_BYTES_FREE")]),s._v("\nHIGH_NUMBER_OF_BYTES_USED     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# CURRENT_NUMBER_OF_BYTES_USED 的历史最大值")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br")])])]),s._v(" "),a("li",[a("p",[s._v("相关命令：")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SHOW")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ENGINE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INNODB")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("STATUS")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查看 Innodb 引擎的状态，包括事务、内存等")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("memory_global_total"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查看 MySQL 占用的内存总量")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" event_name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("current_alloc "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("memory_global_by_current_bytes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查看各种事件占用的内存")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" thread_id"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("user")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("current_allocated "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" sys"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("memory_by_thread_by_current_bytes "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("limit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 查看各个客户端占用的内存")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("ul",[a("li",[s._v("刚启动且 buf_buf_pool 为空时， MySQL 大概占用 300MB 内存。")]),s._v(" "),a("li",[s._v("sys.memory_global_total 是 MySQL 自我观测的内存占用，可能比 MySQL 进程的 RSS 内存偏小，主要原因：\n"),a("ul",[a("li",[s._v("MySQL 未统计启动时加载的 C++ 动态链接库。")]),s._v(" "),a("li",[s._v("MySQL 默认采用 ptmalloc 内存分配器，调用 free() 可能不会立即释放内存。")])])])])])]),s._v(" "),a("h2",{attrs:{id:"mysqlslap"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysqlslap"}},[s._v("#")]),s._v(" mysqlslap")]),s._v(" "),a("p",[s._v("：MySQL 官方提供的一个命令行工具，用于进行性能测试。")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("工作原理：")]),s._v(" "),a("ol",[a("li",[s._v("建立单个连接到 MySQL 服务器，创建用于测试的数据库、数据表，插入随机数据。")]),s._v(" "),a("li",[s._v("建立多个连接到 MySQL 服务器，模拟多个客户端并发。执行自动生成的 SQL 语句，进行测试。")]),s._v(" "),a("li",[s._v("建立单个连接到 MySQL 服务器，删除用于测试的数据库。")])])]),s._v(" "),a("li",[a("p",[s._v("命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("mysqlslap\n        -a                "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --auto-generate-sql ，自动生成 SQL 语句进行测试")]),s._v("\n        -x "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --number-char-cols  ，在测试表中定义多少个 int(32) 类型的字段")]),s._v("\n        -y "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --number-int-cols   ，在测试表中定义多少个 varchar(128) 类型的字段")]),s._v("\n        --auto-generate-sql-add-autoincrement         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在测试表中增加一个 autoincrement 的主键字段，默认不启用")]),s._v("\n        --engine"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("innodb                               "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 用于创建测试表的引擎")]),s._v("\n\n        --auto-generate-sql-write-number "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在测试表中，插入 n-1 行测试数据")]),s._v("\n        --auto-generate-sql-unique-write-number "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 测试数据中，有多少行是不重复的")]),s._v("\n\n        --auto-generate-sql-execute-number "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 插入测试数据之后，执行多少个 query 操作")]),s._v("\n        --auto-generate-sql-unique-query-number "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# query 操作中，有多少个是不重复的")]),s._v("\n        --auto-generate-sql-load-type mixed           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# query 操作的类型，可以是 read（即 SELECT 语句）、write（即 INSERT 语句）、mixed（read、write 各占一半）、key（读取主键）、update（修改主键），默认为 mixed")]),s._v("\n\n        -c "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --concurrency ，模拟多少个客户端并发访问，每个客户端都会将上述测试执行一次")]),s._v("\n        -i "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --iterations ，整个测试过程重复执行多少次")]),s._v("\n\n        --only-print      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不实际执行测试，而是打印用于测试的所有 SQL 语句")]),s._v("\n        --no-drop         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 测试之后不要删除测试库。不过重复次测试时，会因为测试库已存在而报错")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br")])]),a("ul",[a("li",[s._v("例：打印测试过程"),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysqlslap -u root -p   -a --auto-generate-sql-write-number 3  --auto-generate-sql-execute-number 2 --only-print")]),s._v("\nDROP SCHEMA IF EXISTS "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("mysqlslap"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nCREATE SCHEMA "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("mysqlslap"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建测试数据库")]),s._v("\nuse mysqlslap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\nCREATE TABLE "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("t1"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("intcol1 INT"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("32")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" ,charcol1 VARCHAR"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("128")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("))")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建测试数据表")]),s._v("\nINSERT INTO t1 VALUES "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1804289383")]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'mxvtvmC9127qJNm06sGB8R92q2j7vTiiITRDGXM9ZLzkdekbWtmXKwZ2qG1llkRw5m9DHOFilEREk3q7oce8O3BEJC0woJsm6uzFAEynLH2xCsw1KQ1lT4zg9rdxBL'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 插入测试数据")]),s._v("\nINSERT INTO t1 VALUES "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("822890675")]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'97RGHZ65mNzkSrYT3zWoSbg9cNePQr1bzSk81qDgE4Oanw3rnPfGsBHSbnu1evTdFDe83ro9w4jjteQg4yoo9xHck3WNqzs54W5zEm92ikdRF48B2oz3m8gMBAl11W'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 插入测试数据")]),s._v("\nINSERT INTO t1 VALUES "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100669")]),s._v(","),a("span",{pre:!0,attrs:{class:"token string"}},[s._v("'qnMdipW5KkXdTjGCh2PNzLoeR0527frpQDQ8uw67Ydk1K06uuNHtkxYBxT5w8plb2BbpzhwYBgPNYX9RmICWGkZD6fAESvhMzH3yqzMtXoH4BQNylbK1CmEIPGYlC6'")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行 query")]),s._v("\nSELECT intcol1,charcol1 FROM t1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("                                                                                                                                      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 执行 query")]),s._v("\nDROP SCHEMA IF EXISTS "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),s._v("mysqlslap"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br")])])]),s._v(" "),a("li",[s._v("例：执行并发测试"),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# mysqlslap -u root -p   -a --auto-generate-sql-add-autoincrement  --auto-generate-sql-execute-number 40 -c 100 -i 10")]),s._v("\nBenchmark\n        Average number of seconds to run all queries: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.160")]),s._v(" seconds\n        Minimum number of seconds to run all queries: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.124")]),s._v(" seconds\n        Maximum number of seconds to run all queries: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0.202")]),s._v(" seconds\n        Number of clients running queries: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n        Average number of queries per client: "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("40")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])])])])])])])}),[],!1,null,null,null);t.default=e.exports},639:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"性能优化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#性能优化"}},[s._v("#")]),s._v(" 性能优化")]),s._v(" "),a("ul",[a("li",[s._v("Redis 的 QPS 主要受网络延迟、CPU 频率影响。")]),s._v(" "),a("li",[s._v("Redis 的读写速度很快，IO 压力小。因此没有必要读写分离，只是需要横向扩容。")]),s._v(" "),a("li",[s._v("当系统内存不足时，Redis 会卡顿，甚至可能被 OOM 杀死。")])]),s._v(" "),a("h2",{attrs:{id:"redis-benchmark"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis-benchmark"}},[s._v("#")]),s._v(" redis-benchmark")]),s._v(" "),a("p",[s._v("：Redis 官方提供的性能测试工具， Redis 安装后自带。")]),s._v(" "),a("p",[s._v("命令：")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("redis-benchmark\n               -h "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1 "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# redis 服务器的 IP 地址")]),s._v("\n               -p "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6379")]),s._v("      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# redis 服务器的端口号")]),s._v("\n               -a ******    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 密码")]),s._v("\n\n               -c "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 模拟连接的 client 数（默认 50 个）")]),s._v("\n               -n "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100000")]),s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 模拟发出的请求数")]),s._v("\n               -l           "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 循环测试，不停止")]),s._v("\n               -d "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# set、get 时的 value 大小（默认为 3 bytes）")]),s._v("\n               -r "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10000")]),s._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用随机的名字创建 key")]),s._v("\n               -t set,get   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只执行某些测试用例（默认执行所有测试用例）")]),s._v("\n               -P "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("        "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使用管道，每次通信发送 10 条命令（默认每次只发送一条）")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("ul",[a("li",[s._v("例："),a("code",[s._v("redis-benchmark -h redis-1 -a ****** -t set,get")])]),s._v(" "),a("li",[s._v("即使用 -a 选项指定的密码是错的，redis-benchmark 也依然可以运行，且不会报错。")]),s._v(" "),a("li",[s._v("当 -c 太少时，QPS 会比较小。当 QPS 达到瓶颈时，增加 -c 数，QPS 也不会增加。")]),s._v(" "),a("li",[s._v("测试时会在 Redis 服务器的 0 号数据库中创建几个 key ，比如 "),a("code",[s._v("mylist")]),s._v("、"),a("code",[s._v("key:__rand_int__")]),s._v(" 等。测试完之后不会删除。")]),s._v(" "),a("li",[s._v("使用 -r 10000 选项时，会使用 10000 范围内的随机数给 key 命名，例如："),a("code",[s._v("key:000000000912")]),s._v("、"),a("code",[s._v("key:000000000882")]),s._v(" 。测试写入 3×10000 次 key 时，就能创建接近 10000 个 key ，每个 key 占用的内存由 -d 选项决定。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);