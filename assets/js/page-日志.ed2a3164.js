(window.webpackJsonp=window.webpackJsonp||[]).push([[327],{726:function(s,t,a){"use strict";a.r(t);var n=a(1),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"日志"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志"}},[s._v("#")]),s._v(" 日志")]),s._v(" "),a("h2",{attrs:{id:"journalctl"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#journalctl"}},[s._v("#")]),s._v(" journalctl")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ journalctl         "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示系统日志（默认显示全部日志）")]),s._v("\n            -f       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 跟踪日志的末尾并保持显示")]),s._v("\n            -u "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("ssh")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只显示某个 unit 的日志")]),s._v("\n            -b       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只显示本次开机以来的日志")]),s._v("\n            -b -1    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只显示上一次开机的日志（取值为+1 则表示正数第 1 次开机）")]),s._v("\n            --since "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2019-08-12 17:00:00"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只显示从某个时间点开始的日志")]),s._v("\n            --until "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"2019-08-14 00:00:00"')]),s._v("\n            --since "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"1 hour ago"')]),s._v("\n            --until "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"10 min ago"')]),s._v("\n\n            --disk-usage          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示日志占用的磁盘空间")]),s._v("\n            --vacuum-time"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("1months "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清理日志，只保留最近一段时间的")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("ul",[a("li",[s._v("其日志保存在 "),a("code",[s._v("/var/log/journal/")]),s._v(" 或 "),a("code",[s._v("/run/log/journal/")]),s._v(" 目录下。")])]),s._v(" "),a("h2",{attrs:{id:"systemd-analyze"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#systemd-analyze"}},[s._v("#")]),s._v(" systemd-analyze")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("$ systemd-analyze       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示系统启动的耗时")]),s._v("\n                blame   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 分别显示系统启动时各个进程的耗时")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br")])]),a("h2",{attrs:{id:"logrotate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#logrotate"}},[s._v("#")]),s._v(" logrotate")]),s._v(" "),a("p",[s._v("：一个 Linux 自带的命令行工具，用于定期轮询（rotate）日志文件，进行切割。")]),s._v(" "),a("ul",[a("li",[a("a",{attrs:{href:"https://linux.die.net/man/8/logrotate",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),a("OutboundLink")],1)])]),s._v(" "),a("h3",{attrs:{id:"配置"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),a("p",[s._v("logrotate 默认使用 "),a("code",[s._v("/etc/logrotate.conf")]),s._v(" 作为主配置文件（用于保存 logrotate 本身的配置），还会导入 "),a("code",[s._v("/etc/logrotate.d/")]),s._v(" 目录下的其它配置文件（用于保存各个日志切割任务的配置）。")]),s._v(" "),a("ul",[a("li",[s._v("这些配置文件不限制扩展名，采用 logrotate 自定的语法。")]),s._v(" "),a("li",[s._v("用 # 声明单行注释，但必须独占一行。")])]),s._v(" "),a("p",[s._v("例：编写一个配置文件 "),a("code",[s._v("/etc/logrotate.d/nginx")]),s._v(" ，用于切割 Nginx 的日志文件")]),s._v(" "),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[s._v("/usr/local/nginx/logs/*.log "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 待切割的日志文件的绝对路径（如果有多个路径，则用空格分隔）")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" nginx nginx              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 切换到指定的用户、用户组来执行切割任务")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# create 644 nginx nginx    # 以指定权限创建新的日志文件")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 判断是否切割：")]),s._v("\n    daily                       "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每天轮询一次日志文件（还可设置 weekly、monthly、yearly），如果需要切割，则切割生成一个归档日志")]),s._v("\n    rotate "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("                    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 最多保留 5 个归档日志，超过该数量则删掉最旧的归档日志")]),s._v("\n    missingok                   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 忽略日志文件不存在时的报错")]),s._v("\n    notifempty                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 如果日志文件为空，则不切割")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# size 10k                  # 如果日志文件低于指定大小，则不切割日志")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 保存归档日志：")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# olddir old_logs           # 将归档日志放到指定目录下（默认放在源目录下），可以使用相对路径或绝对路径，但不能跨越磁盘")]),s._v("\n    dateext                     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建归档日志时，加上 dateformat 作为文件名后缀")]),s._v("\n    dateformat -%Y-%m-%d-%s     "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 日期字符串的格式（文件名示例： error-2019-12-23-1577083161.log ）")]),s._v("\n    extension .log              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 让归档日志采用这种扩展名（会负载 dateext 之后）")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# compress                  # 启用 gzip 压缩归档日志（扩展名为 .gz ）")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# delaycompress             # 每次轮询生成的归档日志会等到下一次轮询时才压缩")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# copytruncate")]),s._v("\n    postrotate                  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每次切割日志之后，执行 postrotate 与 endscript 之间的命令")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("if")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v(" -f /var/run/nginx.pid "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("then")]),s._v("\n          /bin/kill -USR1 "),a("span",{pre:!0,attrs:{class:"token variable"}},[a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")]),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /var/run/nginx.pid"),a("span",{pre:!0,attrs:{class:"token variable"}},[s._v("`")])]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("fi")]),s._v("\n    endscript\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br")])]),a("h3",{attrs:{id:"切割方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切割方式"}},[s._v("#")]),s._v(" 切割方式")]),s._v(" "),a("p",[s._v("假设让 logrotate 定期轮询一次应用程序 Nginx 的日志文件 error.log ，如果需要切割，则有两种切割方式：")]),s._v(" "),a("ul",[a("li",[s._v("使用 postrotate 指令\n"),a("ul",[a("li",[s._v("原理：将 error.log 重命名为归档日志 error-xx.log ，然后创建一个新的 error.log 文件，供程序继续写入日志。")]),s._v(" "),a("li",[s._v("缺点：切割之后，日志文件的 inode 号会变化，因此需要将程序重启一次，重新根据文件路径打开该日志文件。\n"),a("ul",[a("li",[s._v("不过 Nginx 支持发送 -USR1 信号，通知它在不重启的情况下重新打开日志文件。")])])])])]),s._v(" "),a("li",[s._v("使用 copytruncate 指令\n"),a("ul",[a("li",[s._v("原理：先创建一个归档日志 error-xx.log ，然后将 error.log 的内容拷贝到 error-xx.log 中，然后将 error.log 的长度截断为 0 ，供程序继续写入日志。")]),s._v(" "),a("li",[s._v("优点：这样切割之后，日志文件的 inode 号没有改变，因此不必重启程序。")]),s._v(" "),a("li",[s._v("缺点：在拷贝完成之后、截断完成之前，如果程序写入新的日志，则会丢失。")]),s._v(" "),a("li",[s._v("程序调用 open() 函数打开日志文件时，应该采用 O_APPEND 追加模式。否则，当文件长度被截断为 0 时，程序会依然从之前的偏移量处继续写入数据，而偏移量之前的位置用空字节填充，导致文件变成稀疏文件。")])])]),s._v(" "),a("li",[s._v("如果 copytruncate 和 postrotate 指令都不使用，则 logrotate 只会执行 "),a("code",[s._v("mv error.log error-xx.log")]),s._v(" ，导致并没有切割日志文件。")])]),s._v(" "),a("h3",{attrs:{id:"启动"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#启动"}},[s._v("#")]),s._v(" 启动")]),s._v(" "),a("ul",[a("li",[s._v("logrotate 安装之后不需要保持运行，它会被 crond 每天以 root 权限启动一次，启动之后会根据配置文件开始工作，切割日志。\n"),a("ul",[a("li",[s._v("也可以添加 crontab 任务，每小时执行一次 logrotate 。")])])]),s._v(" "),a("li",[s._v("可以手动执行一次 logrotate ，测试一下效果："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[s._v("logrotate")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("configfile"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动 logrotate 并读取某个配置文件")]),s._v("\n          -d            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 开启调试模式，此时不会影响实际的日志文件")]),s._v("\n          -f            "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 主动执行一次日志切割，不过 logrotate 可能认为此时不需要进行日志切割")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])]),s._v(" "),a("h3",{attrs:{id:"示例"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#示例"}},[s._v("#")]),s._v(" 示例")]),s._v(" "),a("ol",[a("li",[s._v("创建一个日志文件："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo Hello > test.log")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  ll")]),s._v("\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" Jan "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":45 test.log\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[s._v("切割一次："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  logrotate /etc/logrotate.d/test -f")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  ll")]),s._v("\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" Jan "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":46 test-2020-01-12.log   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 切割成功，这里归档日志的日期字符串格式为 dateformat -%Y-%m-%d")]),s._v("\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jan "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":46 test.log              "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 原日志文件的内容变为空")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])])]),s._v(" "),a("li",[s._v("再切割一次："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# echo Hello > test.log        # 使原日志文件不为空")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  logrotate /etc/logrotate.d/test -f")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("root@CentOS ~"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#  ll")]),s._v("\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" Jan "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":51 test-2020-01-12-2020-01-12.log\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" Jan "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":46 test-2020-01-12.log\n-rw-r--r--. "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" root root    "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" Jan "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("13")]),s._v(":51 test.log\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("ul",[a("li",[a("code",[s._v("test.log")]),s._v(" 的内容不为空，但并没有切割。因为存在一个名为 "),a("code",[s._v("test-2020-01-12.log")]),s._v(" 的归档日志，导致 logrotate 认为已经切割过了。除非按 "),a("code",[s._v("dateformat -%Y-%m-%d-%s")]),s._v(" 的格式生成归档日志。")]),s._v(" "),a("li",[s._v("此时归档日志 "),a("code",[s._v("test-2020-01-12.log")]),s._v(" 也被轮询、切割了。为了避免循环切割，建议在 logrotate 配置中取消使用文件名通配符，或者使用其它目录作为 olddir 。")])])])]),s._v(" "),a("h3",{attrs:{id:"日志清理方案"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#日志清理方案"}},[s._v("#")]),s._v(" 日志清理方案")]),s._v(" "),a("p",[s._v("应用程序产生的日志文件需要定时清理，否则会占用越来越多的磁盘空间。主要分为以下几种情况：")]),s._v(" "),a("ul",[a("li",[s._v("程序自己会每天切割日志，并删除多天以前的日志。这样已满足要求，不需要额外操作。")]),s._v(" "),a("li",[s._v("程序自己会每天切割日志，但不会删除多天以前的日志。此时建议用 crontab 定期删除，如下："),a("div",{staticClass:"language-sh line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sh"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("12")]),s._v(" * * *     "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("find")]),s._v(" /data/myproject/logs      -mtime +7 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("xargs")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("rm")]),s._v(" -f   "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除超过 7 天未修改的日志文件")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br")])])]),s._v(" "),a("li",[s._v("程序只产生一个日志文件，不断写入。这样建议采用 logrotate 定期切割、自动删除的方案。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);