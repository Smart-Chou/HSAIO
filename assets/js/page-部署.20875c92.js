(window.webpackJsonp=window.webpackJsonp||[]).push([[86],{622:function(s,a,t){"use strict";t.r(a);var e=t(1),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[s._v("#")]),s._v(" 部署")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("可使用官方的部署工具 kubeadm ，部署标准的 k8s 。")])]),s._v(" "),t("li",[t("p",[s._v("也可部署其它 k8s 发行版。它们在 k8s 的基础上封装了其它组件，比如 Web UI、网络插件。")]),s._v(" "),t("ul",[t("li",[s._v("minikube ：用于部署测试用途的 k8s 。")]),s._v(" "),t("li",[s._v("Rancher ：由 Rancher Labs 公司开源。")]),s._v(" "),t("li",[s._v("OpenShift ：由 Red Hat 公司开源。")]),s._v(" "),t("li",[s._v("kubesphere ：由青云公司开源。")]),s._v(" "),t("li",[s._v("KubeOperator ：由飞致云公司开源。")])])]),s._v(" "),t("li",[t("p",[s._v("也可使用云平台托管的 k8s 发行版，不需要用户部署维护。")]),s._v(" "),t("ul",[t("li",[s._v("Elastic Kubernetes Service（EKS）：由 AWS 云提供。")]),s._v(" "),t("li",[s._v("Azure Kubernetes Service（AKS）：由 Azure 云提供。")]),s._v(" "),t("li",[s._v("Google Kubernetes Engine（GKE）：由 Google 云提供。")]),s._v(" "),t("li",[s._v("Tencent Kubernetes Engine（TKE）：由腾讯云提供。")])])])]),s._v(" "),t("h2",{attrs:{id:"kubeadm"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubeadm"}},[s._v("#")]),s._v(" kubeadm")]),s._v(" "),t("p",[s._v("：一个命令行工具，用于部署标准的 k8s 集群。")]),s._v(" "),t("ul",[t("li",[s._v("本身不会安装 kubelet、kubectl、网络插件。")])]),s._v(" "),t("h3",{attrs:{id:"安装"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),t("ul",[t("li",[s._v("用 yum 安装："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 采用阿里的镜像源，因为谷歌的镜像源需要翻墙访问")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<<")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("EOF"),t("span",{pre:!0,attrs:{class:"token bash punctuation"}},[s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/yum.repos.d/kubernetes.repo")]),s._v("\n[kubernetes]\nname=Kubernetes\nbaseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64\nenabled=1\ngpgcheck=1\nrepo_gpgcheck=1\ngpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg\nEOF")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 安装")]),s._v("\nyum "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" -y kubeadm\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br")])]),t("ul",[t("li",[s._v("这会同时安装依赖的 kubelet、kubectl 。")])])])]),s._v(" "),t("h3",{attrs:{id:"命令"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令"}},[s._v("#")]),s._v(" 命令")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("kubeadm\n        version\n        config        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 管理配置。这些配置会保存为一个名为 kubeadm-config 的 ConfigMap ，位于 kube-system 命名空间")]),s._v("\n          print       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 打印配置")]),s._v("\n            init-defaults\n            join-defaults\n\n        init          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 将本机初始化为主节点")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v("          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 使本机连接到主节点，加入 k8s 集群")]),s._v("\n        reset         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 撤销 init、join 命令对本机的影响")]),s._v("\n\n        token         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 管理 token ，用于一个节点 join 主节点时的认证")]),s._v("\n          create\n            --ttl     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 有效时长，过期则自动删除。默认为 24h")]),s._v("\n          delete "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("token"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".\n          list\n\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])]),t("h3",{attrs:{id:"部署-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署-2"}},[s._v("#")]),s._v(" 部署")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("部署 k8s 时，主机需要满足以下条件：")]),s._v(" "),t("ul",[t("li",[s._v("至少 2v CPU、2G RAM 。\n"),t("ul",[t("li",[s._v("空载时，主节点的全部进程大概占用 500M 内存，而工作节点的 kubelet 占用 100M 内存。")])])]),s._v(" "),t("li",[s._v("禁用 Swap 分区。")]),s._v(" "),t("li",[s._v("每个主机的 hostname、MAC 地址不同。")]),s._v(" "),t("li",[s._v("安装 docker 引擎。\n"),t("ul",[t("li",[s._v("dockerd 采用的 Cgroup 驱动默认为 cgroupfs ，而 k8s 默认为 systemd 。因此需要修改 dockerd 的配置，并重启 dockerd ："),t("div",{staticClass:"language-json line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-json"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token property"}},[s._v('"exec-opts"')]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"native.cgroupdriver=systemd"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])])])]),s._v(" "),t("li",[s._v("主机的防火墙开通了 k8s 所需的端口 6443、10250 。")]),s._v(" "),t("li",[s._v("在集群的一个主机上安装 kubeadm、kubectl 。")]),s._v(" "),t("li",[s._v("在集群的每个主机上安装 kubelet ，并启动："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("systemctl start  kubelet\nsystemctl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("enable")]),s._v(" kubelet\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])])]),s._v(" "),t("li",[t("p",[s._v("下载 Docker 镜像：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("kubeadm config images pull --image-repository registry.aliyuncs.com/google_containers\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("在一个主机上执行以下命令，初始化为主节点：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("kubeadm init\n            --config                            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定配置文件")]),s._v("\n            --kubernetes-version "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("string"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# k8s 版本。默认为最新的 stable 版本")]),s._v("\n            --image-repository registry.aliyuncs.com/google_containers  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 镜像仓库，默认为 k8s.gcr.io ，但它需要翻墙访问")]),s._v("\n            --node-name "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定当前节点名")]),s._v("\n            --pod-network-cidr "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.244")]),s._v(".0.0/16    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Pod IP 的子网范围，也会被用于设置 cluster-cidr 。默认为空，不会分配 CIDR")]),s._v("\n            --service-cidr "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("string"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Service IP 的子网范围，默认为 10.96.0.0/12")]),s._v("\n            --service-dns-domain "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("string"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Service 的域名起点，默认为 cluster.local")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])]),t("ul",[t("li",[s._v("这会生成管理员的 kubeconfig 配置文件，将它拷贝到默认路径："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p ~/.kube\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("cp")]),s._v(" /etc/kubernetes/admin.conf ~/.kube/config\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])])]),s._v(" "),t("li",[t("p",[s._v("在其它主机上执行以下命令，加入 k8s 集群：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("kubeadm "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("join")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10.0")]),s._v(".0.1:6443\n      --token ****** --discovery-token-ca-cert-hash sha256:******   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 加入集群时需要使用 token 认证")]),s._v("\n      --control-plane     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 加入之后成为控制平面节点，默认是工作节点")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])]),t("ul",[t("li",[s._v("至少需要部署一个主节点和一个工作节点。")]),s._v(" "),t("li",[s._v("默认给主节点设置了污点，不允许用作工作节点，降低主节点故障的风险。可以移除污点："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("kubectl taint nodes --all node-role.kubernetes.io/master-\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[s._v("部署多个主节点时，可以实现 k8s 的高可用。\n"),t("ul",[t("li",[s._v("此时需要给多个 kube-apiserver 实例创建一个负载均衡 IP 或 DNS ，用于访问。")])])])])]),s._v(" "),t("li",[t("p",[s._v("启用一种 CNI 网络插件：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("curl")]),s._v(" https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v(" kubectl apply -f -\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"kubectl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#kubectl"}},[s._v("#")]),s._v(" kubectl")]),s._v(" "),t("p",[s._v("：一个命令行工具，用于管理已部署的 k8s 集群。")]),s._v(" "),t("h3",{attrs:{id:"安装-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#安装-2"}},[s._v("#")]),s._v(" 安装")]),s._v(" "),t("ul",[t("li",[s._v("下载二进制文件："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://dl.k8s.io/release/v1.23.1/bin/linux/amd64/kubectl\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" kubectl /usr/local/bin/\n\nkubectl completion "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" /etc/bash_completion.d/kubectl  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启用 kubectl 命令补全，保存为 bash_completion 脚本")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])]),s._v(" "),t("li",[s._v("kubectl 命令通过访问 kube-apiserver 来控制 k8s 集群，此时需要读取一种配置文件，称为 kubeconfig 。\n"),t("ul",[t("li",[s._v("kubeconfig 配置了要连接的 kube-apiserver 地址，以及使用的集群名、命名空间、账号。")]),s._v(" "),t("li",[s._v("默认读取 ~/.kube/config 文件作为 kubeconfig ，也可以在执行命令时加上 "),t("code",[s._v("--kubeconfig <path>")]),s._v(" 参数，或声明环境变量 "),t("code",[s._v("export KUBECONFIG=<path>")]),s._v(" 。")])])])]),s._v(" "),t("h3",{attrs:{id:"命令-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令-2"}},[s._v("#")]),s._v(" 命令")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("kubectl\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看集群")]),s._v("\n        cluster-info      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示集群信息")]),s._v("\n        version           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示 client 和 server 的版本")]),s._v("\n        config            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 访问 kubeconfig")]),s._v("\n            view          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示 kubeconfig 的内容")]),s._v("\n              --raw       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 是否显示完整内容，默认省略 token")]),s._v("\n        proxy             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 运行一个 HTTP 服务器，反向代理 apiserver")]),s._v("\n            --port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("8001")]),s._v("\n            --address"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("127.0")]),s._v(".0.1     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 监听的地址")]),s._v("\n            --accept-hosts"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'^localhost$,^127\\.0\\.0\\.1$'")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许 HTTP 请求采用的目标地址，采用正则匹配")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 修改资源")]),s._v("\n        create                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建资源")]),s._v("\n            -f "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定一个配置文件。不支持指定多个文件，支持指定配置文件的 URL")]),s._v("\n            -f "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("dir"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("                "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定一个目录，读取其下所有文件")]),s._v("\n              -R                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 递归处理目录")]),s._v("\n        replace                     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 替换资源的配置文件。如果该资源不存在则报错")]),s._v("\n            -f "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n            --force                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 先删除旧资源，再创建")]),s._v("\n        apply                       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更新资源的配置文件。如果该资源不存在则自动创建，如果该资源没有变化则显示 unchanged")]),s._v("\n            -f "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n        patch -p "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('\'{"spec":{"unschedulable":true}}\'')]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 更新资源的配置文件中的指定字段，而不是修改整个配置文件")]),s._v("\n        delete                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除资源")]),s._v("\n            -f "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("file"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除配置文件中指定的资源")]),s._v("\n            pod "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除指定名称的 pod")]),s._v("\n            deployment "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除指定名称的 deployment")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看资源")]),s._v("\n        describe "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("resource"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看资源的信息，包括主要配置、event")]),s._v("\n        get "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("resource"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看资源的信息。不指定 name 则显示这种资源的所有实例")]),s._v("\n            --kubeconfig ~/.kube/config "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定 kubeconfig 的文件路径")]),s._v("\n            -n default              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --namespace ，指定命名空间，只查看该命名空间中的资源")]),s._v("\n            -A                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --all-namespaces ，查看所有命名空间")]),s._v("\n            -l "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("key1")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("value1,"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --selector ，根据标签筛选")]),s._v("\n            --field-selector status.phase"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!=")]),s._v("Running  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 根据字段筛选")]),s._v("\n\n            -o wide                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --output ，输出格式。默认显示列表格式的简介，wide 是显示更多列")]),s._v("\n            -o name                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只显示名称")]),s._v("\n            -o json                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示 JSON 格式的详细配置")]),s._v("\n            -o yaml                 "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示 YAML 格式的详细配置")]),s._v("\n            -o template --template"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(".spec.replicas"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按自定义的 Golang 模板显示")]),s._v("\n\n        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 管理 pod")]),s._v("\n        expose                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建 service ，映射端口")]),s._v("\n        "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pod"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" -- "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("command"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在 pod 中执行命令。注意在 command 之前加上分隔符 --")]),s._v("\n            -c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --container ，选择 pod 中的某个容器。默认选择第一个容器")]),s._v("\n            -it                     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入容器内终端")]),s._v("\n        restart "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pod"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 重启 pod ，实际上是创建新 Pod")]),s._v("\n        rollout restart "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("daemonset"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("deployment"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("statefulset"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(".  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 滚动重启 pod 。这会异步地根据 spec.strategy 创建新 pod")]),s._v("\n        scale "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("deployment"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("|")]),s._v("statefulset"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("..")]),s._v(". --replicas"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 改变某个应用的 Pod 的数量")]),s._v("\n        logs "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("pod"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 查看日志")]),s._v("\n            -c "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --container ，选择 pod 中的某个容器")]),s._v("\n            --all-containers        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 选择 pod 中的所有容器")]),s._v("\n            -f                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --follow ，保持显示")]),s._v("\n            --tail "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只显示最后几行。默认从头开始显示")]),s._v("\n            --timestamps            "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 增加显示时间戳")]),s._v("\n            --since 1h              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只显示最近一段时间的日志")]),s._v("\n            --since-time "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2021")]),s._v("-01-01T08:00:00Z "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只显示指定时刻开始的日志")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br"),t("span",{staticClass:"line-number"},[s._v("53")]),t("br"),t("span",{staticClass:"line-number"},[s._v("54")]),t("br"),t("span",{staticClass:"line-number"},[s._v("55")]),t("br"),t("span",{staticClass:"line-number"},[s._v("56")]),t("br"),t("span",{staticClass:"line-number"},[s._v("57")]),t("br"),t("span",{staticClass:"line-number"},[s._v("58")]),t("br"),t("span",{staticClass:"line-number"},[s._v("59")]),t("br")])]),t("ul",[t("li",[s._v("resource 类型可以是 nodes、pods、services 等。\n"),t("ul",[t("li",[s._v("不区分单复数，比如 node 等价于 nodes 。")]),s._v(" "),t("li",[s._v("支持通过逗号分隔符指定多个，比如 nodes,pods 。")])])]),s._v(" "),t("li",[s._v("例："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("kubectl create deployment nginx --image"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("nginx:1.20          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 部署一个应用")]),s._v("\nkubectl "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("exec")]),s._v(" nginx-6d777db949-5b77c -c nginx -it -- "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("bash")]),s._v("    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 进入容器内终端")]),s._v("\nkubectl expose deployment nginx --port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" --target-port"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 为应用 Nginx 创建 service ，默认为 ClusterIP 类型，并映射端口")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br")])])]),s._v(" "),t("li",[s._v("关于配置文件的版本：\n"),t("ul",[t("li",[s._v("用户修改配置文件时可以指定 resourceVersion 字段，如果与 k8s 存储的不同，则说明用户不是在最新版本上编辑，会被 k8s 拒绝。\n"),t("ul",[t("li",[s._v("如果省略 resourceVersion ，或者采用 kubectl patch 方式，则不会检查版本。")])])]),s._v(" "),t("li",[s._v("kubectl apply 可能会在 annotations 中增加一个 "),t("code",[s._v("kubectl.kubernetes.io/last-applied-configuration")]),s._v(" 字段，记录资源的当前配置，用于比较差异，找出更新了哪些字段。")]),s._v(" "),t("li",[s._v("Deployment 资源还会增加一个 generation 字段，用于记录版本序号。")])])])]),s._v(" "),t("h2",{attrs:{id:"minikube"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#minikube"}},[s._v("#")]),s._v(" minikube")]),s._v(" "),t("p",[s._v("：一个命令行工具，用于部署单节点的 k8s 集群，常用于测试。")]),s._v(" "),t("ul",[t("li",[s._v("可以在本机部署多个 k8s 集群。每个 k8s 集群位于一个容器内，包含多个进程。")])]),s._v(" "),t("h3",{attrs:{id:"部署-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署-3"}},[s._v("#")]),s._v(" 部署")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("安装 docker")])]),s._v(" "),t("li",[t("p",[s._v("下载 minikube ：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" minikube-linux-amd64 /usr/local/bin/\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("以非 root 用户部署 k8s ：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("useradd")]),s._v(" leo\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("usermod")]),s._v(" leo -G "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("su")]),s._v(" - leo\nminikube start\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("在本机安装 kubectl ，或使用 minikube 内置的 kubectl ：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("minikube kubectl -- get pods -A\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"命令-3"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#命令-3"}},[s._v("#")]),s._v(" 命令")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("minikube\n        start                             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 部署一个 k8s 集群")]),s._v("\n            -p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("                     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# --profile ，指定 k8s 集群的名称，默认为 minikube")]),s._v("\n            --driver "),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 驱动，默认会自动选择")]),s._v("\n            --kubernetes-version v1.2.3   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# k8s 版本。默认为最新的 stable 版本")]),s._v("\n        stop\n        delete          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除当前 k8s 集群")]),s._v("\n            -p "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定 k8s 集群的名称")]),s._v("\n            --all       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 删除所有 k8s 集群")]),s._v("\n        pause           "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 暂停运行")]),s._v("\n        unpase\n\n        profile         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示当前 k8s 集群的名称")]),s._v("\n            list        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示所有 k8s 集群")]),s._v("\n        status\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("h2",{attrs:{id:"rancher"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#rancher"}},[s._v("#")]),s._v(" Rancher")]),s._v(" "),t("p",[s._v("：一个 Web 网站，可以创建、管理多个 k8s 集群。")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://rancher.com/docs/rancher/v2.6/en/",target:"_blank",rel:"noopener noreferrer"}},[s._v("官方文档"),t("OutboundLink")],1)]),s._v(" "),t("li",[s._v("采用 Golang 开发。")]),s._v(" "),t("li",[s._v("架构：\n"),t("ul",[t("li",[s._v("先部署 Rancher server 。")]),s._v(" "),t("li",[s._v("然后在一些主机上运行 Rancher agent ，连接到 server ，被 server 控制。\n"),t("ul",[t("li",[s._v("Rancher 可以在多个主机上创建、管理多个 k8s 集群，称为下游集群。也可以导入已部署的集群。")]),s._v(" "),t("li",[s._v("当 Rancher server 故障时，下游集群依然会正常运行，可以被用户直接访问。")])])])])]),s._v(" "),t("li",[s._v("Rancher 提供了多种 k8s 发行版：\n"),t("ul",[t("li",[s._v("RKE（Rancher Kubernetes Engine）：一个 k8s 发行版。包含了一个命令行工具，用于部署 k8s 。")]),s._v(" "),t("li",[s._v("k3s ：一个轻量级的 k8s 发行版。\n"),t("ul",[t("li",[s._v("主节点只需运行 k3s server 进程，工作节点只需运行 k3s agent 进程。")]),s._v(" "),t("li",[s._v("默认采用 sqlite3 作为数据库。")])])])])])]),s._v(" "),t("h3",{attrs:{id:"部署-4"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署-4"}},[s._v("#")]),s._v(" 部署")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("用 docker 部署一个单节点的 Rancher ：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("docker")]),s._v(" run -d "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(":80 -p "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("443")]),s._v(":443 "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --name rancher "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    --privileged "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n    rancher/rancher:v2.6.3-linux-amd64\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("ul",[t("li",[s._v("此时 Rancher 会在容器内运行一个 k3s 集群。")])])]),s._v(" "),t("li",[t("p",[s._v("或者在 k8s 中用 helm 部署单节点的 Rancher 。也可以部署成多节点，实现高可用。")])])]),s._v(" "),t("h3",{attrs:{id:"配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),t("ul",[t("li",[s._v("Rancer 增加了项目（project）的概念，用于对命名空间分组。")]),s._v(" "),t("li",[s._v("可以让 Rancher 采用私有的镜像仓库。")]),s._v(" "),t("li",[s._v("Rancher 默认在 default 命名空间创建了一个 kubernetes 服务，用于反向代理 apiserver ，访问地址为 "),t("code",[s._v("https://10.43.0.1:443")]),s._v(" 。")]),s._v(" "),t("li",[s._v("Rancher 的默认配置："),t("div",{staticClass:"language-yml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kube-api")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("service_cluster_ip_range")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10.43.0.0/16\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("service_node_port_range")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 30000"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("32767")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kube-controller")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cluster_cidr")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10.42.0.0/16              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Pod IP 的子网范围")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("extra_args")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("node-cidr-mask-size")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'24'")]),s._v("             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 每个 Node 的子网掩码长度")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("service_cluster_ip_range")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10.43.0.0/16  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Service IP 的子网范围")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kubelet")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cluster_domain")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" cluster.local\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("cluster_dns_server")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" 10.43.0.10\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br")])])])])])}),[],!1,null,null,null);a.default=n.exports},653:function(s,a,t){"use strict";t.r(a);var e=t(1),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[s._v("#")]),s._v(" 部署")]),s._v(" "),t("h2",{attrs:{id:"部署-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署-2"}},[s._v("#")]),s._v(" 部署")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("下载二进制版：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirrors.tuna.tsinghua.edu.cn/apache/zookeeper/zookeeper-3.7.0/apache-zookeeper-3.7.0-bin.tar.gz\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("解压后运行：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("bin/zkServer.sh\n                start               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在后台启动")]),s._v("\n                start-foreground    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 在前台启动")]),s._v("\n                stop\n                restart\n\n                status              "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示状态")]),s._v("\n                version             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 显示版本信息")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("或者用 docker-compose 部署：")]),s._v(" "),t("div",{staticClass:"language-yml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("zookeeper")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" zookeeper\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" zookeeper"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("3.7.0\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" unless"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("stopped\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# JVMFLAGS: -Xmx1G -Xms1G")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ZOO_MY_ID")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 2181"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2181")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 2888"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2888")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 3888"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3888")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# - 8080:8080")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./conf"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/conf\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/data\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])])])]),s._v(" "),t("h2",{attrs:{id:"版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#版本"}},[s._v("#")]),s._v(" 版本")]),s._v(" "),t("ul",[t("li",[s._v("v3.4.0\n"),t("ul",[t("li",[s._v("于 2011 年发布。")]),s._v(" "),t("li",[s._v("增加 autopurge 配置参数，用于自动清理数据目录。")])])]),s._v(" "),t("li",[s._v("v3.5.0\n"),t("ul",[t("li",[s._v("于 2014 年发布。")]),s._v(" "),t("li",[s._v("增加 AdminServer 模块，通过内置的 Jetty 服务器提供 HTTP API 。\n"),t("ul",[t("li",[s._v("比如访问 URL "),t("code",[s._v("/commands")]),s._v(" 可获取可用的命令列表，访问 URL "),t("code",[s._v("/commands/stats")]),s._v(" 可获取 zk 的状态。")]),s._v(" "),t("li",[s._v("建议用 AdminServer 代替以前的四字母命令。")])])])])]),s._v(" "),t("li",[s._v("v3.6.0\n"),t("ul",[t("li",[s._v("于 2020 年发布。")]),s._v(" "),t("li",[s._v("增加 sessionRequireClientSASLAuth 配置参数，强制客户端进行 SASL 认证。")])])]),s._v(" "),t("li",[s._v("v3.7.0\n"),t("ul",[t("li",[s._v("于 2021 年发布。")]),s._v(" "),t("li",[s._v("增加 enforeQuota 配置参数，让 quota 具有强制性。")])])])]),s._v(" "),t("h2",{attrs:{id:"配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),t("p",[s._v("配置文件 "),t("code",[s._v("conf/zoo.cfg")]),s._v(" 示例：")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# clientPort=2181               # 监听一个供客户端连接的端口")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("dataDir")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("/data                   # 数据快照的存储目录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# dataLogDir=/datalog           # 事务日志的存储目录，默认与 dataDir 一致。可采用不同的磁盘设备，从而避免竞争磁盘 IO ，提高 zk 的速度、吞吐量")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# snapCount=100000              # 记录多少条事务日志时就保存一次快照。实际上会根据随机数提前保存快照，避免多个 zk 节点同时保存快照")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("autopurge.purgeInterval")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("24      # 每隔 n 小时，自动清理一次快照文件、事务日志文件。默认值为 0 ，禁用该功能")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# autopurge.snapRetainCount=3   # 每次 autopurge 时，每种文件只保留 Count 数量。默认值、最小值都为 3")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# tickTime=2000                 # 时钟间隔，用作 zk 的基本时间单位，单位为 ms 。也是向其它 server、client 发送心跳包的时间间隔，而 TCP 会话超时是 2*tickTime")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# initLimit=5                   # 各个 server 初始化连接到 leader 的超时时间，单位为 tickTime")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# syncLimit=2                   # 各个 server 与 leader 之间通信（请求、回复）的超时时间，单位为 tickTime 。超过该时间则视作失去同步")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# admin.enableServer=true       # 是否启用 AdminServer")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# admin.serverPort=8080         # AdminServer 监听的端口")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 4lw.commands.whitelist=srvr,stat  # 一个白名单，声明允许使用哪些四字母命令，可通过 telnet 连接发送命令")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("metricsProvider.className")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("org.apache.zookeeper.metrics.prometheus.PrometheusMetricsProvider # 启用 Prometheus Metrics Provider")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# metricsProvider.httpPort=7000")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 声明 zk 集群的 server 列表，每行的格式为 server.<id>=<host>:<port1>:<port2>[:role];[<external_host>:]<external_port>")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   - id 是一个数字编号，不可重复")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   - host 是各个 server 的 IP 地址")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   - port1 是各个 server 连接到 leader 的目标端口，port2 是各个 server 之间进行 leader 选举的端口")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#   - [<external_host>:]<external_port> 是另一个监听的 Socket ，供客户端访问")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 例如：当前 server id 为 1 时，会根据 server.1 的配置来监听 Socket ，根据其它 server 的配置去通信")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("server.1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("10.0.0.1:2888:3888;2181  # 对于当前 server 而言，该 IP 地址会用于绑定 Socket ，可改为 0.0.0.0")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("server.2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("10.0.0.2:2888:3888;2181")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("server.3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("10.0.0.3:2888:3888;2181")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br")])]),t("ul",[t("li",[s._v("zk server 的目录结构示例："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("├── conf\n│   ├── configuration.xsl\n│   ├── log4j.properties\n│   └── zoo.cfg\n└── data\n    ├── myid\n    └── version-2\n        ├── acceptedEpoch       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该文件记录上一次接受的 NEWEPOCH 消息的 epoch 编号。下一次收到 NEWEPOCH 消息时，其 epoch 编号必须更大，才会接受")]),s._v("\n        ├── currentEpoch        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 该文件记录上一次接受的 NEWLEADER 消息的 epoch 编号。下一次收到 NEWLEADER 消息时，其 epoch 编号必须更大，才会接受")]),s._v("\n        ├── log.100000001       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 事务日志")]),s._v("\n        ├── log.200000001\n        ├── log.2000004b3\n        ├── snapshot.0          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 数据快照")]),s._v("\n        ├── snapshot.100000000\n        ├── snapshot.100000230\n        └── snapshot.2000004b2\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br")])]),t("ul",[t("li",[s._v("每个 zk server 启动时，会根据 "),t("code",[s._v("$dataDir/myid")]),s._v(" 文件的值确定自己的 server 编号。因此初次部署时需要创建该文件："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token variable"}},[s._v("$dataDir")]),s._v("/myid\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[s._v("当 zk server 启动时，如果 dataDir 目录不存在，它会自动创建该目录，导致使用错误的 myid 、空的 znode ，可能发生脑裂。")])])]),s._v(" "),t("li",[s._v("如果想将一个 server 声明为 observer 角色，需要在其配置文件中加入："),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("peerType")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("observer")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),s._v("然后在所有 server 的配置文件中声明："),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("server.1:1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("10.0.0.1:2888:3888;2181:observer")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])]),s._v(" "),t("h3",{attrs:{id:"acl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#acl"}},[s._v("#")]),s._v(" ACL")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("znode 默认允许任何客户端读写。可以给单个 znode 设置 ACL 规则，控制其访问权限。")]),s._v(" "),t("ul",[t("li",[s._v("znode 的 ACL 规则不支持递归设置，也不支持继承，因此并不方便，不建议使用。")])])]),s._v(" "),t("li",[t("p",[s._v("相关命令：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("getAcl "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("               "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 读取 znode 的 ACL 规则")]),s._v("\nsetAcl "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("path"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("  "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("acl"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 设置 znode 的 ACL 规则（只能设置一次，再次设置则不生效）")]),s._v("\n      -R                    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 递归处理子节点")]),s._v("\naddauth "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("scheme"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("user:pwd"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建用户")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("ACL 规则的格式为 "),t("code",[s._v("scheme:user:permissions")])]),s._v(" "),t("ul",[t("li",[s._v("scheme 表示认证模式，分为以下几种："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("world     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 只定义了 anyone 用户，表示所有客户端，包括未登录的")]),s._v("\nauth      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 通过 addauth digest 创建的用户")]),s._v("\ndigest    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 与 auth 类似，但需要以哈希值形式输入密码，格式为 digest:<user>:<pwd_hash>:<permissions>")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("ip")]),s._v("        "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 限制客户端的 IP 地址，比如 ip:10.0.0.0/8:r")]),s._v("\nsasl      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 要求客户端通过 kerberos 的 SASL 认证")]),s._v("\nsuper     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 超级管理员，需要在 zk server 的启动命令中声明")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])])]),s._v(" "),t("li",[s._v("permissions 是一组权限的缩写："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("Admin     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许设置 ACL")]),s._v("\nCreate    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许创建子节点")]),s._v("\nDelete    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许删除当前节点")]),s._v("\nRead      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许读取")]),s._v("\nWrite     "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 允许写")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])])])]),s._v(" "),t("li",[t("p",[s._v("例：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("zk: localhost:2181"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("CONNECTED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" getAcl /test    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 新建 znode 的 ACL 不会继承父节点，而是默认为 `world:anyone:cdrwa`")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'world,'")]),s._v("anyone\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" cdrwa\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("zk: localhost:2181"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("CONNECTED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" setAcl /test world:anyone:a\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("zk: localhost:2181"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("CONNECTED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" get /test\nInsufficient permission "),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" /test                   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 报错表示权限不足")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("zk: localhost:2181"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("CONNECTED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" addauth digest tester:123456    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 创建用户，如果已存在该用户则是登录")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("zk: localhost:2181"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("CONNECTED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" setAcl /test auth:tester:cdrwa\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("zk: localhost:2181"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("CONNECTED"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" getAcl /test\n"),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'digest,'")]),s._v("tester:Sc9QxOxG72+Wzo/j15TxX5UOqQs"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("                      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 密码以哈希值形式保存")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" cdrwa\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br")])]),t("ul",[t("li",[s._v("创建一个新终端时，再次执行 addauth 命令，就会登录指定用户。")])])])]),s._v(" "),t("h3",{attrs:{id:"sasl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sasl"}},[s._v("#")]),s._v(" SASL")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("zk server 支持通过 JAAS 框架启用 SASL 认证。")]),s._v(" "),t("ul",[t("li",[s._v("默认不要求身份认证，可以被其它 server、client 直接连接，因此不安全。")]),s._v(" "),t("li",[s._v("可启用以下 SASL 认证机制：\n"),t("ul",[t("li",[s._v("DIGEST-MD5")]),s._v(" "),t("li",[s._v("Kerberos")])])])])]),s._v(" "),t("li",[t("p",[s._v("例：启用 DIGEST-MD5 认证")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("在 zoo.cfg 中加入：")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("quorum.auth.enableSasl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("true           # server 之间连接时是否启用 SASL 认证。默认为 false")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("quorum.auth.learnerRequireSasl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("true")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("quorum.auth.serverRequireSasl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("true    # 强制要求其它 server 连接到当前 server 时进行 SASL 认证。默认为 false")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("authProvider.1")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("org.apache.zookeeper.server.auth.SASLAuthenticationProvider  # 在被 client 连接时启用 SASL 认证")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("sessionRequireClientSASLAuth")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("true     # 强制要求 client 连接到当前 server 时进行 SASL 认证。默认为 false")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("ul",[t("li",[s._v("如果启用了客户端 SASL 认证，但不强制要求认证，则未通过认证的客户端依然可以访问 zk ，读写数据。除非节点设置了 ACL 规则，只允许 SASL 用户访问。")]),s._v(" "),t("li",[s._v("如果强制要求认证，而客户端未进行认证，则 zk 会拒绝连接，并记录报错日志："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("Client authentication scheme"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("ip"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" does not match with any of the expected authentication scheme "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("sasl"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(", closing session.\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])])]),s._v(" "),t("li",[t("p",[s._v("创建一个 jaas.conf 配置文件：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义一些用户。在当前 server 被其它 server 连接时，允许对方使用这些用户")]),s._v("\nQuorumServer "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      org.apache.zookeeper.server.auth.DigestLoginModule required\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# user_test="******"    # 按 user_<NAME>=<PASSWORD> 的格式定义用户')]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("user_server")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"******"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定当前 server 连接其它 server 时使用的用户")]),s._v("\nQuorumLearner "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      org.apache.zookeeper.server.auth.DigestLoginModule required\n      "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("username")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"server"')]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"******"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义一些用户。在当前 server 被 client 连接时，允许对方使用这些用户")]),s._v("\nServer "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    org.apache.zookeeper.server.auth.DigestLoginModule required\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("user_client")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"******"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("将 jaas.conf 拷贝到每个 zk 的配置目录下，并添加 java 启动参数来启用它：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SERVER_JVMFLAGS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-Djava.security.auth.login.config=/conf/jaas.conf"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("客户端连接 zk 时，需要使用以下 JAAS 配置文件：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("Client "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    org.apache.zookeeper.server.auth.DigestLoginModule required\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("username")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"client"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"******"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("可以声明以下环境变量，再执行 zkCli.sh ，试试能否作为客户端连接 zk ：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("CLIENT_JVMFLAGS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-Djava.security.auth.login.config=/conf/jaas.conf"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])])])])])}),[],!1,null,null,null);a.default=n.exports},663:function(s,a,t){"use strict";t.r(a);var e=t(1),n=Object(e.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[t("h1",{attrs:{id:"部署"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署"}},[s._v("#")]),s._v(" 部署")]),s._v(" "),t("h2",{attrs:{id:"部署-2"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#部署-2"}},[s._v("#")]),s._v(" 部署")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("下载二进制版：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token function"}},[s._v("wget")]),s._v(" https://mirrors.tuna.tsinghua.edu.cn/apache/kafka/2.6.0/kafka_2.13-2.6.0.tgz\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("解压后运行：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("bin/zookeeper-server-start.sh config/zookeeper.properties   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动 zookeeper 服务器")]),s._v("\nbin/kafka-server-start.sh     config/server.properties      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 启动 kafka broker 服务器")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])]),t("ul",[t("li",[s._v("部署 Kafka 集群时，需要先部署 zk 集群，然后让每个 broker 服务器连接到 zk ，即可相互发现，组成集群。\n"),t("ul",[t("li",[s._v("Kafka 发行版包含了 zk 的可执行文件，可以同时启动 kafka、zk 服务器，也可以在其它地方启动 zk 服务器。")])])]),s._v(" "),t("li",[s._v("Kafka 会尽快将数据写入磁盘存储，因此占用的内存一般不超过 6G ， CPU 平均负载为 2~4 核。\n"),t("ul",[t("li",[s._v("kafka-server-start.sh 中默认配置了以下环境变量，限制 Kafka 占用的内存："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KAFKA_HEAP_OPTS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"-Xmx1G -Xms1G"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])])]),s._v(" "),t("li",[s._v("声明以下环境变量，即可让 broker 开启 JMX 监控，监听一个端口："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("JMX_PORT")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9093")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v('# export JMX_OPTS="-Dcom.sun.management.jmxremote=true -Dcom.sun.management.jmxremote.authenticate=false"')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br")])])])])]),s._v(" "),t("li",[t("p",[s._v("或者用 docker-compose 部署：")]),s._v(" "),t("div",{staticClass:"language-yml line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-yml"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("version")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'3'")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("services")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("kafka")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("container_name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" kafka\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("image")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" bitnami/kafka"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("2.8.0\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("restart")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" unless"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v("stopped\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("environment")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# KAFKA_HEAP_OPTS: -Xmx1G -Xms1G")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ALLOW_PLAINTEXT_LISTENER")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'yes'")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("ports")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" 9092"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),t("span",{pre:!0,attrs:{class:"token number"}},[s._v("9092")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key atrule"}},[s._v("volumes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./config"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/bitnami/kafka/config\n      "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("-")]),s._v(" ./data"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),s._v("/bitnami/kafka/data\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br")])]),t("ul",[t("li",[s._v("Kafka 官方没有提供 Docker 镜像，这里采用社区提供的一个镜像。\n"),t("ul",[t("li",[s._v("该镜像会根据环境变量配置 server.properties 文件，这里直接挂载配置目录，通过 CUSTOM_INIT_SCRIPT 执行命令还原配置文件。")])])])])])]),s._v(" "),t("h2",{attrs:{id:"版本"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#版本"}},[s._v("#")]),s._v(" 版本")]),s._v(" "),t("ul",[t("li",[t("a",{attrs:{href:"https://kafka.apache.org/downloads",target:"_blank",rel:"noopener noreferrer"}},[s._v("Kafka 的版本列表"),t("OutboundLink")],1),s._v(" "),t("ul",[t("li",[s._v("例如 kafka_2.13-2.6.0.tgz ，前面的 2.13 是指 Scala 编译器的版本，后面的 2.6.0 是指 Kafka 的版本。")]),s._v(" "),t("li",[s._v("使用 Kafka 时，应该尽量让客户端与服务器的版本一致，避免不兼容。")])])]),s._v(" "),t("li",[s._v("v0.10.0.0\n"),t("ul",[t("li",[s._v("：于 2016 年发布。新增了 Kafka Streams API ，用于流处理。")])])]),s._v(" "),t("li",[s._v("v0.11.0.0\n"),t("ul",[t("li",[s._v("：于 2017 年发布。改进了消息格式。支持事务、幂等性。")])])]),s._v(" "),t("li",[s._v("v1.0.0\n"),t("ul",[t("li",[s._v("：于 2017 年发布。")])])]),s._v(" "),t("li",[s._v("v1.1.0\n"),t("ul",[t("li",[s._v("：于 2018 年发布。")]),s._v(" "),t("li",[s._v("改进了 Controller ，提高更改 leader replica 的效率，将 broker 正常终止的耗时从几分钟减少到几秒。")])])]),s._v(" "),t("li",[s._v("v2.0.0\n"),t("ul",[t("li",[s._v("：于 2018 年发布。")])])]),s._v(" "),t("li",[s._v("v2.8.0\n"),t("ul",[t("li",[s._v("：于 2021 年发布。支持用内置的 KRaft 协议取代 zookeeper ，提高 Kafka 的稳定性、内部通信效率。")])])])]),s._v(" "),t("h2",{attrs:{id:"配置"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#配置"}},[s._v("#")]),s._v(" 配置")]),s._v(" "),t("ul",[t("li",[s._v("kafka 的配置目录示例："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("config/\n├── consumer.properties       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 消费者的配置文件")]),s._v("\n├── log4j.properties          "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Java 日志的配置文件")]),s._v("\n├── producer.properties       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 生产者的配置文件")]),s._v("\n├── server.properties         "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# broker 的配置文件")]),s._v("\n└── zookeeper.properties      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# zk 的配置文件")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br")])]),t("ul",[t("li",[s._v("启动 broker 时只需读取 server.properties、log4j.properties 文件。")])])])]),s._v(" "),t("h3",{attrs:{id:"server-properties"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#server-properties"}},[s._v("#")]),s._v(" server.properties")]),s._v(" "),t("p",[s._v("配置示例：")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关于 kafka 集群")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("broker.id")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("0                               # 该 broker 在 Kafka 集群中的唯一标识符，默认为 -1 ，必须赋值为一个非负整数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("listeners")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("PLAINTEXT://0.0.0.0:9092        # broker 监听的 Socket 地址")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("advertised.listeners")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("PLAINTEXT://10.0.0.1:9092  # 当前 broker 供其它 broker 和客户端访问的地址。它会在 zk 中公布，默认采用 listeners 的值")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关于 zk")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("zookeeper.connect")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("10.0.0.1:2181,10.0.0.2:2181,10.0.0.3:2181   # 要连接的 zk 节点，多个地址之间用逗号分隔")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# zookeeper.connection.timeout.ms=6000")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 保存数据日志")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("log.dirs")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("/data/kafka-logs                 # broker 存放数据日志的目录，如果有多个目录则用逗号分隔")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# log.roll.ms=null                        # 每个 LogSegment 的最长写入时间，超过该值则会创建一个新的 LogSegment 用于写入。默认未设置，采用 log.roll.hours 的值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# log.roll.hours=168                      # 默认为 7*24h")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# log.segment.bytes=1073741824            # 每个 LogSegment 的最大体积，超过该值则会创建一个新的 LogSegment 用于写入。默认为 1G")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# log.flush.interval.messages=null        # 每个日志分区，每接收多少个消息就 flush 一次，即将内存中的数据写入磁盘")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# log.flush.interval.ms=null              # 每个日志分区，每经过多少毫秒就 flush 一次")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# log.flush.offset.checkpoint.interval.ms=60000 # 每隔多少毫秒，刷新一次 checkpoint")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 清理数据日志")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# log.cleanup.policy=delete               # LogSegment 的清理策略，可以是 delete、compact")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# log.retention.check.interval.ms=300000  # 每隔多久检查一次各个 LogSegment 是否应该清理。默认为 5min")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("log.retention.bytes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("10737418240           # 限制单个 partition 的大小，超过则删除其中最旧的 LogSegment 。默认为 -1 ，即不限制")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# log.retention.ms=null                   # 限制单个 LogSegment 的保存时长，超过则删除。默认未设置，采用 log.retention.minutes 的值。如果设置为 -1 ，则不限制")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# log.retention.minutes=null              # 默认未设置，采用 log.retention.hours 的值")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("log.retention.hours")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("24                    # 默认为 7*24h")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关于 topic")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# auto.create.topics.enable=true          # 当客户端生产、消费一个不存在的 topic 时，是否自动创建该 topic")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# delete.topic.enable=true                # 是否允许删除 topic")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# compression.type=producer               # broker 对消息的压缩格式。取值为 producer 则采用与生产者相同的压缩格式")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("message.max.bytes")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("10485760                # 允许接收的最大 batch.size ，默认为 1M ，这里设置为 10M 。该参数作用于所有 topic ，也可以对每个 topic 分别设置 max.message.bytes")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关于 partition")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("num.partitions")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("6                          # 新建 topic 的默认 partition 数，默认为 3 。这里设置为 6 ，当 consumer group 包含 1、2、3 个成员时都可以平均分配")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("default.replication.factor")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("2              # 新建 partition 的默认副本数，默认为 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# offsets.topic.num.partitions=50         # __consumer_offsets 主题的 partition 数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# offsets.topic.replication.factor=3      # __consumer_offsets 主题的每个 partition 的副本数。部署单节点时必须减至 1")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# auto.leader.rebalance.enable=true           # 是否自动进行 Partition Rebalance")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# leader.imbalance.check.interval.seconds=300 # Controller 每隔多久检查一次是否执行 Partition Rebalance")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# leader.imbalance.per.broker.percentage=10   # 如果该 broker 上的非 preferred leader 超过该百分比，则进行 Partition Rebalance")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关于进程")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# background.threads=10                   # broker 处理后台任务的线程数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# num.network.threads=3                   # broker 处理网络请求的线程数")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# num.io.threads=8                        # broker 处理磁盘 IO 的线程数，应该不小于磁盘数")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 关于网络")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("session.timeout.ms")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("60000                  # 会话超时，默认为 10s 。如果在该时长内 broker 一直没有收到 consumer 的 heartbeat 请求，则认为 consumer 下线")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# heartbeat.interval.ms=3000              # broker 等待 heartbeat 请求的超时时间。通常设置为 session.timeout.ms 的 1/3 ，以允许超时两次")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# socket.send.buffer.bytes=102400         # socket 发送消息的缓冲区大小，默认为 100K")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# socket.receive.buffer.bytes=102400      # socket 接收消息的缓冲区大小，默认为 100K 。网络延迟高于 1ms 时，增加 buffer 有利于提高传输效率，但会占用更多内存")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# socket.request.max.bytes=104857600      # socket 允许接收的单个消息的最大大小，默认为 100M")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br"),t("span",{staticClass:"line-number"},[s._v("19")]),t("br"),t("span",{staticClass:"line-number"},[s._v("20")]),t("br"),t("span",{staticClass:"line-number"},[s._v("21")]),t("br"),t("span",{staticClass:"line-number"},[s._v("22")]),t("br"),t("span",{staticClass:"line-number"},[s._v("23")]),t("br"),t("span",{staticClass:"line-number"},[s._v("24")]),t("br"),t("span",{staticClass:"line-number"},[s._v("25")]),t("br"),t("span",{staticClass:"line-number"},[s._v("26")]),t("br"),t("span",{staticClass:"line-number"},[s._v("27")]),t("br"),t("span",{staticClass:"line-number"},[s._v("28")]),t("br"),t("span",{staticClass:"line-number"},[s._v("29")]),t("br"),t("span",{staticClass:"line-number"},[s._v("30")]),t("br"),t("span",{staticClass:"line-number"},[s._v("31")]),t("br"),t("span",{staticClass:"line-number"},[s._v("32")]),t("br"),t("span",{staticClass:"line-number"},[s._v("33")]),t("br"),t("span",{staticClass:"line-number"},[s._v("34")]),t("br"),t("span",{staticClass:"line-number"},[s._v("35")]),t("br"),t("span",{staticClass:"line-number"},[s._v("36")]),t("br"),t("span",{staticClass:"line-number"},[s._v("37")]),t("br"),t("span",{staticClass:"line-number"},[s._v("38")]),t("br"),t("span",{staticClass:"line-number"},[s._v("39")]),t("br"),t("span",{staticClass:"line-number"},[s._v("40")]),t("br"),t("span",{staticClass:"line-number"},[s._v("41")]),t("br"),t("span",{staticClass:"line-number"},[s._v("42")]),t("br"),t("span",{staticClass:"line-number"},[s._v("43")]),t("br"),t("span",{staticClass:"line-number"},[s._v("44")]),t("br"),t("span",{staticClass:"line-number"},[s._v("45")]),t("br"),t("span",{staticClass:"line-number"},[s._v("46")]),t("br"),t("span",{staticClass:"line-number"},[s._v("47")]),t("br"),t("span",{staticClass:"line-number"},[s._v("48")]),t("br"),t("span",{staticClass:"line-number"},[s._v("49")]),t("br"),t("span",{staticClass:"line-number"},[s._v("50")]),t("br"),t("span",{staticClass:"line-number"},[s._v("51")]),t("br"),t("span",{staticClass:"line-number"},[s._v("52")]),t("br")])]),t("ul",[t("li",[s._v("可以让 broker 监听多个地址："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("listeners")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("PLAINTEXT://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093             "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 定义两个 listener 。当客户端通过某个 listener 连接时，就采用相应的 advertised.listeners")]),s._v("\nadvertised.listeners"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("PLAINTEXT://10.0.0.1:9092,OUTSIDE://1.1.1.1:9093\nlistener.security.protocol.map"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("PLAINTEXT:PLAINTEXT,OUTSIDE:PLAINTEXT  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# advertised.listeners 的解析格式")]),s._v("\ninter.broker.listener.name"),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("PLAINTEXT                                  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# broker 之间通信时采用的 listener")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br")])])]),s._v(" "),t("li",[s._v("增加 partition 数量有利于提高并发规模，但会增加 zk 的负载。\n"),t("ul",[t("li",[s._v("Kafka v1.1.0 改进了 Controller ，每个 broker 建议最多存储 4k 个 partition（包括副本数），每个集群最多 20w 个。")]),s._v(" "),t("li",[s._v("如果用 KRaft 协议取代 zookeeper ，则可以支持数百万的 partition 。")])])])]),s._v(" "),t("h3",{attrs:{id:"producer-properties"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#producer-properties"}},[s._v("#")]),s._v(" producer.properties")]),s._v(" "),t("p",[s._v("配置示例：")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("bootstrap.servers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("10.0.0.1:9092,10.0.0.2:9092   # 初始连接的 broker 地址。先通过它获取所有 broker 的 advertised.listeners 地址，再实际连接")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# client.id=''                  # 客户端的 ID")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# acks=1                        # 判断消息发送成功的策略")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取值为 0 ，则不等待 broker 的回复，直接认为消息已发送成功")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取值为 1 ，则等待 leader replica 确认接收消息")]),s._v("\n  "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 取值为 all ，则等待消息被同步到所有 replica")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# retries=2147483647            # 发送消息失败时，如果不超过 delivery.timeout.ms 时长，则尝试重发多少次")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# batch.size=16384              # 限制每个 batch 的大小，默认为 16K")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# buffer.memory=33554432        # 限制生产者用于发送消息的缓冲区大小，默认为 32M")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# compression.type=none         # 发送消息时，batch 采用的压缩格式，默认不压缩")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("max.request.size")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("10485760       # 限制生产者向 broker 发送的每个请求的大小，这限制了每个请求包含的 batch （压缩之后）数量。默认为 1M ，这里设置为 10M")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# max.block.ms=60000            # 生产者调用 send() 等方法时，如果 buffer.memory 不足或 metadata 获取不到，阻塞等待的超时时间")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# linger.ms=0                   # 生产者创建每个 batch 时，等待多久才发送。调大该值，有助于让每个 batch 包含更多消息。特别是当新增消息的速度，比发送消息的速度更快时")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# request.timeout.ms=30000      # 发送请求给 broker 时，等待响应的超时时间")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# delivery.timeout.ms=120000    # 生产者调用 send() 方法发送消息的超时时间，该值应该不低于 linger.ms + request.timeout.ms")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("ul",[t("li",[t("p",[s._v("producer 向同一个 partition 生产多个消息时，会打包为一批（batch）再发送。")]),s._v(" "),t("ul",[t("li",[s._v("如果出现的第一个消息就超过 batch.size 限制，则依然会打包成一个 batch ，但只包含该消息。")]),s._v(" "),t("li",[s._v("Kafka 生产消息、消费消息、同步 replica 时，都会将消息打包成 batch 再传输，从而提高传输效率。\n"),t("ul",[t("li",[s._v("每个 batch 可能包含 1~N 个消息，每次网络请求可能传输 0~N 个 batch 。")])])])])]),s._v(" "),t("li",[t("p",[s._v("batch.size 不能大于 producer 的 max.request.size ，否则过大的 batch 不能装载到请求中。")]),s._v(" "),t("ul",[t("li",[s._v("不能大于 broker 的 message.max.bytes ，否则请求不能被接收。")]),s._v(" "),t("li",[s._v("不能大于 consumer 的 fetch.max.bytes ，否则不能被消费。")])])]),s._v(" "),t("li",[t("p",[s._v("Kafka 支持将生产的消息进行压缩。")]),s._v(" "),t("ul",[t("li",[s._v("一般流程：\n"),t("ol",[t("li",[s._v("producer 将消息 batch 以某种压缩格式发送。\n"),t("ul",[t("li",[s._v("增加 batch.size 有利于增加重复的消息内容，提高压缩率。")])])]),s._v(" "),t("li",[s._v("broker 接收消息，默认以同种压缩格式存储。")]),s._v(" "),t("li",[s._v("consumer 拉取消息，自动识别其压缩格式，解压。")])])]),s._v(" "),t("li",[s._v("优点：\n"),t("ul",[t("li",[s._v("减少占用的磁盘空间。")]),s._v(" "),t("li",[s._v("减少网络 IO 量，提高 Kafka 吞吐量。")]),s._v(" "),t("li",[s._v("如果 CPU 足够、网速不足，则采用压缩会减少生产、消费的耗时。否则会增加耗时。")])])]),s._v(" "),t("li",[s._v("缺点：\n"),t("ul",[t("li",[s._v("占用更多 CPU 。")])])]),s._v(" "),t("li",[s._v("支持多种压缩格式："),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("none      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 不压缩")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token function"}},[s._v("gzip")]),s._v("      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 压缩率大概为 20% ，CPU 负载较高")]),s._v("\nlz4       "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 压缩率较低，CPU 负载较低，推荐使用")]),s._v("\nsnappy    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 性能比 lz4 较差")]),s._v("\nzstd      "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 压缩率比 gzip 更低")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])])])])]),s._v(" "),t("h3",{attrs:{id:"consumer-properties"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#consumer-properties"}},[s._v("#")]),s._v(" consumer.properties")]),s._v(" "),t("p",[s._v("配置示例：")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("bootstrap.servers")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("10.0.0.1:9092,10.0.0.2:9092")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# group.id=null                     # 消费者组的名称")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# group.instance.id=null            # 给该参数赋值为非空字符串时， consumer 会声明为 Static Member 类型，并采用该参数的值作为 client.id")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# allow.auto.create.topics=false    # 订阅或主动分配 topic 时，如果该 topic 不存在，是否自动创建")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# auto.offset.reset=latest          # 如果 Coordinator 没有记录 Consumer Committed Offset （可能是未创建、已过期删除），则从哪个 offset 处开始消费")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 可选的取值：")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# earliest : 采用 partition 可见范围内最老的 offset")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# latest   : 采用 partition 最新的 offset ，即 High Watemark")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# none     ：让 consumer 抛出异常")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# enable.auto.commit=true           # 是否自动在后台提交 Consumer Committed Offset 。可以关闭该功能，由用户主动提交，更可靠")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# auto.commit.interval.ms=5000      # 自动提交的间隔时长")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# max.poll.records=500              # consumer 每次调用 poll() 方法，最多拉取多少个消息。这会影响，但不会决定 fetch 请求的数量")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# max.partition.fetch.bytes=1048576 # 每次发出 fetch 请求时，从每个 partition 最多获取多少数据。默认为 1M 。如果获取的第一个消息就超过该限制，则只返回该消息")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fetch.min.bytes=1                 # 每次发出 fetch 请求时，broker 应该至少累积多少数据才返回响应")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fetch.max.wait.ms=500             # 每次发出 fetch 请求时，broker 如果没有满足 fetch.min.bytes 的数据，则最多等待指定时长就返回响应")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# fetch.max.bytes=57671680          # 每次发出 fetch 请求时，预期 broker 最多返回的数据量。默认为 55M")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br"),t("span",{staticClass:"line-number"},[s._v("10")]),t("br"),t("span",{staticClass:"line-number"},[s._v("11")]),t("br"),t("span",{staticClass:"line-number"},[s._v("12")]),t("br"),t("span",{staticClass:"line-number"},[s._v("13")]),t("br"),t("span",{staticClass:"line-number"},[s._v("14")]),t("br"),t("span",{staticClass:"line-number"},[s._v("15")]),t("br"),t("span",{staticClass:"line-number"},[s._v("16")]),t("br"),t("span",{staticClass:"line-number"},[s._v("17")]),t("br"),t("span",{staticClass:"line-number"},[s._v("18")]),t("br")])]),t("ul",[t("li",[s._v("生产者、消费者都有 client.id ，允许重复。消费者还有 group.id 。")]),s._v(" "),t("li",[s._v("用户调用 consumer 的 poll() 方法，即可消费消息。\n"),t("ul",[t("li",[s._v("consumer 会在后台向 broker 发送 fetch 请求，拉取数据，暂存到内存中的队列中，直到用户消费之后才删除。")]),s._v(" "),t("li",[s._v("consumer 占用的最大内存大概为 max.partition.fetch.bytes * partition_count ，或则 fetch.min.bytes * broker_count 。")])])])]),s._v(" "),t("h3",{attrs:{id:"sasl"}},[t("a",{staticClass:"header-anchor",attrs:{href:"#sasl"}},[s._v("#")]),s._v(" SASL")]),s._v(" "),t("ul",[t("li",[t("p",[s._v("Kafka broker 支持通过 JAAS 框架启用 SASL 认证。")]),s._v(" "),t("ul",[t("li",[s._v("默认不要求身份认证，可以被其它 broker、client 直接连接，因此不安全。")]),s._v(" "),t("li",[s._v("可启用以下 SASL 认证机制：\n"),t("ul",[t("li",[s._v("PLAIN")]),s._v(" "),t("li",[s._v("GSSAPI (Kerberos)")]),s._v(" "),t("li",[s._v("OAUTHBEARER")]),s._v(" "),t("li",[s._v("SCRAM-SHA-256")])])])])]),s._v(" "),t("li",[t("p",[s._v("对于通过身份认证的用户，Kafka 支持配置 ACL 规则，控制用户的访问权限。")]),s._v(" "),t("ul",[t("li",[s._v("默认的 ACL 规则为空，因此不允许用户访问任何资源，除非是 super 用户。")])])]),s._v(" "),t("li",[t("p",[s._v("Kafka 的通信数据默认为 PLAINTEXT 形式，即未加密。")]),s._v(" "),t("ul",[t("li",[s._v("可以启用 SSL 加密通信，但会增加通信延迟。")]),s._v(" "),t("li",[s._v("是否启用 SSL ，与是否启用 SASL 认证无关。")])])]),s._v(" "),t("li",[t("p",[s._v("例：启用 PLAIN 认证")]),s._v(" "),t("ol",[t("li",[t("p",[s._v("修改 server.properties ，将通信协议从默认的 "),t("code",[s._v("PLAINTEXT://")]),s._v(" 改为 "),t("code",[s._v("SASL_PLAINTEXT://")]),s._v(" ，即采用 SASL 认证 + 未加密通信。")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("listeners")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("SASL_PLAINTEXT://0.0.0.0:9092")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("advertised.listeners")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("SASL_PLAINTEXT://10.0.0.1:9092")]),s._v("\n\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("security.inter.broker.protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("SASL_PLAINTEXT     # broker 之间的通信协议。默认为 PLAINTEXT ，即不启用 SASL 认证 + 未加密传输")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("sasl.mechanism.inter.broker.protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("PLAIN        # broker 之间连接时的 SASL 认证机制，默认为 GSSAPI")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("sasl.enabled.mechanisms")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("PLAIN                     # broker 启用的 SASL 认证机制列表")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("authorizer.class.name")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("kafka.security.auth.SimpleAclAuthorizer # 开启 ACL")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("super.users")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("User:broker;User:client               # 将一些用户声明为超级用户")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("创建一个 jaas.conf 配置文件：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("KafkaServer "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    org.apache.kafka.common.security.plain.PlainLoginModule required\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 指定当前 broker 连接其它 broker 时使用的用户")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("username")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"broker"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"******"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 按 user_<NAME>=<PASSWORD> 的格式定义用户。在当前 broker 被其它 broker 或 client 连接时，允许对方使用这些用户")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("user_broker")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"******"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("user_client")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"******"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("   "),t("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 注意这是一条语句，末尾要加分号")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br"),t("span",{staticClass:"line-number"},[s._v("6")]),t("br"),t("span",{staticClass:"line-number"},[s._v("7")]),t("br"),t("span",{staticClass:"line-number"},[s._v("8")]),t("br"),t("span",{staticClass:"line-number"},[s._v("9")]),t("br")])])]),s._v(" "),t("li",[t("p",[s._v("将 jaas.conf 拷贝到每个 broker 的配置目录下，并添加 java 启动参数来启用它：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[t("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("KAFKA_OPTS")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v("'-Djava.security.auth.login.config=/kafka/config/jaas.conf'")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])]),t("p",[s._v("执行 kafka-server-start.sh、kafka-console-producer.sh 等脚本时会自动应用该配置。")])]),s._v(" "),t("li",[t("p",[s._v("客户端连接 broker 时，需要在 producer.properties、consumer.properties 中加入配置：")]),s._v(" "),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("security.protocol")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("SASL_PLAINTEXT")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("sasl.mechanism")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("PLAIN")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("sasl.jaas.config")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("org.apache.kafka.common.security.plain.PlainLoginModule required \\")]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("username")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v('"client" \\')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("password")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v('"******";')]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])]),t("p",[s._v("其中的账号密码也可以配置在 jaas.conf 中：")]),s._v(" "),t("div",{staticClass:"language-sh line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-sh"}},[t("code",[s._v("KafkaClient "),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    org.apache.kafka.common.security.plain.PlainLoginModule required\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("username")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"client"')]),s._v("\n    "),t("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("password")]),t("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token string"}},[s._v('"******"')]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n"),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br"),t("span",{staticClass:"line-number"},[s._v("2")]),t("br"),t("span",{staticClass:"line-number"},[s._v("3")]),t("br"),t("span",{staticClass:"line-number"},[s._v("4")]),t("br"),t("span",{staticClass:"line-number"},[s._v("5")]),t("br")])])])])]),s._v(" "),t("li",[t("p",[s._v("上述为 broker 被其它 broker、client 连接时的身份认证。而 broker 连接到 zk 时，也可启用 SASL 认证，配置方法见 zk 文档。")]),s._v(" "),t("ul",[t("li",[s._v("此时建议在 server.properties 中加入："),t("div",{staticClass:"language-ini line-numbers-mode"},[t("pre",{pre:!0,attrs:{class:"language-ini"}},[t("code",[t("span",{pre:!0,attrs:{class:"token key attr-name"}},[s._v("zookeeper.set.acl")]),t("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),t("span",{pre:!0,attrs:{class:"token value attr-value"}},[s._v("true  # 将 Kafka 在 zk 中存储的数据设置 ACL 规则：允许被所有用户读取，但只允许 Kafka 编辑")]),s._v("\n")])]),s._v(" "),t("div",{staticClass:"line-numbers-wrapper"},[t("span",{staticClass:"line-number"},[s._v("1")]),t("br")])])])])])])])}),[],!1,null,null,null);a.default=n.exports}}]);